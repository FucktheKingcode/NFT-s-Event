{
	"id": "87d6a24f68883099d4e54d6ecc0f74dc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTEventQuestGame.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NFTEventVoteGame is ERC721, Ownable {\n    uint256 public totalAddresses = 0;\n    string private uri;\n    struct AddressInfo {\n        bool someValue;\n    }\n\n    mapping(address => bool) public addressExists;\n    mapping(uint256 => AddressInfo) public addressInfoMapTrue;\n    mapping(uint256 => AddressInfo) public addressInfoMapFalse;\n    uint256[] public addressKeys;\n\n    event AddressAdded(uint256 indexed tokenId, address indexed addressUser, bool someValue);\n\n    constructor(address initialOwner, string memory _name, string memory _symbol, string memory _uri) \n        ERC721(_name, _symbol)\n        Ownable(initialOwner) {\n            uri =_uri;\n        }\n\n    function pushAddress(bool someValue) external {\n        require(!addressExists[msg.sender], \"Address already exists\");\n\n        uint256 tokenId = totalAddresses;\n        addressExists[msg.sender] = true;\n        addressKeys.push(tokenId);\n\n        AddressInfo memory newAddressInfo = AddressInfo(someValue);\n        (someValue ? addressInfoMapTrue : addressInfoMapFalse)[tokenId] = newAddressInfo;\n\n        totalAddresses++;\n        emit AddressAdded(tokenId, msg.sender, someValue);\n    }\n\n    function mintNFTs(bool answer) external {\n        address[] memory matchingAddresses = getAddressesByValue(answer);\n\n        for (uint256 i = 0; i < matchingAddresses.length; i++) {\n            uint256 tokenId = totalAddresses + i;\n            _mint(matchingAddresses[i], tokenId);\n            emit AddressAdded(tokenId, matchingAddresses[i], true);\n        }\n\n        totalAddresses += matchingAddresses.length;\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return uri;\n    }\n\n    function getAllAddresses() external view returns (bool[] memory) {\n        bool[] memory allAddresses = new bool[](totalAddresses);\n        mapping(uint256 => AddressInfo) storage selectedMap = addressInfoMapTrue;\n\n        for (uint256 i = 0; i < totalAddresses; i++) {\n            allAddresses[i] = selectedMap[addressKeys[i]].someValue;\n        }\n        return allAddresses;\n    }\n\n    function getAddressesByValue(bool desiredValue) public view returns (address[] memory) {\n        address[] memory matchingAddresses = new address[](totalAddresses);\n        uint256 matchingCount = 0;\n\n        mapping(uint256 => AddressInfo) storage selectedMap = (desiredValue ? addressInfoMapTrue : addressInfoMapFalse);\n\n        for (uint256 i = 0; i < totalAddresses; i++) {\n            uint256 tokenId = addressKeys[i];\n            if (selectedMap[tokenId].someValue == desiredValue) {\n                matchingAddresses[matchingCount++] = ownerOf(tokenId);\n            }\n        }\n\n        assembly {\n            mstore(matchingAddresses, matchingCount)\n        }\n\n        return matchingAddresses;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventQuestGame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventQuestGame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventQuestGame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTEventQuestGame.sol": {
				"NFTEventVoteGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "addressUser",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "someValue",
									"type": "bool"
								}
							],
							"name": "AddressAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addressInfoMapFalse",
							"outputs": [
								{
									"internalType": "bool",
									"name": "someValue",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addressInfoMapTrue",
							"outputs": [
								{
									"internalType": "bool",
									"name": "someValue",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addressKeys",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "desiredValue",
									"type": "bool"
								}
							],
							"name": "getAddressesByValue",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllAddresses",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "",
									"type": "bool[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "answer",
									"type": "bool"
								}
							],
							"name": "mintNFTs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "someValue",
									"type": "bool"
								}
							],
							"name": "pushAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAddresses",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTEventQuestGame.sol\":170:2974  contract NFTEventVoteGame is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTEventQuestGame.sol\":253:254  0 */\n  0x00\n    /* \"contracts/NFTEventQuestGame.sol\":221:254  uint256 public totalAddresses = 0 */\n  0x07\n  sstore\n    /* \"contracts/NFTEventQuestGame.sol\":648:842  constructor(address initialOwner, string memory _name, string memory _symbol, string memory _uri) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTEventQuestGame.sol\":794:806  initialOwner */\n  dup4\n    /* \"contracts/NFTEventQuestGame.sol\":762:767  _name */\n  dup4\n    /* \"contracts/NFTEventQuestGame.sol\":769:776  _symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NFTEventQuestGame.sol\":827:831  _uri */\n  dup1\n    /* \"contracts/NFTEventQuestGame.sol\":822:825  uri */\n  0x08\n    /* \"contracts/NFTEventQuestGame.sol\":822:831  uri =_uri */\n  swap1\n  dup2\n  tag_18\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/NFTEventQuestGame.sol\":648:842  constructor(address initialOwner, string memory _name, string memory _symbol, string memory _uri) ... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/NFTEventQuestGame.sol\":170:2974  contract NFTEventVoteGame is ERC721, Ownable {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_21:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_23:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_64\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_66\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_67:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_69\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_28:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_29:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_30:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_31:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_32:\n    /* \"#utility.yul\":1468:1495   */\n  tag_75\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_30\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_77\n  tag_31\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1541:1629   */\ntag_76:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_33:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_79\n  tag_21\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_80\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_32\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_34:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_83\n  tag_31\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1945:2001   */\ntag_82:\n    /* \"#utility.yul\":2019:2048   */\n  tag_84\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_30\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2367   */\ntag_35:\n    /* \"#utility.yul\":2202:2203   */\n  0x00\n    /* \"#utility.yul\":2212:2325   */\ntag_86:\n    /* \"#utility.yul\":2226:2232   */\n  dup4\n    /* \"#utility.yul\":2223:2224   */\n  dup2\n    /* \"#utility.yul\":2220:2233   */\n  lt\n    /* \"#utility.yul\":2212:2325   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2311:2312   */\n  dup1\n    /* \"#utility.yul\":2306:2309   */\n  dup3\n    /* \"#utility.yul\":2302:2313   */\n  add\n    /* \"#utility.yul\":2296:2314   */\n  mload\n    /* \"#utility.yul\":2292:2293   */\n  dup2\n    /* \"#utility.yul\":2287:2290   */\n  dup5\n    /* \"#utility.yul\":2283:2294   */\n  add\n    /* \"#utility.yul\":2276:2315   */\n  mstore\n    /* \"#utility.yul\":2248:2250   */\n  0x20\n    /* \"#utility.yul\":2245:2246   */\n  dup2\n    /* \"#utility.yul\":2241:2251   */\n  add\n    /* \"#utility.yul\":2236:2251   */\n  swap1\n  pop\n    /* \"#utility.yul\":2212:2325   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2359:2360   */\n  0x00\n    /* \"#utility.yul\":2350:2356   */\n  dup5\n    /* \"#utility.yul\":2345:2348   */\n  dup5\n    /* \"#utility.yul\":2341:2357   */\n  add\n    /* \"#utility.yul\":2334:2361   */\n  mstore\n    /* \"#utility.yul\":2183:2367   */\n  pop\n    /* \"#utility.yul\":2121:2367   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2373:2807   */\ntag_36:\n    /* \"#utility.yul\":2462:2467   */\n  0x00\n    /* \"#utility.yul\":2487:2553   */\n  tag_90\n    /* \"#utility.yul\":2503:2552   */\n  tag_91\n    /* \"#utility.yul\":2545:2551   */\n  dup5\n    /* \"#utility.yul\":2503:2552   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2487:2553   */\n  tag_33\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2478:2553   */\n  swap1\n  pop\n    /* \"#utility.yul\":2576:2582   */\n  dup3\n    /* \"#utility.yul\":2569:2574   */\n  dup2\n    /* \"#utility.yul\":2562:2583   */\n  mstore\n    /* \"#utility.yul\":2614:2618   */\n  0x20\n    /* \"#utility.yul\":2607:2612   */\n  dup2\n    /* \"#utility.yul\":2603:2619   */\n  add\n    /* \"#utility.yul\":2652:2655   */\n  dup5\n    /* \"#utility.yul\":2643:2649   */\n  dup5\n    /* \"#utility.yul\":2638:2641   */\n  dup5\n    /* \"#utility.yul\":2634:2650   */\n  add\n    /* \"#utility.yul\":2631:2656   */\n  gt\n    /* \"#utility.yul\":2628:2740   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2659:2738   */\n  tag_93\n  tag_29\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2628:2740   */\ntag_92:\n    /* \"#utility.yul\":2749:2801   */\n  tag_94\n    /* \"#utility.yul\":2794:2800   */\n  dup5\n    /* \"#utility.yul\":2789:2792   */\n  dup3\n    /* \"#utility.yul\":2784:2787   */\n  dup6\n    /* \"#utility.yul\":2749:2801   */\n  tag_35\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2468:2807   */\n  pop\n    /* \"#utility.yul\":2373:2807   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2827:3182   */\ntag_37:\n    /* \"#utility.yul\":2894:2899   */\n  0x00\n    /* \"#utility.yul\":2943:2946   */\n  dup3\n    /* \"#utility.yul\":2936:2940   */\n  0x1f\n    /* \"#utility.yul\":2928:2934   */\n  dup4\n    /* \"#utility.yul\":2924:2941   */\n  add\n    /* \"#utility.yul\":2920:2947   */\n  slt\n    /* \"#utility.yul\":2910:3032   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2951:3030   */\n  tag_97\n  tag_28\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2910:3032   */\ntag_96:\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3055:3068   */\n  mload\n    /* \"#utility.yul\":3086:3176   */\n  tag_98\n    /* \"#utility.yul\":3172:3175   */\n  dup5\n    /* \"#utility.yul\":3164:3170   */\n  dup3\n    /* \"#utility.yul\":3157:3161   */\n  0x20\n    /* \"#utility.yul\":3149:3155   */\n  dup7\n    /* \"#utility.yul\":3145:3162   */\n  add\n    /* \"#utility.yul\":3086:3176   */\n  tag_36\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3077:3176   */\n  swap2\n  pop\n    /* \"#utility.yul\":2900:3182   */\n  pop\n    /* \"#utility.yul\":2827:3182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:4527   */\ntag_3:\n    /* \"#utility.yul\":3315:3321   */\n  0x00\n    /* \"#utility.yul\":3323:3329   */\n  dup1\n    /* \"#utility.yul\":3331:3337   */\n  0x00\n    /* \"#utility.yul\":3339:3345   */\n  dup1\n    /* \"#utility.yul\":3388:3391   */\n  0x80\n    /* \"#utility.yul\":3376:3385   */\n  dup6\n    /* \"#utility.yul\":3367:3374   */\n  dup8\n    /* \"#utility.yul\":3363:3386   */\n  sub\n    /* \"#utility.yul\":3359:3392   */\n  slt\n    /* \"#utility.yul\":3356:3476   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3395:3474   */\n  tag_101\n  tag_22\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3356:3476   */\ntag_100:\n    /* \"#utility.yul\":3515:3516   */\n  0x00\n    /* \"#utility.yul\":3540:3604   */\n  tag_102\n    /* \"#utility.yul\":3596:3603   */\n  dup8\n    /* \"#utility.yul\":3587:3593   */\n  dup3\n    /* \"#utility.yul\":3576:3585   */\n  dup9\n    /* \"#utility.yul\":3572:3594   */\n  add\n    /* \"#utility.yul\":3540:3604   */\n  tag_27\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3530:3604   */\n  swap5\n  pop\n    /* \"#utility.yul\":3486:3614   */\n  pop\n    /* \"#utility.yul\":3674:3676   */\n  0x20\n    /* \"#utility.yul\":3663:3672   */\n  dup6\n    /* \"#utility.yul\":3659:3677   */\n  add\n    /* \"#utility.yul\":3653:3678   */\n  mload\n    /* \"#utility.yul\":3705:3723   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3697:3703   */\n  dup2\n    /* \"#utility.yul\":3694:3724   */\n  gt\n    /* \"#utility.yul\":3691:3808   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3727:3806   */\n  tag_104\n  tag_23\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3691:3808   */\ntag_103:\n    /* \"#utility.yul\":3832:3906   */\n  tag_105\n    /* \"#utility.yul\":3898:3905   */\n  dup8\n    /* \"#utility.yul\":3889:3895   */\n  dup3\n    /* \"#utility.yul\":3878:3887   */\n  dup9\n    /* \"#utility.yul\":3874:3896   */\n  add\n    /* \"#utility.yul\":3832:3906   */\n  tag_37\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3822:3906   */\n  swap4\n  pop\n    /* \"#utility.yul\":3624:3916   */\n  pop\n    /* \"#utility.yul\":3976:3978   */\n  0x40\n    /* \"#utility.yul\":3965:3974   */\n  dup6\n    /* \"#utility.yul\":3961:3979   */\n  add\n    /* \"#utility.yul\":3955:3980   */\n  mload\n    /* \"#utility.yul\":4007:4025   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3999:4005   */\n  dup2\n    /* \"#utility.yul\":3996:4026   */\n  gt\n    /* \"#utility.yul\":3993:4110   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4029:4108   */\n  tag_107\n  tag_23\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3993:4110   */\ntag_106:\n    /* \"#utility.yul\":4134:4208   */\n  tag_108\n    /* \"#utility.yul\":4200:4207   */\n  dup8\n    /* \"#utility.yul\":4191:4197   */\n  dup3\n    /* \"#utility.yul\":4180:4189   */\n  dup9\n    /* \"#utility.yul\":4176:4198   */\n  add\n    /* \"#utility.yul\":4134:4208   */\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4124:4208   */\n  swap3\n  pop\n    /* \"#utility.yul\":3926:4218   */\n  pop\n    /* \"#utility.yul\":4278:4280   */\n  0x60\n    /* \"#utility.yul\":4267:4276   */\n  dup6\n    /* \"#utility.yul\":4263:4281   */\n  add\n    /* \"#utility.yul\":4257:4282   */\n  mload\n    /* \"#utility.yul\":4309:4327   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4301:4307   */\n  dup2\n    /* \"#utility.yul\":4298:4328   */\n  gt\n    /* \"#utility.yul\":4295:4412   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4331:4410   */\n  tag_110\n  tag_23\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4295:4412   */\ntag_109:\n    /* \"#utility.yul\":4436:4510   */\n  tag_111\n    /* \"#utility.yul\":4502:4509   */\n  dup8\n    /* \"#utility.yul\":4493:4499   */\n  dup3\n    /* \"#utility.yul\":4482:4491   */\n  dup9\n    /* \"#utility.yul\":4478:4500   */\n  add\n    /* \"#utility.yul\":4436:4510   */\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4426:4510   */\n  swap2\n  pop\n    /* \"#utility.yul\":4228:4520   */\n  pop\n    /* \"#utility.yul\":3188:4527   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4533:4632   */\ntag_38:\n    /* \"#utility.yul\":4585:4591   */\n  0x00\n    /* \"#utility.yul\":4619:4624   */\n  dup2\n    /* \"#utility.yul\":4613:4625   */\n  mload\n    /* \"#utility.yul\":4603:4625   */\n  swap1\n  pop\n    /* \"#utility.yul\":4533:4632   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4638:4818   */\ntag_39:\n    /* \"#utility.yul\":4686:4763   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4683:4684   */\n  0x00\n    /* \"#utility.yul\":4676:4764   */\n  mstore\n    /* \"#utility.yul\":4783:4787   */\n  0x22\n    /* \"#utility.yul\":4780:4781   */\n  0x04\n    /* \"#utility.yul\":4773:4788   */\n  mstore\n    /* \"#utility.yul\":4807:4811   */\n  0x24\n    /* \"#utility.yul\":4804:4805   */\n  0x00\n    /* \"#utility.yul\":4797:4812   */\n  revert\n    /* \"#utility.yul\":4824:5144   */\ntag_40:\n    /* \"#utility.yul\":4868:4874   */\n  0x00\n    /* \"#utility.yul\":4905:4906   */\n  0x02\n    /* \"#utility.yul\":4899:4903   */\n  dup3\n    /* \"#utility.yul\":4895:4907   */\n  div\n    /* \"#utility.yul\":4885:4907   */\n  swap1\n  pop\n    /* \"#utility.yul\":4952:4953   */\n  0x01\n    /* \"#utility.yul\":4946:4950   */\n  dup3\n    /* \"#utility.yul\":4942:4954   */\n  and\n    /* \"#utility.yul\":4973:4991   */\n  dup1\n    /* \"#utility.yul\":4963:5044   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5029:5033   */\n  0x7f\n    /* \"#utility.yul\":5021:5027   */\n  dup3\n    /* \"#utility.yul\":5017:5034   */\n  and\n    /* \"#utility.yul\":5007:5034   */\n  swap2\n  pop\n    /* \"#utility.yul\":4963:5044   */\ntag_115:\n    /* \"#utility.yul\":5091:5093   */\n  0x20\n    /* \"#utility.yul\":5083:5089   */\n  dup3\n    /* \"#utility.yul\":5080:5094   */\n  lt\n    /* \"#utility.yul\":5060:5078   */\n  dup2\n    /* \"#utility.yul\":5057:5095   */\n  sub\n    /* \"#utility.yul\":5054:5138   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5110:5128   */\n  tag_117\n  tag_39\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5054:5138   */\ntag_116:\n    /* \"#utility.yul\":4875:5144   */\n  pop\n    /* \"#utility.yul\":4824:5144   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5150:5291   */\ntag_41:\n    /* \"#utility.yul\":5199:5203   */\n  0x00\n    /* \"#utility.yul\":5222:5225   */\n  dup2\n    /* \"#utility.yul\":5214:5225   */\n  swap1\n  pop\n    /* \"#utility.yul\":5245:5248   */\n  dup2\n    /* \"#utility.yul\":5242:5243   */\n  0x00\n    /* \"#utility.yul\":5235:5249   */\n  mstore\n    /* \"#utility.yul\":5279:5283   */\n  0x20\n    /* \"#utility.yul\":5276:5277   */\n  0x00\n    /* \"#utility.yul\":5266:5284   */\n  keccak256\n    /* \"#utility.yul\":5258:5284   */\n  swap1\n  pop\n    /* \"#utility.yul\":5150:5291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5297:5390   */\ntag_42:\n    /* \"#utility.yul\":5334:5340   */\n  0x00\n    /* \"#utility.yul\":5381:5383   */\n  0x20\n    /* \"#utility.yul\":5376:5378   */\n  0x1f\n    /* \"#utility.yul\":5369:5374   */\n  dup4\n    /* \"#utility.yul\":5365:5379   */\n  add\n    /* \"#utility.yul\":5361:5384   */\n  div\n    /* \"#utility.yul\":5351:5384   */\n  swap1\n  pop\n    /* \"#utility.yul\":5297:5390   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5396:5503   */\ntag_43:\n    /* \"#utility.yul\":5440:5448   */\n  0x00\n    /* \"#utility.yul\":5490:5495   */\n  dup3\n    /* \"#utility.yul\":5484:5488   */\n  dup3\n    /* \"#utility.yul\":5480:5496   */\n  shl\n    /* \"#utility.yul\":5459:5496   */\n  swap1\n  pop\n    /* \"#utility.yul\":5396:5503   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5509:5902   */\ntag_44:\n    /* \"#utility.yul\":5578:5584   */\n  0x00\n    /* \"#utility.yul\":5628:5629   */\n  0x08\n    /* \"#utility.yul\":5616:5626   */\n  dup4\n    /* \"#utility.yul\":5612:5630   */\n  mul\n    /* \"#utility.yul\":5651:5748   */\n  tag_122\n    /* \"#utility.yul\":5681:5747   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5670:5679   */\n  dup3\n    /* \"#utility.yul\":5651:5748   */\n  tag_43\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5769:5808   */\n  tag_123\n    /* \"#utility.yul\":5799:5807   */\n  dup7\n    /* \"#utility.yul\":5788:5797   */\n  dup4\n    /* \"#utility.yul\":5769:5808   */\n  tag_43\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5757:5808   */\n  swap6\n  pop\n    /* \"#utility.yul\":5841:5845   */\n  dup1\n    /* \"#utility.yul\":5837:5846   */\n  not\n    /* \"#utility.yul\":5830:5835   */\n  dup5\n    /* \"#utility.yul\":5826:5847   */\n  and\n    /* \"#utility.yul\":5817:5847   */\n  swap4\n  pop\n    /* \"#utility.yul\":5890:5894   */\n  dup1\n    /* \"#utility.yul\":5880:5888   */\n  dup7\n    /* \"#utility.yul\":5876:5895   */\n  and\n    /* \"#utility.yul\":5869:5874   */\n  dup5\n    /* \"#utility.yul\":5866:5896   */\n  or\n    /* \"#utility.yul\":5856:5896   */\n  swap3\n  pop\n    /* \"#utility.yul\":5585:5902   */\n  pop\n  pop\n    /* \"#utility.yul\":5509:5902   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5908:5985   */\ntag_45:\n    /* \"#utility.yul\":5945:5952   */\n  0x00\n    /* \"#utility.yul\":5974:5979   */\n  dup2\n    /* \"#utility.yul\":5963:5979   */\n  swap1\n  pop\n    /* \"#utility.yul\":5908:5985   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5991:6051   */\ntag_46:\n    /* \"#utility.yul\":6019:6022   */\n  0x00\n    /* \"#utility.yul\":6040:6045   */\n  dup2\n    /* \"#utility.yul\":6033:6045   */\n  swap1\n  pop\n    /* \"#utility.yul\":5991:6051   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6057:6199   */\ntag_47:\n    /* \"#utility.yul\":6107:6116   */\n  0x00\n    /* \"#utility.yul\":6140:6193   */\n  tag_127\n    /* \"#utility.yul\":6158:6192   */\n  tag_128\n    /* \"#utility.yul\":6167:6191   */\n  tag_129\n    /* \"#utility.yul\":6185:6190   */\n  dup5\n    /* \"#utility.yul\":6167:6191   */\n  tag_45\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6158:6192   */\n  tag_46\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6140:6193   */\n  tag_45\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6127:6193   */\n  swap1\n  pop\n    /* \"#utility.yul\":6057:6199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6205:6280   */\ntag_48:\n    /* \"#utility.yul\":6248:6251   */\n  0x00\n    /* \"#utility.yul\":6269:6274   */\n  dup2\n    /* \"#utility.yul\":6262:6274   */\n  swap1\n  pop\n    /* \"#utility.yul\":6205:6280   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6286:6555   */\ntag_49:\n    /* \"#utility.yul\":6396:6435   */\n  tag_132\n    /* \"#utility.yul\":6427:6434   */\n  dup4\n    /* \"#utility.yul\":6396:6435   */\n  tag_47\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6457:6548   */\n  tag_133\n    /* \"#utility.yul\":6506:6547   */\n  tag_134\n    /* \"#utility.yul\":6530:6546   */\n  dup3\n    /* \"#utility.yul\":6506:6547   */\n  tag_48\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6498:6504   */\n  dup5\n    /* \"#utility.yul\":6491:6495   */\n  dup5\n    /* \"#utility.yul\":6485:6496   */\n  sload\n    /* \"#utility.yul\":6457:6548   */\n  tag_44\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6451:6455   */\n  dup3\n    /* \"#utility.yul\":6444:6549   */\n  sstore\n    /* \"#utility.yul\":6362:6555   */\n  pop\n    /* \"#utility.yul\":6286:6555   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6561:6634   */\ntag_50:\n    /* \"#utility.yul\":6606:6609   */\n  0x00\n    /* \"#utility.yul\":6561:6634   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6640:6829   */\ntag_51:\n    /* \"#utility.yul\":6717:6749   */\n  tag_137\n  tag_50\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6758:6823   */\n  tag_138\n    /* \"#utility.yul\":6816:6822   */\n  dup2\n    /* \"#utility.yul\":6808:6814   */\n  dup5\n    /* \"#utility.yul\":6802:6806   */\n  dup5\n    /* \"#utility.yul\":6758:6823   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6693:6829   */\n  pop\n    /* \"#utility.yul\":6640:6829   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6835:7021   */\ntag_52:\n    /* \"#utility.yul\":6895:7015   */\ntag_140:\n    /* \"#utility.yul\":6912:6915   */\n  dup2\n    /* \"#utility.yul\":6905:6910   */\n  dup2\n    /* \"#utility.yul\":6902:6916   */\n  lt\n    /* \"#utility.yul\":6895:7015   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6966:7005   */\n  tag_143\n    /* \"#utility.yul\":7003:7004   */\n  0x00\n    /* \"#utility.yul\":6996:7001   */\n  dup3\n    /* \"#utility.yul\":6966:7005   */\n  tag_51\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6939:6940   */\n  0x01\n    /* \"#utility.yul\":6932:6937   */\n  dup2\n    /* \"#utility.yul\":6928:6941   */\n  add\n    /* \"#utility.yul\":6919:6941   */\n  swap1\n  pop\n    /* \"#utility.yul\":6895:7015   */\n  jump(tag_140)\ntag_142:\n    /* \"#utility.yul\":6835:7021   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7027:7570   */\ntag_53:\n    /* \"#utility.yul\":7128:7130   */\n  0x1f\n    /* \"#utility.yul\":7123:7126   */\n  dup3\n    /* \"#utility.yul\":7120:7131   */\n  gt\n    /* \"#utility.yul\":7117:7563   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":7162:7200   */\n  tag_146\n    /* \"#utility.yul\":7194:7199   */\n  dup2\n    /* \"#utility.yul\":7162:7200   */\n  tag_41\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7246:7275   */\n  tag_147\n    /* \"#utility.yul\":7264:7274   */\n  dup5\n    /* \"#utility.yul\":7246:7275   */\n  tag_42\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7236:7244   */\n  dup2\n    /* \"#utility.yul\":7232:7276   */\n  add\n    /* \"#utility.yul\":7429:7431   */\n  0x20\n    /* \"#utility.yul\":7417:7427   */\n  dup6\n    /* \"#utility.yul\":7414:7432   */\n  lt\n    /* \"#utility.yul\":7411:7460   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7450:7458   */\n  dup2\n    /* \"#utility.yul\":7435:7458   */\n  swap1\n  pop\n    /* \"#utility.yul\":7411:7460   */\ntag_148:\n    /* \"#utility.yul\":7473:7553   */\n  tag_149\n    /* \"#utility.yul\":7529:7551   */\n  tag_150\n    /* \"#utility.yul\":7547:7550   */\n  dup6\n    /* \"#utility.yul\":7529:7551   */\n  tag_42\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7519:7527   */\n  dup4\n    /* \"#utility.yul\":7515:7552   */\n  add\n    /* \"#utility.yul\":7502:7513   */\n  dup3\n    /* \"#utility.yul\":7473:7553   */\n  tag_52\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7132:7563   */\n  pop\n  pop\n    /* \"#utility.yul\":7117:7563   */\ntag_145:\n    /* \"#utility.yul\":7027:7570   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7576:7693   */\ntag_54:\n    /* \"#utility.yul\":7630:7638   */\n  0x00\n    /* \"#utility.yul\":7680:7685   */\n  dup3\n    /* \"#utility.yul\":7674:7678   */\n  dup3\n    /* \"#utility.yul\":7670:7686   */\n  shr\n    /* \"#utility.yul\":7649:7686   */\n  swap1\n  pop\n    /* \"#utility.yul\":7576:7693   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7699:7868   */\ntag_55:\n    /* \"#utility.yul\":7743:7749   */\n  0x00\n    /* \"#utility.yul\":7776:7827   */\n  tag_153\n    /* \"#utility.yul\":7824:7825   */\n  0x00\n    /* \"#utility.yul\":7820:7826   */\n  not\n    /* \"#utility.yul\":7812:7817   */\n  dup5\n    /* \"#utility.yul\":7809:7810   */\n  0x08\n    /* \"#utility.yul\":7805:7818   */\n  mul\n    /* \"#utility.yul\":7776:7827   */\n  tag_54\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7772:7828   */\n  not\n    /* \"#utility.yul\":7857:7861   */\n  dup1\n    /* \"#utility.yul\":7851:7855   */\n  dup4\n    /* \"#utility.yul\":7847:7862   */\n  and\n    /* \"#utility.yul\":7837:7862   */\n  swap2\n  pop\n    /* \"#utility.yul\":7750:7868   */\n  pop\n    /* \"#utility.yul\":7699:7868   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7873:8168   */\ntag_56:\n    /* \"#utility.yul\":7949:7953   */\n  0x00\n    /* \"#utility.yul\":8095:8124   */\n  tag_155\n    /* \"#utility.yul\":8120:8123   */\n  dup4\n    /* \"#utility.yul\":8114:8118   */\n  dup4\n    /* \"#utility.yul\":8095:8124   */\n  tag_55\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8087:8124   */\n  swap2\n  pop\n    /* \"#utility.yul\":8157:8160   */\n  dup3\n    /* \"#utility.yul\":8154:8155   */\n  0x02\n    /* \"#utility.yul\":8150:8161   */\n  mul\n    /* \"#utility.yul\":8144:8148   */\n  dup3\n    /* \"#utility.yul\":8141:8162   */\n  or\n    /* \"#utility.yul\":8133:8162   */\n  swap1\n  pop\n    /* \"#utility.yul\":7873:8168   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8173:9568   */\ntag_9:\n    /* \"#utility.yul\":8290:8327   */\n  tag_157\n    /* \"#utility.yul\":8323:8326   */\n  dup3\n    /* \"#utility.yul\":8290:8327   */\n  tag_38\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":8392:8410   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8384:8390   */\n  dup2\n    /* \"#utility.yul\":8381:8411   */\n  gt\n    /* \"#utility.yul\":8378:8434   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":8414:8432   */\n  tag_159\n  tag_31\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8378:8434   */\ntag_158:\n    /* \"#utility.yul\":8458:8496   */\n  tag_160\n    /* \"#utility.yul\":8490:8494   */\n  dup3\n    /* \"#utility.yul\":8484:8495   */\n  sload\n    /* \"#utility.yul\":8458:8496   */\n  tag_40\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":8543:8610   */\n  tag_161\n    /* \"#utility.yul\":8603:8609   */\n  dup3\n    /* \"#utility.yul\":8595:8601   */\n  dup3\n    /* \"#utility.yul\":8589:8593   */\n  dup6\n    /* \"#utility.yul\":8543:8610   */\n  tag_53\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8637:8638   */\n  0x00\n    /* \"#utility.yul\":8661:8665   */\n  0x20\n    /* \"#utility.yul\":8648:8665   */\n  swap1\n  pop\n    /* \"#utility.yul\":8693:8695   */\n  0x1f\n    /* \"#utility.yul\":8685:8691   */\n  dup4\n    /* \"#utility.yul\":8682:8696   */\n  gt\n    /* \"#utility.yul\":8710:8711   */\n  0x01\n    /* \"#utility.yul\":8705:9323   */\n  dup2\n  eq\n  tag_163\n  jumpi\n    /* \"#utility.yul\":9367:9368   */\n  0x00\n    /* \"#utility.yul\":9384:9390   */\n  dup5\n    /* \"#utility.yul\":9381:9458   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":9433:9442   */\n  dup3\n    /* \"#utility.yul\":9428:9431   */\n  dup8\n    /* \"#utility.yul\":9424:9443   */\n  add\n    /* \"#utility.yul\":9418:9444   */\n  mload\n    /* \"#utility.yul\":9409:9444   */\n  swap1\n  pop\n    /* \"#utility.yul\":9381:9458   */\ntag_164:\n    /* \"#utility.yul\":9484:9551   */\n  tag_165\n    /* \"#utility.yul\":9544:9550   */\n  dup6\n    /* \"#utility.yul\":9537:9542   */\n  dup3\n    /* \"#utility.yul\":9484:9551   */\n  tag_56\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":9478:9482   */\n  dup7\n    /* \"#utility.yul\":9471:9552   */\n  sstore\n    /* \"#utility.yul\":9340:9562   */\n  pop\n    /* \"#utility.yul\":8675:9562   */\n  jump(tag_162)\n    /* \"#utility.yul\":8705:9323   */\ntag_163:\n    /* \"#utility.yul\":8757:8761   */\n  0x1f\n    /* \"#utility.yul\":8753:8762   */\n  not\n    /* \"#utility.yul\":8745:8751   */\n  dup5\n    /* \"#utility.yul\":8741:8763   */\n  and\n    /* \"#utility.yul\":8791:8828   */\n  tag_166\n    /* \"#utility.yul\":8823:8827   */\n  dup7\n    /* \"#utility.yul\":8791:8828   */\n  tag_41\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8850:8851   */\n  0x00\n    /* \"#utility.yul\":8864:9072   */\ntag_167:\n    /* \"#utility.yul\":8878:8885   */\n  dup3\n    /* \"#utility.yul\":8875:8876   */\n  dup2\n    /* \"#utility.yul\":8872:8886   */\n  lt\n    /* \"#utility.yul\":8864:9072   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":8957:8966   */\n  dup5\n    /* \"#utility.yul\":8952:8955   */\n  dup10\n    /* \"#utility.yul\":8948:8967   */\n  add\n    /* \"#utility.yul\":8942:8968   */\n  mload\n    /* \"#utility.yul\":8934:8940   */\n  dup3\n    /* \"#utility.yul\":8927:8969   */\n  sstore\n    /* \"#utility.yul\":9008:9009   */\n  0x01\n    /* \"#utility.yul\":9000:9006   */\n  dup3\n    /* \"#utility.yul\":8996:9010   */\n  add\n    /* \"#utility.yul\":8986:9010   */\n  swap2\n  pop\n    /* \"#utility.yul\":9055:9057   */\n  0x20\n    /* \"#utility.yul\":9044:9053   */\n  dup6\n    /* \"#utility.yul\":9040:9058   */\n  add\n    /* \"#utility.yul\":9027:9058   */\n  swap5\n  pop\n    /* \"#utility.yul\":8901:8905   */\n  0x20\n    /* \"#utility.yul\":8898:8899   */\n  dup2\n    /* \"#utility.yul\":8894:8906   */\n  add\n    /* \"#utility.yul\":8889:8906   */\n  swap1\n  pop\n    /* \"#utility.yul\":8864:9072   */\n  jump(tag_167)\ntag_169:\n    /* \"#utility.yul\":9100:9106   */\n  dup7\n    /* \"#utility.yul\":9091:9098   */\n  dup4\n    /* \"#utility.yul\":9088:9107   */\n  lt\n    /* \"#utility.yul\":9085:9264   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":9158:9167   */\n  dup5\n    /* \"#utility.yul\":9153:9156   */\n  dup10\n    /* \"#utility.yul\":9149:9168   */\n  add\n    /* \"#utility.yul\":9143:9169   */\n  mload\n    /* \"#utility.yul\":9201:9249   */\n  tag_171\n    /* \"#utility.yul\":9243:9247   */\n  0x1f\n    /* \"#utility.yul\":9235:9241   */\n  dup10\n    /* \"#utility.yul\":9231:9248   */\n  and\n    /* \"#utility.yul\":9220:9229   */\n  dup3\n    /* \"#utility.yul\":9201:9249   */\n  tag_55\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":9193:9199   */\n  dup4\n    /* \"#utility.yul\":9186:9250   */\n  sstore\n    /* \"#utility.yul\":9108:9264   */\n  pop\n    /* \"#utility.yul\":9085:9264   */\ntag_170:\n    /* \"#utility.yul\":9310:9311   */\n  0x01\n    /* \"#utility.yul\":9306:9307   */\n  0x02\n    /* \"#utility.yul\":9298:9304   */\n  dup9\n    /* \"#utility.yul\":9294:9308   */\n  mul\n    /* \"#utility.yul\":9290:9312   */\n  add\n    /* \"#utility.yul\":9284:9288   */\n  dup9\n    /* \"#utility.yul\":9277:9313   */\n  sstore\n    /* \"#utility.yul\":8712:9323   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8675:9562   */\ntag_162:\n  pop\n    /* \"#utility.yul\":8265:9568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8173:9568   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9574:9692   */\ntag_57:\n    /* \"#utility.yul\":9661:9685   */\n  tag_173\n    /* \"#utility.yul\":9679:9684   */\n  dup2\n    /* \"#utility.yul\":9661:9685   */\n  tag_25\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":9656:9659   */\n  dup3\n    /* \"#utility.yul\":9649:9686   */\n  mstore\n    /* \"#utility.yul\":9574:9692   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9698:9920   */\ntag_14:\n    /* \"#utility.yul\":9791:9795   */\n  0x00\n    /* \"#utility.yul\":9829:9831   */\n  0x20\n    /* \"#utility.yul\":9818:9827   */\n  dup3\n    /* \"#utility.yul\":9814:9832   */\n  add\n    /* \"#utility.yul\":9806:9832   */\n  swap1\n  pop\n    /* \"#utility.yul\":9842:9913   */\n  tag_175\n    /* \"#utility.yul\":9910:9911   */\n  0x00\n    /* \"#utility.yul\":9899:9908   */\n  dup4\n    /* \"#utility.yul\":9895:9912   */\n  add\n    /* \"#utility.yul\":9886:9892   */\n  dup5\n    /* \"#utility.yul\":9842:9913   */\n  tag_57\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":9698:9920   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTEventQuestGame.sol\":170:2974  contract NFTEventVoteGame is ERC721, Ownable {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTEventQuestGame.sol\":170:2974  contract NFTEventVoteGame is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xcfad5277\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xcfad5277\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfec2b9ee\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcf5f19d3\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9516a104\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa5025222\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb0141b14\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x42842e0e\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x60e564f6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6ea2351a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f233b73\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/NFTEventQuestGame.sol\":518:546  uint256[] public addressKeys */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/NFTEventQuestGame.sol\":1343:1761  function mintNFTs(bool answer) external {... */\n    tag_10:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventQuestGame.sol\":848:1337  function pushAddress(bool someValue) external {... */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventQuestGame.sol\":1875:2258  function getAllAddresses() external view returns (bool[] memory) {... */\n    tag_16:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/NFTEventQuestGame.sol\":340:385  mapping(address => bool) public addressExists */\n    tag_19:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventQuestGame.sol\":391:448  mapping(uint256 => AddressInfo) public addressInfoMapTrue */\n    tag_20:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_21:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_22:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventQuestGame.sol\":2264:2972  function getAddressesByValue(bool desiredValue) public view returns (address[] memory) {... */\n    tag_23:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventQuestGame.sol\":221:254  uint256 public totalAddresses = 0 */\n    tag_24:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_25:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/NFTEventQuestGame.sol\":454:512  mapping(uint256 => AddressInfo) public addressInfoMapFalse */\n    tag_27:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_133\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_134\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_139\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":518:546  uint256[] public addressKeys */\n    tag_58:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":1343:1761  function mintNFTs(bool answer) external {... */\n    tag_67:\n        /* \"contracts/NFTEventQuestGame.sol\":1393:1427  address[] memory matchingAddresses */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1430:1457  getAddressesByValue(answer) */\n      tag_168\n        /* \"contracts/NFTEventQuestGame.sol\":1450:1456  answer */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":1430:1449  getAddressesByValue */\n      tag_114\n        /* \"contracts/NFTEventQuestGame.sol\":1430:1457  getAddressesByValue(answer) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/NFTEventQuestGame.sol\":1393:1457  address[] memory matchingAddresses = getAddressesByValue(answer) */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1473:1482  uint256 i */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1468:1702  for (uint256 i = 0; i < matchingAddresses.length; i++) {... */\n    tag_169:\n        /* \"contracts/NFTEventQuestGame.sol\":1492:1509  matchingAddresses */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":1492:1516  matchingAddresses.length */\n      mload\n        /* \"contracts/NFTEventQuestGame.sol\":1488:1489  i */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":1488:1516  i < matchingAddresses.length */\n      lt\n        /* \"contracts/NFTEventQuestGame.sol\":1468:1702  for (uint256 i = 0; i < matchingAddresses.length; i++) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/NFTEventQuestGame.sol\":1537:1552  uint256 tokenId */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1572:1573  i */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":1555:1569  totalAddresses */\n      sload(0x07)\n        /* \"contracts/NFTEventQuestGame.sol\":1555:1573  totalAddresses + i */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/NFTEventQuestGame.sol\":1537:1573  uint256 tokenId = totalAddresses + i */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1587:1623  _mint(matchingAddresses[i], tokenId) */\n      tag_174\n        /* \"contracts/NFTEventQuestGame.sol\":1593:1610  matchingAddresses */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":1611:1612  i */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":1593:1613  matchingAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/NFTEventQuestGame.sol\":1615:1622  tokenId */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":1587:1592  _mint */\n      tag_178\n        /* \"contracts/NFTEventQuestGame.sol\":1587:1623  _mint(matchingAddresses[i], tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/NFTEventQuestGame.sol\":1664:1681  matchingAddresses */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":1682:1683  i */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":1664:1684  matchingAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_180\n      tag_177\n      jump\t// in\n    tag_180:\n    tag_179:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/NFTEventQuestGame.sol\":1642:1691  AddressAdded(tokenId, matchingAddresses[i], true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTEventQuestGame.sol\":1655:1662  tokenId */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":1642:1691  AddressAdded(tokenId, matchingAddresses[i], true) */\n      0xcc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d3400\n        /* \"contracts/NFTEventQuestGame.sol\":1686:1690  true */\n      0x01\n        /* \"contracts/NFTEventQuestGame.sol\":1642:1691  AddressAdded(tokenId, matchingAddresses[i], true) */\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTEventQuestGame.sol\":1523:1702  {... */\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1518:1521  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1468:1702  for (uint256 i = 0; i < matchingAddresses.length; i++) {... */\n      jump(tag_169)\n    tag_170:\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1730:1747  matchingAddresses */\n      dup1\n        /* \"contracts/NFTEventQuestGame.sol\":1730:1754  matchingAddresses.length */\n      mload\n        /* \"contracts/NFTEventQuestGame.sol\":1712:1726  totalAddresses */\n      0x07\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1712:1754  totalAddresses += matchingAddresses.length */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1383:1761  {... */\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1343:1761  function mintNFTs(bool answer) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":848:1337  function pushAddress(bool someValue) external {... */\n    tag_74:\n        /* \"contracts/NFTEventQuestGame.sol\":913:926  addressExists */\n      0x09\n        /* \"contracts/NFTEventQuestGame.sol\":913:938  addressExists[msg.sender] */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":927:937  msg.sender */\n      caller\n        /* \"contracts/NFTEventQuestGame.sol\":913:938  addressExists[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTEventQuestGame.sol\":912:938  !addressExists[msg.sender] */\n      iszero\n        /* \"contracts/NFTEventQuestGame.sol\":904:965  require(!addressExists[msg.sender], \"Address already exists\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/NFTEventQuestGame.sol\":976:991  uint256 tokenId */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":994:1008  totalAddresses */\n      sload(0x07)\n        /* \"contracts/NFTEventQuestGame.sol\":976:1008  uint256 tokenId = totalAddresses */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1046:1050  true */\n      0x01\n        /* \"contracts/NFTEventQuestGame.sol\":1018:1031  addressExists */\n      0x09\n        /* \"contracts/NFTEventQuestGame.sol\":1018:1043  addressExists[msg.sender] */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1032:1042  msg.sender */\n      caller\n        /* \"contracts/NFTEventQuestGame.sol\":1018:1043  addressExists[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1018:1050  addressExists[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1060:1071  addressKeys */\n      0x0c\n        /* \"contracts/NFTEventQuestGame.sol\":1077:1084  tokenId */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":1060:1085  addressKeys.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTEventQuestGame.sol\":1096:1129  AddressInfo memory newAddressInfo */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1132:1154  AddressInfo(someValue) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTEventQuestGame.sol\":1144:1153  someValue */\n      dup5\n        /* \"contracts/NFTEventQuestGame.sol\":1132:1154  AddressInfo(someValue) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1096:1154  AddressInfo memory newAddressInfo = AddressInfo(someValue) */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1230:1244  newAddressInfo */\n      dup1\n        /* \"contracts/NFTEventQuestGame.sol\":1165:1174  someValue */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":1165:1217  someValue ? addressInfoMapTrue : addressInfoMapFalse */\n      tag_190\n      jumpi\n        /* \"contracts/NFTEventQuestGame.sol\":1198:1217  addressInfoMapFalse */\n      0x0b\n        /* \"contracts/NFTEventQuestGame.sol\":1165:1217  someValue ? addressInfoMapTrue : addressInfoMapFalse */\n      jump(tag_191)\n    tag_190:\n        /* \"contracts/NFTEventQuestGame.sol\":1177:1195  addressInfoMapTrue */\n      0x0a\n        /* \"contracts/NFTEventQuestGame.sol\":1165:1217  someValue ? addressInfoMapTrue : addressInfoMapFalse */\n    tag_191:\n        /* \"contracts/NFTEventQuestGame.sol\":1164:1227  (someValue ? addressInfoMapTrue : addressInfoMapFalse)[tokenId] */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1219:1226  tokenId */\n      dup5\n        /* \"contracts/NFTEventQuestGame.sol\":1164:1227  (someValue ? addressInfoMapTrue : addressInfoMapFalse)[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventQuestGame.sol\":1164:1244  (someValue ? addressInfoMapTrue : addressInfoMapFalse)[tokenId] = newAddressInfo */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1255:1269  totalAddresses */\n      0x07\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1255:1271  totalAddresses++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1308:1318  msg.sender */\n      caller\n        /* \"contracts/NFTEventQuestGame.sol\":1286:1330  AddressAdded(tokenId, msg.sender, someValue) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTEventQuestGame.sol\":1299:1306  tokenId */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":1286:1330  AddressAdded(tokenId, msg.sender, someValue) */\n      0xcc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d3400\n        /* \"contracts/NFTEventQuestGame.sol\":1320:1329  someValue */\n      dup6\n        /* \"contracts/NFTEventQuestGame.sol\":1286:1330  AddressAdded(tokenId, msg.sender, someValue) */\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTEventQuestGame.sol\":894:1337  {... */\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":848:1337  function pushAddress(bool someValue) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":1875:2258  function getAllAddresses() external view returns (bool[] memory) {... */\n    tag_86:\n        /* \"contracts/NFTEventQuestGame.sol\":1925:1938  bool[] memory */\n      0x60\n        /* \"contracts/NFTEventQuestGame.sol\":1950:1976  bool[] memory allAddresses */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":1990:2004  totalAddresses */\n      sload(0x07)\n        /* \"contracts/NFTEventQuestGame.sol\":1979:2005  new bool[](totalAddresses) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_206\n      jumpi\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n    tag_206:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_209:\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1950:2005  bool[] memory allAddresses = new bool[](totalAddresses) */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2015:2066  mapping(uint256 => AddressInfo) storage selectedMap */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2069:2087  addressInfoMapTrue */\n      0x0a\n        /* \"contracts/NFTEventQuestGame.sol\":2015:2087  mapping(uint256 => AddressInfo) storage selectedMap = addressInfoMapTrue */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2103:2112  uint256 i */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2098:2223  for (uint256 i = 0; i < totalAddresses; i++) {... */\n    tag_210:\n        /* \"contracts/NFTEventQuestGame.sol\":2122:2136  totalAddresses */\n      sload(0x07)\n        /* \"contracts/NFTEventQuestGame.sol\":2118:2119  i */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":2118:2136  i < totalAddresses */\n      lt\n        /* \"contracts/NFTEventQuestGame.sol\":2098:2223  for (uint256 i = 0; i < totalAddresses; i++) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/NFTEventQuestGame.sol\":2175:2186  selectedMap */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":2175:2202  selectedMap[addressKeys[i]] */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2187:2198  addressKeys */\n      0x0c\n        /* \"contracts/NFTEventQuestGame.sol\":2199:2200  i */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":2187:2201  addressKeys[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_177\n      jump\t// in\n    tag_214:\n    tag_213:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTEventQuestGame.sol\":2175:2202  selectedMap[addressKeys[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventQuestGame.sol\":2175:2212  selectedMap[addressKeys[i]].someValue */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTEventQuestGame.sol\":2157:2169  allAddresses */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":2170:2171  i */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":2157:2172  allAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_177\n      jump\t// in\n    tag_217:\n    tag_216:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/NFTEventQuestGame.sol\":2157:2212  allAddresses[i] = selectedMap[addressKeys[i]].someValue */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2138:2141  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2098:2223  for (uint256 i = 0; i < totalAddresses; i++) {... */\n      jump(tag_210)\n    tag_211:\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2239:2251  allAddresses */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":2232:2251  return allAddresses */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1875:2258  function getAllAddresses() external view returns (bool[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_139\n      jump\t// in\n    tag_219:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_220\n      swap1\n      tag_139\n      jump\t// in\n    tag_220:\n      dup1\n      iszero\n      tag_221\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_222\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_221)\n    tag_222:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_223:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_223\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":340:385  mapping(address => bool) public addressExists */\n    tag_98:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":391:448  mapping(uint256 => AddressInfo) public addressInfoMapTrue */\n    tag_102:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_233:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_236\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_237)\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":2264:2972  function getAddressesByValue(bool desiredValue) public view returns (address[] memory) {... */\n    tag_114:\n        /* \"contracts/NFTEventQuestGame.sol\":2333:2349  address[] memory */\n      0x60\n        /* \"contracts/NFTEventQuestGame.sol\":2361:2395  address[] memory matchingAddresses */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2412:2426  totalAddresses */\n      sload(0x07)\n        /* \"contracts/NFTEventQuestGame.sol\":2398:2427  new address[](totalAddresses) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_244\n      tag_208\n      jump\t// in\n    tag_244:\n    tag_243:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_245:\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2361:2427  address[] memory matchingAddresses = new address[](totalAddresses) */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2437:2458  uint256 matchingCount */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2473:2524  mapping(uint256 => AddressInfo) storage selectedMap */\n      dup1\n        /* \"contracts/NFTEventQuestGame.sol\":2528:2540  desiredValue */\n      dup5\n        /* \"contracts/NFTEventQuestGame.sol\":2528:2583  desiredValue ? addressInfoMapTrue : addressInfoMapFalse */\n      tag_246\n      jumpi\n        /* \"contracts/NFTEventQuestGame.sol\":2564:2583  addressInfoMapFalse */\n      0x0b\n        /* \"contracts/NFTEventQuestGame.sol\":2528:2583  desiredValue ? addressInfoMapTrue : addressInfoMapFalse */\n      jump(tag_247)\n    tag_246:\n        /* \"contracts/NFTEventQuestGame.sol\":2543:2561  addressInfoMapTrue */\n      0x0a\n        /* \"contracts/NFTEventQuestGame.sol\":2528:2583  desiredValue ? addressInfoMapTrue : addressInfoMapFalse */\n    tag_247:\n        /* \"contracts/NFTEventQuestGame.sol\":2473:2584  mapping(uint256 => AddressInfo) storage selectedMap = (desiredValue ? addressInfoMapTrue : addressInfoMapFalse) */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2600:2609  uint256 i */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2595:2848  for (uint256 i = 0; i < totalAddresses; i++) {... */\n    tag_248:\n        /* \"contracts/NFTEventQuestGame.sol\":2619:2633  totalAddresses */\n      sload(0x07)\n        /* \"contracts/NFTEventQuestGame.sol\":2615:2616  i */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":2615:2633  i < totalAddresses */\n      lt\n        /* \"contracts/NFTEventQuestGame.sol\":2595:2848  for (uint256 i = 0; i < totalAddresses; i++) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/NFTEventQuestGame.sol\":2654:2669  uint256 tokenId */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2672:2683  addressKeys */\n      0x0c\n        /* \"contracts/NFTEventQuestGame.sol\":2684:2685  i */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":2672:2686  addressKeys[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_177\n      jump\t// in\n    tag_252:\n    tag_251:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTEventQuestGame.sol\":2654:2686  uint256 tokenId = addressKeys[i] */\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2738:2750  desiredValue */\n      dup7\n        /* \"contracts/NFTEventQuestGame.sol\":2704:2750  selectedMap[tokenId].someValue == desiredValue */\n      iszero\n      iszero\n        /* \"contracts/NFTEventQuestGame.sol\":2704:2715  selectedMap */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":2704:2724  selectedMap[tokenId] */\n      0x00\n        /* \"contracts/NFTEventQuestGame.sol\":2716:2723  tokenId */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":2704:2724  selectedMap[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventQuestGame.sol\":2704:2734  selectedMap[tokenId].someValue */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTEventQuestGame.sol\":2704:2750  selectedMap[tokenId].someValue == desiredValue */\n      iszero\n      iszero\n      sub\n        /* \"contracts/NFTEventQuestGame.sol\":2700:2838  if (selectedMap[tokenId].someValue == desiredValue) {... */\n      tag_254\n      jumpi\n        /* \"contracts/NFTEventQuestGame.sol\":2807:2823  ownerOf(tokenId) */\n      tag_255\n        /* \"contracts/NFTEventQuestGame.sol\":2815:2822  tokenId */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":2807:2814  ownerOf */\n      tag_70\n        /* \"contracts/NFTEventQuestGame.sol\":2807:2823  ownerOf(tokenId) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/NFTEventQuestGame.sol\":2770:2787  matchingAddresses */\n      dup6\n        /* \"contracts/NFTEventQuestGame.sol\":2788:2803  matchingCount++ */\n      dup6\n      dup1\n      tag_256\n      swap1\n      tag_193\n      jump\t// in\n    tag_256:\n      swap7\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2770:2804  matchingAddresses[matchingCount++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_257\n      jumpi\n      tag_258\n      tag_177\n      jump\t// in\n    tag_258:\n    tag_257:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/NFTEventQuestGame.sol\":2770:2823  matchingAddresses[matchingCount++] = ownerOf(tokenId) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2700:2838  if (selectedMap[tokenId].someValue == desiredValue) {... */\n    tag_254:\n        /* \"contracts/NFTEventQuestGame.sol\":2640:2848  {... */\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2635:2638  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2595:2848  for (uint256 i = 0; i < totalAddresses; i++) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2907:2920  matchingCount */\n      dup2\n        /* \"contracts/NFTEventQuestGame.sol\":2888:2905  matchingAddresses */\n      dup4\n        /* \"contracts/NFTEventQuestGame.sol\":2881:2921  mstore(matchingAddresses, matchingCount) */\n      mstore\n        /* \"contracts/NFTEventQuestGame.sol\":2948:2965  matchingAddresses */\n      dup3\n        /* \"contracts/NFTEventQuestGame.sol\":2941:2965  return matchingAddresses */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":2264:2972  function getAddressesByValue(bool desiredValue) public view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":221:254  uint256 public totalAddresses = 0 */\n    tag_118:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":454:512  mapping(uint256 => AddressInfo) public addressInfoMapFalse */\n    tag_130:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      0x01\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_310\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_315\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_314)\n    tag_315:\n      0x60\n      swap2\n      pop\n    tag_314:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventQuestGame.sol\":1767:1869  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_235:\n        /* \"contracts/NFTEventQuestGame.sol\":1827:1840  string memory */\n      0x60\n        /* \"contracts/NFTEventQuestGame.sol\":1859:1862  uri */\n      0x08\n        /* \"contracts/NFTEventQuestGame.sol\":1852:1862  return uri */\n      dup1\n      sload\n      tag_323\n      swap1\n      tag_139\n      jump\t// in\n    tag_323:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_324\n      swap1\n      tag_139\n      jump\t// in\n    tag_324:\n      dup1\n      iszero\n      tag_325\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_326\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_325)\n    tag_326:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_327:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_327\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTEventQuestGame.sol\":1767:1869  function _baseURI() internal view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_329\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_331\n      jumpi\n      tag_332\n      tag_208\n      jump\t// in\n    tag_332:\n    tag_331:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_333\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_333:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_336\n      jumpi\n      tag_337\n      tag_338\n      jump\t// in\n    tag_337:\n    tag_336:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_334\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_342\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_346\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap3\n      swap2\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_362\n      jumpi\n      tag_363\n      tag_338\n      jump\t// in\n    tag_363:\n    tag_362:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_365\n      jumpi\n      tag_366\n      tag_338\n      jump\t// in\n    tag_366:\n    tag_365:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_368\n      jumpi\n      tag_369\n      tag_338\n      jump\t// in\n    tag_369:\n    tag_368:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_371\n      jumpi\n      tag_372\n      tag_338\n      jump\t// in\n    tag_372:\n    tag_371:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_374\n      jumpi\n      tag_375\n      tag_338\n      jump\t// in\n    tag_375:\n    tag_374:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_377\n      jumpi\n      tag_378\n      tag_338\n      jump\t// in\n    tag_378:\n    tag_377:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_381\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_382\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_384\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_386:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_387:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_388:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_389:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_390:\n        /* \"#utility.yul\":561:584   */\n      tag_448\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_389\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_449:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_391:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_451\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_390\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_34:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_454\n      tag_387\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":833:952   */\n    tag_453:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_455\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_391\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_392:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_393:\n        /* \"#utility.yul\":1268:1289   */\n      tag_458\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_392\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_37:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_460\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_393\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_394:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_395:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_396:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_464:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_397:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_398:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_469\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_394\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2329:2400   */\n      tag_470\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_395\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_471\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_396\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2499:2528   */\n      tag_472\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_397\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_41:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_474\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_398\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_399:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_400:\n        /* \"#utility.yul\":3016:3040   */\n      tag_477\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_399\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_478:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_401:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_480\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_400\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_44:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_483\n      tag_387\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":3292:3411   */\n    tag_482:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_484\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_401\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_402:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_403:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_487\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_402\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_404:\n        /* \"#utility.yul\":3872:3896   */\n      tag_489\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_403\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_47:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_491\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_404\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_405:\n        /* \"#utility.yul\":4210:4234   */\n      tag_493\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_403\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_494:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_406:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_496\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_405\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_50:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_499\n      tag_387\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4503:4622   */\n    tag_498:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_500\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_406\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_501\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_401\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_54:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_504\n      tag_387\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5000:5119   */\n    tag_503:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_505\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_406\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_506\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_406\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_507\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_401\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5633   */\n    tag_407:\n        /* \"#utility.yul\":5602:5626   */\n      tag_509\n        /* \"#utility.yul\":5620:5625   */\n      dup2\n        /* \"#utility.yul\":5602:5626   */\n      tag_399\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5597:5600   */\n      dup3\n        /* \"#utility.yul\":5590:5627   */\n      mstore\n        /* \"#utility.yul\":5515:5633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5639:5861   */\n    tag_60:\n        /* \"#utility.yul\":5732:5736   */\n      0x00\n        /* \"#utility.yul\":5770:5772   */\n      0x20\n        /* \"#utility.yul\":5759:5768   */\n      dup3\n        /* \"#utility.yul\":5755:5773   */\n      add\n        /* \"#utility.yul\":5747:5773   */\n      swap1\n      pop\n        /* \"#utility.yul\":5783:5854   */\n      tag_511\n        /* \"#utility.yul\":5851:5852   */\n      0x00\n        /* \"#utility.yul\":5840:5849   */\n      dup4\n        /* \"#utility.yul\":5836:5853   */\n      add\n        /* \"#utility.yul\":5827:5833   */\n      dup5\n        /* \"#utility.yul\":5783:5854   */\n      tag_407\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5639:5861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:5983   */\n    tag_408:\n        /* \"#utility.yul\":5937:5958   */\n      tag_513\n        /* \"#utility.yul\":5952:5957   */\n      dup2\n        /* \"#utility.yul\":5937:5958   */\n      tag_392\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":5930:5935   */\n      dup2\n        /* \"#utility.yul\":5927:5959   */\n      eq\n        /* \"#utility.yul\":5917:5977   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":5973:5974   */\n      0x00\n        /* \"#utility.yul\":5970:5971   */\n      dup1\n        /* \"#utility.yul\":5963:5975   */\n      revert\n        /* \"#utility.yul\":5917:5977   */\n    tag_514:\n        /* \"#utility.yul\":5867:5983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6122   */\n    tag_409:\n        /* \"#utility.yul\":6032:6037   */\n      0x00\n        /* \"#utility.yul\":6070:6076   */\n      dup2\n        /* \"#utility.yul\":6057:6077   */\n      calldataload\n        /* \"#utility.yul\":6048:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":6086:6116   */\n      tag_516\n        /* \"#utility.yul\":6110:6115   */\n      dup2\n        /* \"#utility.yul\":6086:6116   */\n      tag_408\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5989:6122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6128:6451   */\n    tag_66:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6233:6235   */\n      0x20\n        /* \"#utility.yul\":6221:6230   */\n      dup3\n        /* \"#utility.yul\":6212:6219   */\n      dup5\n        /* \"#utility.yul\":6208:6231   */\n      sub\n        /* \"#utility.yul\":6204:6236   */\n      slt\n        /* \"#utility.yul\":6201:6320   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":6239:6318   */\n      tag_519\n      tag_387\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6201:6320   */\n    tag_518:\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6384:6434   */\n      tag_520\n        /* \"#utility.yul\":6426:6433   */\n      dup5\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6406:6415   */\n      dup6\n        /* \"#utility.yul\":6402:6424   */\n      add\n        /* \"#utility.yul\":6384:6434   */\n      tag_409\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6374:6434   */\n      swap2\n      pop\n        /* \"#utility.yul\":6330:6444   */\n      pop\n        /* \"#utility.yul\":6128:6451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6457:6786   */\n    tag_77:\n        /* \"#utility.yul\":6516:6522   */\n      0x00\n        /* \"#utility.yul\":6565:6567   */\n      0x20\n        /* \"#utility.yul\":6553:6562   */\n      dup3\n        /* \"#utility.yul\":6544:6551   */\n      dup5\n        /* \"#utility.yul\":6540:6563   */\n      sub\n        /* \"#utility.yul\":6536:6568   */\n      slt\n        /* \"#utility.yul\":6533:6652   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":6571:6650   */\n      tag_523\n      tag_387\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":6533:6652   */\n    tag_522:\n        /* \"#utility.yul\":6691:6692   */\n      0x00\n        /* \"#utility.yul\":6716:6769   */\n      tag_524\n        /* \"#utility.yul\":6761:6768   */\n      dup5\n        /* \"#utility.yul\":6752:6758   */\n      dup3\n        /* \"#utility.yul\":6741:6750   */\n      dup6\n        /* \"#utility.yul\":6737:6759   */\n      add\n        /* \"#utility.yul\":6716:6769   */\n      tag_406\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":6706:6769   */\n      swap2\n      pop\n        /* \"#utility.yul\":6662:6779   */\n      pop\n        /* \"#utility.yul\":6457:6786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6792:6903   */\n    tag_410:\n        /* \"#utility.yul\":6856:6862   */\n      0x00\n        /* \"#utility.yul\":6890:6895   */\n      dup2\n        /* \"#utility.yul\":6884:6896   */\n      mload\n        /* \"#utility.yul\":6874:6896   */\n      swap1\n      pop\n        /* \"#utility.yul\":6792:6903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6909:7090   */\n    tag_411:\n        /* \"#utility.yul\":7005:7016   */\n      0x00\n        /* \"#utility.yul\":7039:7045   */\n      dup3\n        /* \"#utility.yul\":7034:7037   */\n      dup3\n        /* \"#utility.yul\":7027:7046   */\n      mstore\n        /* \"#utility.yul\":7079:7083   */\n      0x20\n        /* \"#utility.yul\":7074:7077   */\n      dup3\n        /* \"#utility.yul\":7070:7084   */\n      add\n        /* \"#utility.yul\":7055:7084   */\n      swap1\n      pop\n        /* \"#utility.yul\":6909:7090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7096:7225   */\n    tag_412:\n        /* \"#utility.yul\":7160:7164   */\n      0x00\n        /* \"#utility.yul\":7183:7186   */\n      dup2\n        /* \"#utility.yul\":7175:7186   */\n      swap1\n      pop\n        /* \"#utility.yul\":7213:7217   */\n      0x20\n        /* \"#utility.yul\":7208:7211   */\n      dup3\n        /* \"#utility.yul\":7204:7218   */\n      add\n        /* \"#utility.yul\":7196:7218   */\n      swap1\n      pop\n        /* \"#utility.yul\":7096:7225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7231:7330   */\n    tag_413:\n        /* \"#utility.yul\":7302:7323   */\n      tag_529\n        /* \"#utility.yul\":7317:7322   */\n      dup2\n        /* \"#utility.yul\":7302:7323   */\n      tag_392\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7297:7300   */\n      dup3\n        /* \"#utility.yul\":7290:7324   */\n      mstore\n        /* \"#utility.yul\":7231:7330   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7336:7503   */\n    tag_414:\n        /* \"#utility.yul\":7399:7409   */\n      0x00\n        /* \"#utility.yul\":7420:7460   */\n      tag_531\n        /* \"#utility.yul\":7456:7459   */\n      dup4\n        /* \"#utility.yul\":7448:7454   */\n      dup4\n        /* \"#utility.yul\":7420:7460   */\n      tag_413\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7492:7496   */\n      0x20\n        /* \"#utility.yul\":7487:7490   */\n      dup4\n        /* \"#utility.yul\":7483:7497   */\n      add\n        /* \"#utility.yul\":7469:7497   */\n      swap1\n      pop\n        /* \"#utility.yul\":7336:7503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7509:7619   */\n    tag_415:\n        /* \"#utility.yul\":7576:7580   */\n      0x00\n        /* \"#utility.yul\":7608:7612   */\n      0x20\n        /* \"#utility.yul\":7603:7606   */\n      dup3\n        /* \"#utility.yul\":7599:7613   */\n      add\n        /* \"#utility.yul\":7591:7613   */\n      swap1\n      pop\n        /* \"#utility.yul\":7509:7619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7649:8357   */\n    tag_416:\n        /* \"#utility.yul\":7762:7765   */\n      0x00\n        /* \"#utility.yul\":7791:7842   */\n      tag_534\n        /* \"#utility.yul\":7836:7841   */\n      dup3\n        /* \"#utility.yul\":7791:7842   */\n      tag_410\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7858:7941   */\n      tag_535\n        /* \"#utility.yul\":7934:7940   */\n      dup2\n        /* \"#utility.yul\":7929:7932   */\n      dup6\n        /* \"#utility.yul\":7858:7941   */\n      tag_411\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7851:7941   */\n      swap4\n      pop\n        /* \"#utility.yul\":7965:8018   */\n      tag_536\n        /* \"#utility.yul\":8012:8017   */\n      dup4\n        /* \"#utility.yul\":7965:8018   */\n      tag_412\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8041:8048   */\n      dup1\n        /* \"#utility.yul\":8072:8073   */\n      0x00\n        /* \"#utility.yul\":8057:8332   */\n    tag_537:\n        /* \"#utility.yul\":8082:8088   */\n      dup4\n        /* \"#utility.yul\":8079:8080   */\n      dup2\n        /* \"#utility.yul\":8076:8089   */\n      lt\n        /* \"#utility.yul\":8057:8332   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":8158:8164   */\n      dup2\n        /* \"#utility.yul\":8152:8165   */\n      mload\n        /* \"#utility.yul\":8185:8242   */\n      tag_540\n        /* \"#utility.yul\":8238:8241   */\n      dup9\n        /* \"#utility.yul\":8223:8236   */\n      dup3\n        /* \"#utility.yul\":8185:8242   */\n      tag_414\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8178:8242   */\n      swap8\n      pop\n        /* \"#utility.yul\":8265:8322   */\n      tag_541\n        /* \"#utility.yul\":8315:8321   */\n      dup4\n        /* \"#utility.yul\":8265:8322   */\n      tag_415\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8255:8322   */\n      swap3\n      pop\n        /* \"#utility.yul\":8117:8332   */\n      pop\n        /* \"#utility.yul\":8104:8105   */\n      0x01\n        /* \"#utility.yul\":8101:8102   */\n      dup2\n        /* \"#utility.yul\":8097:8106   */\n      add\n        /* \"#utility.yul\":8092:8106   */\n      swap1\n      pop\n        /* \"#utility.yul\":8057:8332   */\n      jump(tag_537)\n    tag_539:\n        /* \"#utility.yul\":8061:8075   */\n      pop\n        /* \"#utility.yul\":8348:8351   */\n      dup6\n        /* \"#utility.yul\":8341:8351   */\n      swap4\n      pop\n        /* \"#utility.yul\":7767:8357   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7649:8357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8363:8724   */\n    tag_88:\n        /* \"#utility.yul\":8500:8504   */\n      0x00\n        /* \"#utility.yul\":8538:8540   */\n      0x20\n        /* \"#utility.yul\":8527:8536   */\n      dup3\n        /* \"#utility.yul\":8523:8541   */\n      add\n        /* \"#utility.yul\":8515:8541   */\n      swap1\n      pop\n        /* \"#utility.yul\":8587:8596   */\n      dup2\n        /* \"#utility.yul\":8581:8585   */\n      dup2\n        /* \"#utility.yul\":8577:8597   */\n      sub\n        /* \"#utility.yul\":8573:8574   */\n      0x00\n        /* \"#utility.yul\":8562:8571   */\n      dup4\n        /* \"#utility.yul\":8558:8575   */\n      add\n        /* \"#utility.yul\":8551:8598   */\n      mstore\n        /* \"#utility.yul\":8615:8717   */\n      tag_543\n        /* \"#utility.yul\":8712:8716   */\n      dup2\n        /* \"#utility.yul\":8703:8709   */\n      dup5\n        /* \"#utility.yul\":8615:8717   */\n      tag_416\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":8607:8717   */\n      swap1\n      pop\n        /* \"#utility.yul\":8363:8724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8730:9198   */\n    tag_94:\n        /* \"#utility.yul\":8795:8801   */\n      0x00\n        /* \"#utility.yul\":8803:8809   */\n      dup1\n        /* \"#utility.yul\":8852:8854   */\n      0x40\n        /* \"#utility.yul\":8840:8849   */\n      dup4\n        /* \"#utility.yul\":8831:8838   */\n      dup6\n        /* \"#utility.yul\":8827:8850   */\n      sub\n        /* \"#utility.yul\":8823:8855   */\n      slt\n        /* \"#utility.yul\":8820:8939   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":8858:8937   */\n      tag_546\n      tag_387\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8820:8939   */\n    tag_545:\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":9003:9056   */\n      tag_547\n        /* \"#utility.yul\":9048:9055   */\n      dup6\n        /* \"#utility.yul\":9039:9045   */\n      dup3\n        /* \"#utility.yul\":9028:9037   */\n      dup7\n        /* \"#utility.yul\":9024:9046   */\n      add\n        /* \"#utility.yul\":9003:9056   */\n      tag_406\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8993:9056   */\n      swap3\n      pop\n        /* \"#utility.yul\":8949:9066   */\n      pop\n        /* \"#utility.yul\":9105:9107   */\n      0x20\n        /* \"#utility.yul\":9131:9181   */\n      tag_548\n        /* \"#utility.yul\":9173:9180   */\n      dup6\n        /* \"#utility.yul\":9164:9170   */\n      dup3\n        /* \"#utility.yul\":9153:9162   */\n      dup7\n        /* \"#utility.yul\":9149:9171   */\n      add\n        /* \"#utility.yul\":9131:9181   */\n      tag_409\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9121:9181   */\n      swap2\n      pop\n        /* \"#utility.yul\":9076:9191   */\n      pop\n        /* \"#utility.yul\":8730:9198   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9321   */\n    tag_417:\n        /* \"#utility.yul\":9313:9314   */\n      0x00\n        /* \"#utility.yul\":9310:9311   */\n      dup1\n        /* \"#utility.yul\":9303:9315   */\n      revert\n        /* \"#utility.yul\":9327:9444   */\n    tag_418:\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9433:9434   */\n      dup1\n        /* \"#utility.yul\":9426:9438   */\n      revert\n        /* \"#utility.yul\":9450:9630   */\n    tag_208:\n        /* \"#utility.yul\":9498:9575   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9495:9496   */\n      0x00\n        /* \"#utility.yul\":9488:9576   */\n      mstore\n        /* \"#utility.yul\":9595:9599   */\n      0x41\n        /* \"#utility.yul\":9592:9593   */\n      0x04\n        /* \"#utility.yul\":9585:9600   */\n      mstore\n        /* \"#utility.yul\":9619:9623   */\n      0x24\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9609:9624   */\n      revert\n        /* \"#utility.yul\":9636:9917   */\n    tag_419:\n        /* \"#utility.yul\":9719:9746   */\n      tag_553\n        /* \"#utility.yul\":9741:9745   */\n      dup3\n        /* \"#utility.yul\":9719:9746   */\n      tag_397\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":9711:9717   */\n      dup2\n        /* \"#utility.yul\":9707:9747   */\n      add\n        /* \"#utility.yul\":9849:9855   */\n      dup2\n        /* \"#utility.yul\":9837:9847   */\n      dup2\n        /* \"#utility.yul\":9834:9856   */\n      lt\n        /* \"#utility.yul\":9813:9831   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9801:9811   */\n      dup3\n        /* \"#utility.yul\":9798:9832   */\n      gt\n        /* \"#utility.yul\":9795:9857   */\n      or\n        /* \"#utility.yul\":9792:9880   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":9860:9878   */\n      tag_555\n      tag_208\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9792:9880   */\n    tag_554:\n        /* \"#utility.yul\":9900:9910   */\n      dup1\n        /* \"#utility.yul\":9896:9898   */\n      0x40\n        /* \"#utility.yul\":9889:9911   */\n      mstore\n        /* \"#utility.yul\":9679:9917   */\n      pop\n        /* \"#utility.yul\":9636:9917   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9923:10052   */\n    tag_420:\n        /* \"#utility.yul\":9957:9963   */\n      0x00\n        /* \"#utility.yul\":9984:10004   */\n      tag_557\n      tag_386\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9974:10004   */\n      swap1\n      pop\n        /* \"#utility.yul\":10013:10046   */\n      tag_558\n        /* \"#utility.yul\":10041:10045   */\n      dup3\n        /* \"#utility.yul\":10033:10039   */\n      dup3\n        /* \"#utility.yul\":10013:10046   */\n      tag_419\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9923:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10365   */\n    tag_421:\n        /* \"#utility.yul\":10119:10123   */\n      0x00\n        /* \"#utility.yul\":10209:10227   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10201:10207   */\n      dup3\n        /* \"#utility.yul\":10198:10228   */\n      gt\n        /* \"#utility.yul\":10195:10251   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":10231:10249   */\n      tag_561\n      tag_208\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":10195:10251   */\n    tag_560:\n        /* \"#utility.yul\":10269:10298   */\n      tag_562\n        /* \"#utility.yul\":10291:10297   */\n      dup3\n        /* \"#utility.yul\":10269:10298   */\n      tag_397\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10261:10298   */\n      swap1\n      pop\n        /* \"#utility.yul\":10353:10357   */\n      0x20\n        /* \"#utility.yul\":10347:10351   */\n      dup2\n        /* \"#utility.yul\":10343:10358   */\n      add\n        /* \"#utility.yul\":10335:10358   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10371:10517   */\n    tag_422:\n        /* \"#utility.yul\":10468:10474   */\n      dup3\n        /* \"#utility.yul\":10463:10466   */\n      dup2\n        /* \"#utility.yul\":10458:10461   */\n      dup4\n        /* \"#utility.yul\":10445:10475   */\n      calldatacopy\n        /* \"#utility.yul\":10509:10510   */\n      0x00\n        /* \"#utility.yul\":10500:10506   */\n      dup4\n        /* \"#utility.yul\":10495:10498   */\n      dup4\n        /* \"#utility.yul\":10491:10507   */\n      add\n        /* \"#utility.yul\":10484:10511   */\n      mstore\n        /* \"#utility.yul\":10371:10517   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10523:10946   */\n    tag_423:\n        /* \"#utility.yul\":10600:10605   */\n      0x00\n        /* \"#utility.yul\":10625:10690   */\n      tag_565\n        /* \"#utility.yul\":10641:10689   */\n      tag_566\n        /* \"#utility.yul\":10682:10688   */\n      dup5\n        /* \"#utility.yul\":10641:10689   */\n      tag_421\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10625:10690   */\n      tag_420\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":10616:10690   */\n      swap1\n      pop\n        /* \"#utility.yul\":10713:10719   */\n      dup3\n        /* \"#utility.yul\":10706:10711   */\n      dup2\n        /* \"#utility.yul\":10699:10720   */\n      mstore\n        /* \"#utility.yul\":10751:10755   */\n      0x20\n        /* \"#utility.yul\":10744:10749   */\n      dup2\n        /* \"#utility.yul\":10740:10756   */\n      add\n        /* \"#utility.yul\":10789:10792   */\n      dup5\n        /* \"#utility.yul\":10780:10786   */\n      dup5\n        /* \"#utility.yul\":10775:10778   */\n      dup5\n        /* \"#utility.yul\":10771:10787   */\n      add\n        /* \"#utility.yul\":10768:10793   */\n      gt\n        /* \"#utility.yul\":10765:10877   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":10796:10875   */\n      tag_568\n      tag_418\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":10765:10877   */\n    tag_567:\n        /* \"#utility.yul\":10886:10940   */\n      tag_569\n        /* \"#utility.yul\":10933:10939   */\n      dup5\n        /* \"#utility.yul\":10928:10931   */\n      dup3\n        /* \"#utility.yul\":10923:10926   */\n      dup6\n        /* \"#utility.yul\":10886:10940   */\n      tag_422\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":10606:10946   */\n      pop\n        /* \"#utility.yul\":10523:10946   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10965:11303   */\n    tag_424:\n        /* \"#utility.yul\":11020:11025   */\n      0x00\n        /* \"#utility.yul\":11069:11072   */\n      dup3\n        /* \"#utility.yul\":11062:11066   */\n      0x1f\n        /* \"#utility.yul\":11054:11060   */\n      dup4\n        /* \"#utility.yul\":11050:11067   */\n      add\n        /* \"#utility.yul\":11046:11073   */\n      slt\n        /* \"#utility.yul\":11036:11158   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":11077:11156   */\n      tag_572\n      tag_417\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11036:11158   */\n    tag_571:\n        /* \"#utility.yul\":11194:11200   */\n      dup2\n        /* \"#utility.yul\":11181:11201   */\n      calldataload\n        /* \"#utility.yul\":11219:11297   */\n      tag_573\n        /* \"#utility.yul\":11293:11296   */\n      dup5\n        /* \"#utility.yul\":11285:11291   */\n      dup3\n        /* \"#utility.yul\":11278:11282   */\n      0x20\n        /* \"#utility.yul\":11270:11276   */\n      dup7\n        /* \"#utility.yul\":11266:11283   */\n      add\n        /* \"#utility.yul\":11219:11297   */\n      tag_423\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11210:11297   */\n      swap2\n      pop\n        /* \"#utility.yul\":11026:11303   */\n      pop\n        /* \"#utility.yul\":10965:11303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11309:12252   */\n    tag_106:\n        /* \"#utility.yul\":11404:11410   */\n      0x00\n        /* \"#utility.yul\":11412:11418   */\n      dup1\n        /* \"#utility.yul\":11420:11426   */\n      0x00\n        /* \"#utility.yul\":11428:11434   */\n      dup1\n        /* \"#utility.yul\":11477:11480   */\n      0x80\n        /* \"#utility.yul\":11465:11474   */\n      dup6\n        /* \"#utility.yul\":11456:11463   */\n      dup8\n        /* \"#utility.yul\":11452:11475   */\n      sub\n        /* \"#utility.yul\":11448:11481   */\n      slt\n        /* \"#utility.yul\":11445:11565   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":11484:11563   */\n      tag_576\n      tag_387\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":11445:11565   */\n    tag_575:\n        /* \"#utility.yul\":11604:11605   */\n      0x00\n        /* \"#utility.yul\":11629:11682   */\n      tag_577\n        /* \"#utility.yul\":11674:11681   */\n      dup8\n        /* \"#utility.yul\":11665:11671   */\n      dup3\n        /* \"#utility.yul\":11654:11663   */\n      dup9\n        /* \"#utility.yul\":11650:11672   */\n      add\n        /* \"#utility.yul\":11629:11682   */\n      tag_406\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11619:11682   */\n      swap5\n      pop\n        /* \"#utility.yul\":11575:11692   */\n      pop\n        /* \"#utility.yul\":11731:11733   */\n      0x20\n        /* \"#utility.yul\":11757:11810   */\n      tag_578\n        /* \"#utility.yul\":11802:11809   */\n      dup8\n        /* \"#utility.yul\":11793:11799   */\n      dup3\n        /* \"#utility.yul\":11782:11791   */\n      dup9\n        /* \"#utility.yul\":11778:11800   */\n      add\n        /* \"#utility.yul\":11757:11810   */\n      tag_406\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":11747:11810   */\n      swap4\n      pop\n        /* \"#utility.yul\":11702:11820   */\n      pop\n        /* \"#utility.yul\":11859:11861   */\n      0x40\n        /* \"#utility.yul\":11885:11938   */\n      tag_579\n        /* \"#utility.yul\":11930:11937   */\n      dup8\n        /* \"#utility.yul\":11921:11927   */\n      dup3\n        /* \"#utility.yul\":11910:11919   */\n      dup9\n        /* \"#utility.yul\":11906:11928   */\n      add\n        /* \"#utility.yul\":11885:11938   */\n      tag_401\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":11875:11938   */\n      swap3\n      pop\n        /* \"#utility.yul\":11830:11948   */\n      pop\n        /* \"#utility.yul\":12015:12017   */\n      0x60\n        /* \"#utility.yul\":12004:12013   */\n      dup6\n        /* \"#utility.yul\":12000:12018   */\n      add\n        /* \"#utility.yul\":11987:12019   */\n      calldataload\n        /* \"#utility.yul\":12046:12064   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12038:12044   */\n      dup2\n        /* \"#utility.yul\":12035:12065   */\n      gt\n        /* \"#utility.yul\":12032:12149   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":12068:12147   */\n      tag_581\n      tag_388\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":12032:12149   */\n    tag_580:\n        /* \"#utility.yul\":12173:12235   */\n      tag_582\n        /* \"#utility.yul\":12227:12234   */\n      dup8\n        /* \"#utility.yul\":12218:12224   */\n      dup3\n        /* \"#utility.yul\":12207:12216   */\n      dup9\n        /* \"#utility.yul\":12203:12225   */\n      add\n        /* \"#utility.yul\":12173:12235   */\n      tag_424\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":12163:12235   */\n      swap2\n      pop\n        /* \"#utility.yul\":11958:12245   */\n      pop\n        /* \"#utility.yul\":11309:12252   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12258:12372   */\n    tag_425:\n        /* \"#utility.yul\":12325:12331   */\n      0x00\n        /* \"#utility.yul\":12359:12364   */\n      dup2\n        /* \"#utility.yul\":12353:12365   */\n      mload\n        /* \"#utility.yul\":12343:12365   */\n      swap1\n      pop\n        /* \"#utility.yul\":12258:12372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12378:12562   */\n    tag_426:\n        /* \"#utility.yul\":12477:12488   */\n      0x00\n        /* \"#utility.yul\":12511:12517   */\n      dup3\n        /* \"#utility.yul\":12506:12509   */\n      dup3\n        /* \"#utility.yul\":12499:12518   */\n      mstore\n        /* \"#utility.yul\":12551:12555   */\n      0x20\n        /* \"#utility.yul\":12546:12549   */\n      dup3\n        /* \"#utility.yul\":12542:12556   */\n      add\n        /* \"#utility.yul\":12527:12556   */\n      swap1\n      pop\n        /* \"#utility.yul\":12378:12562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12568:12700   */\n    tag_427:\n        /* \"#utility.yul\":12635:12639   */\n      0x00\n        /* \"#utility.yul\":12658:12661   */\n      dup2\n        /* \"#utility.yul\":12650:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12688:12692   */\n      0x20\n        /* \"#utility.yul\":12683:12686   */\n      dup3\n        /* \"#utility.yul\":12679:12693   */\n      add\n        /* \"#utility.yul\":12671:12693   */\n      swap1\n      pop\n        /* \"#utility.yul\":12568:12700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:12814   */\n    tag_428:\n        /* \"#utility.yul\":12783:12807   */\n      tag_587\n        /* \"#utility.yul\":12801:12806   */\n      dup2\n        /* \"#utility.yul\":12783:12807   */\n      tag_403\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":12778:12781   */\n      dup3\n        /* \"#utility.yul\":12771:12808   */\n      mstore\n        /* \"#utility.yul\":12706:12814   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12820:12999   */\n    tag_429:\n        /* \"#utility.yul\":12889:12899   */\n      0x00\n        /* \"#utility.yul\":12910:12956   */\n      tag_589\n        /* \"#utility.yul\":12952:12955   */\n      dup4\n        /* \"#utility.yul\":12944:12950   */\n      dup4\n        /* \"#utility.yul\":12910:12956   */\n      tag_428\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":12988:12992   */\n      0x20\n        /* \"#utility.yul\":12983:12986   */\n      dup4\n        /* \"#utility.yul\":12979:12993   */\n      add\n        /* \"#utility.yul\":12965:12993   */\n      swap1\n      pop\n        /* \"#utility.yul\":12820:12999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13005:13118   */\n    tag_430:\n        /* \"#utility.yul\":13075:13079   */\n      0x00\n        /* \"#utility.yul\":13107:13111   */\n      0x20\n        /* \"#utility.yul\":13102:13105   */\n      dup3\n        /* \"#utility.yul\":13098:13112   */\n      add\n        /* \"#utility.yul\":13090:13112   */\n      swap1\n      pop\n        /* \"#utility.yul\":13005:13118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13154:13886   */\n    tag_431:\n        /* \"#utility.yul\":13273:13276   */\n      0x00\n        /* \"#utility.yul\":13302:13356   */\n      tag_592\n        /* \"#utility.yul\":13350:13355   */\n      dup3\n        /* \"#utility.yul\":13302:13356   */\n      tag_425\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":13372:13458   */\n      tag_593\n        /* \"#utility.yul\":13451:13457   */\n      dup2\n        /* \"#utility.yul\":13446:13449   */\n      dup6\n        /* \"#utility.yul\":13372:13458   */\n      tag_426\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":13365:13458   */\n      swap4\n      pop\n        /* \"#utility.yul\":13482:13538   */\n      tag_594\n        /* \"#utility.yul\":13532:13537   */\n      dup4\n        /* \"#utility.yul\":13482:13538   */\n      tag_427\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":13561:13568   */\n      dup1\n        /* \"#utility.yul\":13592:13593   */\n      0x00\n        /* \"#utility.yul\":13577:13861   */\n    tag_595:\n        /* \"#utility.yul\":13602:13608   */\n      dup4\n        /* \"#utility.yul\":13599:13600   */\n      dup2\n        /* \"#utility.yul\":13596:13609   */\n      lt\n        /* \"#utility.yul\":13577:13861   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":13678:13684   */\n      dup2\n        /* \"#utility.yul\":13672:13685   */\n      mload\n        /* \"#utility.yul\":13705:13768   */\n      tag_598\n        /* \"#utility.yul\":13764:13767   */\n      dup9\n        /* \"#utility.yul\":13749:13762   */\n      dup3\n        /* \"#utility.yul\":13705:13768   */\n      tag_429\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":13698:13768   */\n      swap8\n      pop\n        /* \"#utility.yul\":13791:13851   */\n      tag_599\n        /* \"#utility.yul\":13844:13850   */\n      dup4\n        /* \"#utility.yul\":13791:13851   */\n      tag_430\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":13781:13851   */\n      swap3\n      pop\n        /* \"#utility.yul\":13637:13861   */\n      pop\n        /* \"#utility.yul\":13624:13625   */\n      0x01\n        /* \"#utility.yul\":13621:13622   */\n      dup2\n        /* \"#utility.yul\":13617:13626   */\n      add\n        /* \"#utility.yul\":13612:13626   */\n      swap1\n      pop\n        /* \"#utility.yul\":13577:13861   */\n      jump(tag_595)\n    tag_597:\n        /* \"#utility.yul\":13581:13595   */\n      pop\n        /* \"#utility.yul\":13877:13880   */\n      dup6\n        /* \"#utility.yul\":13870:13880   */\n      swap4\n      pop\n        /* \"#utility.yul\":13278:13886   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13154:13886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13892:14265   */\n    tag_116:\n        /* \"#utility.yul\":14035:14039   */\n      0x00\n        /* \"#utility.yul\":14073:14075   */\n      0x20\n        /* \"#utility.yul\":14062:14071   */\n      dup3\n        /* \"#utility.yul\":14058:14076   */\n      add\n        /* \"#utility.yul\":14050:14076   */\n      swap1\n      pop\n        /* \"#utility.yul\":14122:14131   */\n      dup2\n        /* \"#utility.yul\":14116:14120   */\n      dup2\n        /* \"#utility.yul\":14112:14132   */\n      sub\n        /* \"#utility.yul\":14108:14109   */\n      0x00\n        /* \"#utility.yul\":14097:14106   */\n      dup4\n        /* \"#utility.yul\":14093:14110   */\n      add\n        /* \"#utility.yul\":14086:14133   */\n      mstore\n        /* \"#utility.yul\":14150:14258   */\n      tag_601\n        /* \"#utility.yul\":14253:14257   */\n      dup2\n        /* \"#utility.yul\":14244:14250   */\n      dup5\n        /* \"#utility.yul\":14150:14258   */\n      tag_431\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":14142:14258   */\n      swap1\n      pop\n        /* \"#utility.yul\":13892:14265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14271:14745   */\n    tag_122:\n        /* \"#utility.yul\":14339:14345   */\n      0x00\n        /* \"#utility.yul\":14347:14353   */\n      dup1\n        /* \"#utility.yul\":14396:14398   */\n      0x40\n        /* \"#utility.yul\":14384:14393   */\n      dup4\n        /* \"#utility.yul\":14375:14382   */\n      dup6\n        /* \"#utility.yul\":14371:14394   */\n      sub\n        /* \"#utility.yul\":14367:14399   */\n      slt\n        /* \"#utility.yul\":14364:14483   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":14402:14481   */\n      tag_604\n      tag_387\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":14364:14483   */\n    tag_603:\n        /* \"#utility.yul\":14522:14523   */\n      0x00\n        /* \"#utility.yul\":14547:14600   */\n      tag_605\n        /* \"#utility.yul\":14592:14599   */\n      dup6\n        /* \"#utility.yul\":14583:14589   */\n      dup3\n        /* \"#utility.yul\":14572:14581   */\n      dup7\n        /* \"#utility.yul\":14568:14590   */\n      add\n        /* \"#utility.yul\":14547:14600   */\n      tag_406\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":14537:14600   */\n      swap3\n      pop\n        /* \"#utility.yul\":14493:14610   */\n      pop\n        /* \"#utility.yul\":14649:14651   */\n      0x20\n        /* \"#utility.yul\":14675:14728   */\n      tag_606\n        /* \"#utility.yul\":14720:14727   */\n      dup6\n        /* \"#utility.yul\":14711:14717   */\n      dup3\n        /* \"#utility.yul\":14700:14709   */\n      dup7\n        /* \"#utility.yul\":14696:14718   */\n      add\n        /* \"#utility.yul\":14675:14728   */\n      tag_406\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":14665:14728   */\n      swap2\n      pop\n        /* \"#utility.yul\":14620:14738   */\n      pop\n        /* \"#utility.yul\":14271:14745   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14751:14931   */\n    tag_432:\n        /* \"#utility.yul\":14799:14876   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14796:14797   */\n      0x00\n        /* \"#utility.yul\":14789:14877   */\n      mstore\n        /* \"#utility.yul\":14896:14900   */\n      0x22\n        /* \"#utility.yul\":14893:14894   */\n      0x04\n        /* \"#utility.yul\":14886:14901   */\n      mstore\n        /* \"#utility.yul\":14920:14924   */\n      0x24\n        /* \"#utility.yul\":14917:14918   */\n      0x00\n        /* \"#utility.yul\":14910:14925   */\n      revert\n        /* \"#utility.yul\":14937:15257   */\n    tag_139:\n        /* \"#utility.yul\":14981:14987   */\n      0x00\n        /* \"#utility.yul\":15018:15019   */\n      0x02\n        /* \"#utility.yul\":15012:15016   */\n      dup3\n        /* \"#utility.yul\":15008:15020   */\n      div\n        /* \"#utility.yul\":14998:15020   */\n      swap1\n      pop\n        /* \"#utility.yul\":15065:15066   */\n      0x01\n        /* \"#utility.yul\":15059:15063   */\n      dup3\n        /* \"#utility.yul\":15055:15067   */\n      and\n        /* \"#utility.yul\":15086:15104   */\n      dup1\n        /* \"#utility.yul\":15076:15157   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":15142:15146   */\n      0x7f\n        /* \"#utility.yul\":15134:15140   */\n      dup3\n        /* \"#utility.yul\":15130:15147   */\n      and\n        /* \"#utility.yul\":15120:15147   */\n      swap2\n      pop\n        /* \"#utility.yul\":15076:15157   */\n    tag_609:\n        /* \"#utility.yul\":15204:15206   */\n      0x20\n        /* \"#utility.yul\":15196:15202   */\n      dup3\n        /* \"#utility.yul\":15193:15207   */\n      lt\n        /* \"#utility.yul\":15173:15191   */\n      dup2\n        /* \"#utility.yul\":15170:15208   */\n      sub\n        /* \"#utility.yul\":15167:15251   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":15223:15241   */\n      tag_611\n      tag_432\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":15167:15251   */\n    tag_610:\n        /* \"#utility.yul\":14988:15257   */\n      pop\n        /* \"#utility.yul\":14937:15257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15263:15705   */\n    tag_162:\n        /* \"#utility.yul\":15412:15416   */\n      0x00\n        /* \"#utility.yul\":15450:15452   */\n      0x60\n        /* \"#utility.yul\":15439:15448   */\n      dup3\n        /* \"#utility.yul\":15435:15453   */\n      add\n        /* \"#utility.yul\":15427:15453   */\n      swap1\n      pop\n        /* \"#utility.yul\":15463:15534   */\n      tag_613\n        /* \"#utility.yul\":15531:15532   */\n      0x00\n        /* \"#utility.yul\":15520:15529   */\n      dup4\n        /* \"#utility.yul\":15516:15533   */\n      add\n        /* \"#utility.yul\":15507:15513   */\n      dup7\n        /* \"#utility.yul\":15463:15534   */\n      tag_404\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":15544:15616   */\n      tag_614\n        /* \"#utility.yul\":15612:15614   */\n      0x20\n        /* \"#utility.yul\":15601:15610   */\n      dup4\n        /* \"#utility.yul\":15597:15615   */\n      add\n        /* \"#utility.yul\":15588:15594   */\n      dup6\n        /* \"#utility.yul\":15544:15616   */\n      tag_407\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":15626:15698   */\n      tag_615\n        /* \"#utility.yul\":15694:15696   */\n      0x40\n        /* \"#utility.yul\":15683:15692   */\n      dup4\n        /* \"#utility.yul\":15679:15697   */\n      add\n        /* \"#utility.yul\":15670:15676   */\n      dup5\n        /* \"#utility.yul\":15626:15698   */\n      tag_404\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":15263:15705   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15711:15891   */\n    tag_433:\n        /* \"#utility.yul\":15759:15836   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15756:15757   */\n      0x00\n        /* \"#utility.yul\":15749:15837   */\n      mstore\n        /* \"#utility.yul\":15856:15860   */\n      0x11\n        /* \"#utility.yul\":15853:15854   */\n      0x04\n        /* \"#utility.yul\":15846:15861   */\n      mstore\n        /* \"#utility.yul\":15880:15884   */\n      0x24\n        /* \"#utility.yul\":15877:15878   */\n      0x00\n        /* \"#utility.yul\":15870:15885   */\n      revert\n        /* \"#utility.yul\":15897:16088   */\n    tag_173:\n        /* \"#utility.yul\":15937:15940   */\n      0x00\n        /* \"#utility.yul\":15956:15976   */\n      tag_618\n        /* \"#utility.yul\":15974:15975   */\n      dup3\n        /* \"#utility.yul\":15956:15976   */\n      tag_399\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":15951:15976   */\n      swap2\n      pop\n        /* \"#utility.yul\":15990:16010   */\n      tag_619\n        /* \"#utility.yul\":16008:16009   */\n      dup4\n        /* \"#utility.yul\":15990:16010   */\n      tag_399\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":15985:16010   */\n      swap3\n      pop\n        /* \"#utility.yul\":16033:16034   */\n      dup3\n        /* \"#utility.yul\":16030:16031   */\n      dup3\n        /* \"#utility.yul\":16026:16035   */\n      add\n        /* \"#utility.yul\":16019:16035   */\n      swap1\n      pop\n        /* \"#utility.yul\":16054:16057   */\n      dup1\n        /* \"#utility.yul\":16051:16052   */\n      dup3\n        /* \"#utility.yul\":16048:16058   */\n      gt\n        /* \"#utility.yul\":16045:16081   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":16061:16079   */\n      tag_621\n      tag_433\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":16045:16081   */\n    tag_620:\n        /* \"#utility.yul\":15897:16088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16094:16274   */\n    tag_177:\n        /* \"#utility.yul\":16142:16219   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16139:16140   */\n      0x00\n        /* \"#utility.yul\":16132:16220   */\n      mstore\n        /* \"#utility.yul\":16239:16243   */\n      0x32\n        /* \"#utility.yul\":16236:16237   */\n      0x04\n        /* \"#utility.yul\":16229:16244   */\n      mstore\n        /* \"#utility.yul\":16263:16267   */\n      0x24\n        /* \"#utility.yul\":16260:16261   */\n      0x00\n        /* \"#utility.yul\":16253:16268   */\n      revert\n        /* \"#utility.yul\":16280:16452   */\n    tag_434:\n        /* \"#utility.yul\":16420:16444   */\n      0x4164647265737320616c72656164792065786973747300000000000000000000\n        /* \"#utility.yul\":16416:16417   */\n      0x00\n        /* \"#utility.yul\":16408:16414   */\n      dup3\n        /* \"#utility.yul\":16404:16418   */\n      add\n        /* \"#utility.yul\":16397:16445   */\n      mstore\n        /* \"#utility.yul\":16280:16452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16458:16824   */\n    tag_435:\n        /* \"#utility.yul\":16600:16603   */\n      0x00\n        /* \"#utility.yul\":16621:16688   */\n      tag_625\n        /* \"#utility.yul\":16685:16687   */\n      0x16\n        /* \"#utility.yul\":16680:16683   */\n      dup4\n        /* \"#utility.yul\":16621:16688   */\n      tag_395\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":16614:16688   */\n      swap2\n      pop\n        /* \"#utility.yul\":16697:16790   */\n      tag_626\n        /* \"#utility.yul\":16786:16789   */\n      dup3\n        /* \"#utility.yul\":16697:16790   */\n      tag_434\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":16815:16817   */\n      0x20\n        /* \"#utility.yul\":16810:16813   */\n      dup3\n        /* \"#utility.yul\":16806:16818   */\n      add\n        /* \"#utility.yul\":16799:16818   */\n      swap1\n      pop\n        /* \"#utility.yul\":16458:16824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16830:17249   */\n    tag_188:\n        /* \"#utility.yul\":16996:17000   */\n      0x00\n        /* \"#utility.yul\":17034:17036   */\n      0x20\n        /* \"#utility.yul\":17023:17032   */\n      dup3\n        /* \"#utility.yul\":17019:17037   */\n      add\n        /* \"#utility.yul\":17011:17037   */\n      swap1\n      pop\n        /* \"#utility.yul\":17083:17092   */\n      dup2\n        /* \"#utility.yul\":17077:17081   */\n      dup2\n        /* \"#utility.yul\":17073:17093   */\n      sub\n        /* \"#utility.yul\":17069:17070   */\n      0x00\n        /* \"#utility.yul\":17058:17067   */\n      dup4\n        /* \"#utility.yul\":17054:17071   */\n      add\n        /* \"#utility.yul\":17047:17094   */\n      mstore\n        /* \"#utility.yul\":17111:17242   */\n      tag_628\n        /* \"#utility.yul\":17237:17241   */\n      dup2\n        /* \"#utility.yul\":17111:17242   */\n      tag_435\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":17103:17242   */\n      swap1\n      pop\n        /* \"#utility.yul\":16830:17249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17255:17488   */\n    tag_193:\n        /* \"#utility.yul\":17294:17297   */\n      0x00\n        /* \"#utility.yul\":17317:17341   */\n      tag_630\n        /* \"#utility.yul\":17335:17340   */\n      dup3\n        /* \"#utility.yul\":17317:17341   */\n      tag_399\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":17308:17341   */\n      swap2\n      pop\n        /* \"#utility.yul\":17363:17429   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17356:17361   */\n      dup3\n        /* \"#utility.yul\":17353:17430   */\n      sub\n        /* \"#utility.yul\":17350:17453   */\n      tag_631\n      jumpi\n        /* \"#utility.yul\":17433:17451   */\n      tag_632\n      tag_433\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":17350:17453   */\n    tag_631:\n        /* \"#utility.yul\":17480:17481   */\n      0x01\n        /* \"#utility.yul\":17473:17478   */\n      dup3\n        /* \"#utility.yul\":17469:17482   */\n      add\n        /* \"#utility.yul\":17462:17482   */\n      swap1\n      pop\n        /* \"#utility.yul\":17255:17488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17494:17642   */\n    tag_436:\n        /* \"#utility.yul\":17596:17607   */\n      0x00\n        /* \"#utility.yul\":17633:17636   */\n      dup2\n        /* \"#utility.yul\":17618:17636   */\n      swap1\n      pop\n        /* \"#utility.yul\":17494:17642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17648:18038   */\n    tag_437:\n        /* \"#utility.yul\":17754:17757   */\n      0x00\n        /* \"#utility.yul\":17782:17821   */\n      tag_635\n        /* \"#utility.yul\":17815:17820   */\n      dup3\n        /* \"#utility.yul\":17782:17821   */\n      tag_394\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":17837:17926   */\n      tag_636\n        /* \"#utility.yul\":17919:17925   */\n      dup2\n        /* \"#utility.yul\":17914:17917   */\n      dup6\n        /* \"#utility.yul\":17837:17926   */\n      tag_436\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":17830:17926   */\n      swap4\n      pop\n        /* \"#utility.yul\":17935:18000   */\n      tag_637\n        /* \"#utility.yul\":17993:17999   */\n      dup2\n        /* \"#utility.yul\":17988:17991   */\n      dup6\n        /* \"#utility.yul\":17981:17985   */\n      0x20\n        /* \"#utility.yul\":17974:17979   */\n      dup7\n        /* \"#utility.yul\":17970:17986   */\n      add\n        /* \"#utility.yul\":17935:18000   */\n      tag_396\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":18025:18031   */\n      dup1\n        /* \"#utility.yul\":18020:18023   */\n      dup5\n        /* \"#utility.yul\":18016:18032   */\n      add\n        /* \"#utility.yul\":18009:18032   */\n      swap2\n      pop\n        /* \"#utility.yul\":17758:18038   */\n      pop\n        /* \"#utility.yul\":17648:18038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18044:18479   */\n    tag_241:\n        /* \"#utility.yul\":18224:18227   */\n      0x00\n        /* \"#utility.yul\":18246:18341   */\n      tag_639\n        /* \"#utility.yul\":18337:18340   */\n      dup3\n        /* \"#utility.yul\":18328:18334   */\n      dup6\n        /* \"#utility.yul\":18246:18341   */\n      tag_437\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":18239:18341   */\n      swap2\n      pop\n        /* \"#utility.yul\":18358:18453   */\n      tag_640\n        /* \"#utility.yul\":18449:18452   */\n      dup3\n        /* \"#utility.yul\":18440:18446   */\n      dup5\n        /* \"#utility.yul\":18358:18453   */\n      tag_437\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":18351:18453   */\n      swap2\n      pop\n        /* \"#utility.yul\":18470:18473   */\n      dup2\n        /* \"#utility.yul\":18463:18473   */\n      swap1\n      pop\n        /* \"#utility.yul\":18044:18479   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18485:18583   */\n    tag_438:\n        /* \"#utility.yul\":18536:18542   */\n      0x00\n        /* \"#utility.yul\":18570:18575   */\n      dup2\n        /* \"#utility.yul\":18564:18576   */\n      mload\n        /* \"#utility.yul\":18554:18576   */\n      swap1\n      pop\n        /* \"#utility.yul\":18485:18583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18589:18757   */\n    tag_439:\n        /* \"#utility.yul\":18672:18683   */\n      0x00\n        /* \"#utility.yul\":18706:18712   */\n      dup3\n        /* \"#utility.yul\":18701:18704   */\n      dup3\n        /* \"#utility.yul\":18694:18713   */\n      mstore\n        /* \"#utility.yul\":18746:18750   */\n      0x20\n        /* \"#utility.yul\":18741:18744   */\n      dup3\n        /* \"#utility.yul\":18737:18751   */\n      add\n        /* \"#utility.yul\":18722:18751   */\n      swap1\n      pop\n        /* \"#utility.yul\":18589:18757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18763:19136   */\n    tag_440:\n        /* \"#utility.yul\":18849:18852   */\n      0x00\n        /* \"#utility.yul\":18877:18915   */\n      tag_644\n        /* \"#utility.yul\":18909:18914   */\n      dup3\n        /* \"#utility.yul\":18877:18915   */\n      tag_438\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":18931:19001   */\n      tag_645\n        /* \"#utility.yul\":18994:19000   */\n      dup2\n        /* \"#utility.yul\":18989:18992   */\n      dup6\n        /* \"#utility.yul\":18931:19001   */\n      tag_439\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":18924:19001   */\n      swap4\n      pop\n        /* \"#utility.yul\":19010:19075   */\n      tag_646\n        /* \"#utility.yul\":19068:19074   */\n      dup2\n        /* \"#utility.yul\":19063:19066   */\n      dup6\n        /* \"#utility.yul\":19056:19060   */\n      0x20\n        /* \"#utility.yul\":19049:19054   */\n      dup7\n        /* \"#utility.yul\":19045:19061   */\n      add\n        /* \"#utility.yul\":19010:19075   */\n      tag_396\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":19100:19129   */\n      tag_647\n        /* \"#utility.yul\":19122:19128   */\n      dup2\n        /* \"#utility.yul\":19100:19129   */\n      tag_397\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":19095:19098   */\n      dup5\n        /* \"#utility.yul\":19091:19130   */\n      add\n        /* \"#utility.yul\":19084:19130   */\n      swap2\n      pop\n        /* \"#utility.yul\":18853:19136   */\n      pop\n        /* \"#utility.yul\":18763:19136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19142:19782   */\n    tag_306:\n        /* \"#utility.yul\":19337:19341   */\n      0x00\n        /* \"#utility.yul\":19375:19378   */\n      0x80\n        /* \"#utility.yul\":19364:19373   */\n      dup3\n        /* \"#utility.yul\":19360:19379   */\n      add\n        /* \"#utility.yul\":19352:19379   */\n      swap1\n      pop\n        /* \"#utility.yul\":19389:19460   */\n      tag_649\n        /* \"#utility.yul\":19457:19458   */\n      0x00\n        /* \"#utility.yul\":19446:19455   */\n      dup4\n        /* \"#utility.yul\":19442:19459   */\n      add\n        /* \"#utility.yul\":19433:19439   */\n      dup8\n        /* \"#utility.yul\":19389:19460   */\n      tag_404\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":19470:19542   */\n      tag_650\n        /* \"#utility.yul\":19538:19540   */\n      0x20\n        /* \"#utility.yul\":19527:19536   */\n      dup4\n        /* \"#utility.yul\":19523:19541   */\n      add\n        /* \"#utility.yul\":19514:19520   */\n      dup7\n        /* \"#utility.yul\":19470:19542   */\n      tag_404\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":19552:19624   */\n      tag_651\n        /* \"#utility.yul\":19620:19622   */\n      0x40\n        /* \"#utility.yul\":19609:19618   */\n      dup4\n        /* \"#utility.yul\":19605:19623   */\n      add\n        /* \"#utility.yul\":19596:19602   */\n      dup6\n        /* \"#utility.yul\":19552:19624   */\n      tag_407\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19671:19680   */\n      dup2\n        /* \"#utility.yul\":19665:19669   */\n      dup2\n        /* \"#utility.yul\":19661:19681   */\n      sub\n        /* \"#utility.yul\":19656:19658   */\n      0x60\n        /* \"#utility.yul\":19645:19654   */\n      dup4\n        /* \"#utility.yul\":19641:19659   */\n      add\n        /* \"#utility.yul\":19634:19682   */\n      mstore\n        /* \"#utility.yul\":19699:19775   */\n      tag_652\n        /* \"#utility.yul\":19770:19774   */\n      dup2\n        /* \"#utility.yul\":19761:19767   */\n      dup5\n        /* \"#utility.yul\":19699:19775   */\n      tag_440\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":19691:19775   */\n      swap1\n      pop\n        /* \"#utility.yul\":19142:19782   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19788:19929   */\n    tag_441:\n        /* \"#utility.yul\":19844:19849   */\n      0x00\n        /* \"#utility.yul\":19875:19881   */\n      dup2\n        /* \"#utility.yul\":19869:19882   */\n      mload\n        /* \"#utility.yul\":19860:19882   */\n      swap1\n      pop\n        /* \"#utility.yul\":19891:19923   */\n      tag_654\n        /* \"#utility.yul\":19917:19922   */\n      dup2\n        /* \"#utility.yul\":19891:19923   */\n      tag_390\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19788:19929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19935:20284   */\n    tag_309:\n        /* \"#utility.yul\":20004:20010   */\n      0x00\n        /* \"#utility.yul\":20053:20055   */\n      0x20\n        /* \"#utility.yul\":20041:20050   */\n      dup3\n        /* \"#utility.yul\":20032:20039   */\n      dup5\n        /* \"#utility.yul\":20028:20051   */\n      sub\n        /* \"#utility.yul\":20024:20056   */\n      slt\n        /* \"#utility.yul\":20021:20140   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":20059:20138   */\n      tag_657\n      tag_387\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":20021:20140   */\n    tag_656:\n        /* \"#utility.yul\":20179:20180   */\n      0x00\n        /* \"#utility.yul\":20204:20267   */\n      tag_658\n        /* \"#utility.yul\":20259:20266   */\n      dup5\n        /* \"#utility.yul\":20250:20256   */\n      dup3\n        /* \"#utility.yul\":20239:20248   */\n      dup6\n        /* \"#utility.yul\":20235:20257   */\n      add\n        /* \"#utility.yul\":20204:20267   */\n      tag_441\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":20194:20267   */\n      swap2\n      pop\n        /* \"#utility.yul\":20150:20277   */\n      pop\n        /* \"#utility.yul\":19935:20284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20290:20470   */\n    tag_338:\n        /* \"#utility.yul\":20338:20415   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20335:20336   */\n      0x00\n        /* \"#utility.yul\":20328:20416   */\n      mstore\n        /* \"#utility.yul\":20435:20439   */\n      0x12\n        /* \"#utility.yul\":20432:20433   */\n      0x04\n        /* \"#utility.yul\":20425:20440   */\n      mstore\n        /* \"#utility.yul\":20459:20463   */\n      0x24\n        /* \"#utility.yul\":20456:20457   */\n      0x00\n        /* \"#utility.yul\":20449:20464   */\n      revert\n        /* \"#utility.yul\":20476:20808   */\n    tag_359:\n        /* \"#utility.yul\":20597:20601   */\n      0x00\n        /* \"#utility.yul\":20635:20637   */\n      0x40\n        /* \"#utility.yul\":20624:20633   */\n      dup3\n        /* \"#utility.yul\":20620:20638   */\n      add\n        /* \"#utility.yul\":20612:20638   */\n      swap1\n      pop\n        /* \"#utility.yul\":20648:20719   */\n      tag_661\n        /* \"#utility.yul\":20716:20717   */\n      0x00\n        /* \"#utility.yul\":20705:20714   */\n      dup4\n        /* \"#utility.yul\":20701:20718   */\n      add\n        /* \"#utility.yul\":20692:20698   */\n      dup6\n        /* \"#utility.yul\":20648:20719   */\n      tag_404\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20729:20801   */\n      tag_662\n        /* \"#utility.yul\":20797:20799   */\n      0x20\n        /* \"#utility.yul\":20786:20795   */\n      dup4\n        /* \"#utility.yul\":20782:20800   */\n      add\n        /* \"#utility.yul\":20773:20779   */\n      dup5\n        /* \"#utility.yul\":20729:20801   */\n      tag_407\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":20476:20808   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6aab86c192230581f8d7664ad57efc2ba131dc69b2203c64065f43206c58f5a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2992": {
									"entryPoint": null,
									"id": 2992,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 259,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9923:13",
										"nodeType": "YulBlock",
										"src": "0:9923:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "934:28:13",
													"nodeType": "YulBlock",
													"src": "934:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:13",
																		"nodeType": "YulLiteral",
																		"src": "951:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:13",
																		"nodeType": "YulLiteral",
																		"src": "954:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:13"
																},
																"nativeSrc": "944:12:13",
																"nodeType": "YulFunctionCall",
																"src": "944:12:13"
															},
															"nativeSrc": "944:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:13"
											},
											{
												"body": {
													"nativeSrc": "1057:28:13",
													"nodeType": "YulBlock",
													"src": "1057:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:13"
																},
																"nativeSrc": "1067:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:13"
															},
															"nativeSrc": "1067:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:13"
											},
											{
												"body": {
													"nativeSrc": "1139:54:13",
													"nodeType": "YulBlock",
													"src": "1139:54:13",
													"statements": [
														{
															"nativeSrc": "1149:38:13",
															"nodeType": "YulAssignment",
															"src": "1149:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:13"
																		},
																		"nativeSrc": "1163:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:13"
																		},
																		"nativeSrc": "1179:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:13"
																},
																"nativeSrc": "1159:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:13",
														"nodeType": "YulTypedName",
														"src": "1122:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:13",
														"nodeType": "YulTypedName",
														"src": "1132:6:13",
														"type": ""
													}
												],
												"src": "1091:102:13"
											},
											{
												"body": {
													"nativeSrc": "1227:152:13",
													"nodeType": "YulBlock",
													"src": "1227:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:13"
																},
																"nativeSrc": "1237:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:13"
															},
															"nativeSrc": "1237:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:13"
																},
																"nativeSrc": "1334:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:13"
															},
															"nativeSrc": "1334:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:13"
																},
																"nativeSrc": "1358:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:13"
															},
															"nativeSrc": "1358:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:13"
											},
											{
												"body": {
													"nativeSrc": "1428:238:13",
													"nodeType": "YulBlock",
													"src": "1428:238:13",
													"statements": [
														{
															"nativeSrc": "1438:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:13"
																		},
																		"nativeSrc": "1468:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:13"
																},
																"nativeSrc": "1456:40:13",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:13",
																"nodeType": "YulBlock",
																"src": "1607:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:13"
																			},
																			"nativeSrc": "1609:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:13"
																		},
																		"nativeSrc": "1609:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:13"
																		},
																		"nativeSrc": "1547:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:13"
																		},
																		"nativeSrc": "1583:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:13"
																},
																"nativeSrc": "1544:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:13"
															},
															"nativeSrc": "1541:88:13",
															"nodeType": "YulIf",
															"src": "1541:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:13"
																},
																"nativeSrc": "1638:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:13"
															},
															"nativeSrc": "1638:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:13",
														"nodeType": "YulTypedName",
														"src": "1414:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:13",
														"nodeType": "YulTypedName",
														"src": "1422:4:13",
														"type": ""
													}
												],
												"src": "1385:281:13"
											},
											{
												"body": {
													"nativeSrc": "1713:88:13",
													"nodeType": "YulBlock",
													"src": "1713:88:13",
													"statements": [
														{
															"nativeSrc": "1723:30:13",
															"nodeType": "YulAssignment",
															"src": "1723:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:13"
																},
																"nativeSrc": "1733:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:13"
																},
																"nativeSrc": "1762:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:13"
															},
															"nativeSrc": "1762:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:13",
														"nodeType": "YulTypedName",
														"src": "1697:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:13",
														"nodeType": "YulTypedName",
														"src": "1706:6:13",
														"type": ""
													}
												],
												"src": "1672:129:13"
											},
											{
												"body": {
													"nativeSrc": "1874:241:13",
													"nodeType": "YulBlock",
													"src": "1874:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:13",
																"nodeType": "YulBlock",
																"src": "1979:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:13"
																			},
																			"nativeSrc": "1981:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:13"
																		},
																		"nativeSrc": "1981:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:13"
																},
																"nativeSrc": "1948:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:13"
															},
															"nativeSrc": "1945:56:13",
															"nodeType": "YulIf",
															"src": "1945:56:13"
														},
														{
															"nativeSrc": "2011:37:13",
															"nodeType": "YulAssignment",
															"src": "2011:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:13"
																},
																"nativeSrc": "2019:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:13"
																}
															]
														},
														{
															"nativeSrc": "2085:23:13",
															"nodeType": "YulAssignment",
															"src": "2085:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:13"
																},
																"nativeSrc": "2093:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:13",
														"nodeType": "YulTypedName",
														"src": "1858:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:13",
														"nodeType": "YulTypedName",
														"src": "1869:4:13",
														"type": ""
													}
												],
												"src": "1807:308:13"
											},
											{
												"body": {
													"nativeSrc": "2183:184:13",
													"nodeType": "YulBlock",
													"src": "2183:184:13",
													"statements": [
														{
															"nativeSrc": "2193:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2193:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2202:1:13",
																"nodeType": "YulLiteral",
																"src": "2202:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2197:1:13",
																	"nodeType": "YulTypedName",
																	"src": "2197:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2262:63:13",
																"nodeType": "YulBlock",
																"src": "2262:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2287:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2287:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2292:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "2292:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2283:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2283:3:13"
																					},
																					"nativeSrc": "2283:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2283:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2306:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2311:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "2311:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:13"
																							},
																							"nativeSrc": "2302:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2296:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2296:5:13"
																					},
																					"nativeSrc": "2296:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2296:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2276:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:13"
																			},
																			"nativeSrc": "2276:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2276:39:13"
																		},
																		"nativeSrc": "2276:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2276:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2223:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2223:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2226:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2226:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2220:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2220:2:13"
																},
																"nativeSrc": "2220:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2220:13:13"
															},
															"nativeSrc": "2212:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2234:19:13",
																"nodeType": "YulBlock",
																"src": "2234:19:13",
																"statements": [
																	{
																		"nativeSrc": "2236:15:13",
																		"nodeType": "YulAssignment",
																		"src": "2236:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2245:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "2245:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2248:2:13",
																					"nodeType": "YulLiteral",
																					"src": "2248:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2241:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:13"
																			},
																			"nativeSrc": "2241:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2241:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2236:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2236:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2216:3:13",
																"nodeType": "YulBlock",
																"src": "2216:3:13",
																"statements": []
															},
															"src": "2212:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2345:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2345:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2350:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2350:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2341:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2341:3:13"
																		},
																		"nativeSrc": "2341:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2341:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2359:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2334:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:13"
																},
																"nativeSrc": "2334:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2334:27:13"
															},
															"nativeSrc": "2334:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2334:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:13",
														"nodeType": "YulTypedName",
														"src": "2165:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:13",
														"nodeType": "YulTypedName",
														"src": "2170:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:13",
														"nodeType": "YulTypedName",
														"src": "2175:6:13",
														"type": ""
													}
												],
												"src": "2121:246:13"
											},
											{
												"body": {
													"nativeSrc": "2468:339:13",
													"nodeType": "YulBlock",
													"src": "2468:339:13",
													"statements": [
														{
															"nativeSrc": "2478:75:13",
															"nodeType": "YulAssignment",
															"src": "2478:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2545:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2503:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "2503:41:13"
																		},
																		"nativeSrc": "2503:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2487:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "2487:15:13"
																},
																"nativeSrc": "2487:66:13",
																"nodeType": "YulFunctionCall",
																"src": "2487:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2478:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2478:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2569:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2576:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2562:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:13"
																},
																"nativeSrc": "2562:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2562:21:13"
															},
															"nativeSrc": "2562:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2562:21:13"
														},
														{
															"nativeSrc": "2592:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2592:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2607:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2607:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2614:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2614:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2603:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2603:3:13"
																},
																"nativeSrc": "2603:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2603:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2596:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2596:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2657:83:13",
																"nodeType": "YulBlock",
																"src": "2657:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2659:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2659:77:13"
																			},
																			"nativeSrc": "2659:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2659:79:13"
																		},
																		"nativeSrc": "2659:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2659:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2638:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2638:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2643:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2643:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nativeSrc": "2634:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2652:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2652:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2631:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2631:2:13"
																},
																"nativeSrc": "2631:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2631:25:13"
															},
															"nativeSrc": "2628:112:13",
															"nodeType": "YulIf",
															"src": "2628:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2784:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2789:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2789:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2794:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2794:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2749:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2749:34:13"
																},
																"nativeSrc": "2749:52:13",
																"nodeType": "YulFunctionCall",
																"src": "2749:52:13"
															},
															"nativeSrc": "2749:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "2749:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2373:434:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2441:3:13",
														"nodeType": "YulTypedName",
														"src": "2441:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2446:6:13",
														"nodeType": "YulTypedName",
														"src": "2446:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2454:3:13",
														"nodeType": "YulTypedName",
														"src": "2454:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2462:5:13",
														"nodeType": "YulTypedName",
														"src": "2462:5:13",
														"type": ""
													}
												],
												"src": "2373:434:13"
											},
											{
												"body": {
													"nativeSrc": "2900:282:13",
													"nodeType": "YulBlock",
													"src": "2900:282:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2949:83:13",
																"nodeType": "YulBlock",
																"src": "2949:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2951:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2951:77:13"
																			},
																			"nativeSrc": "2951:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2951:79:13"
																		},
																		"nativeSrc": "2951:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2951:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2928:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2936:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2936:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2924:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:13"
																				},
																				"nativeSrc": "2924:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2943:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2943:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2920:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:13"
																		},
																		"nativeSrc": "2920:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2913:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:13"
																},
																"nativeSrc": "2913:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2913:35:13"
															},
															"nativeSrc": "2910:122:13",
															"nodeType": "YulIf",
															"src": "2910:122:13"
														},
														{
															"nativeSrc": "3041:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3041:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3055:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3055:5:13"
																},
																"nativeSrc": "3055:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3055:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3045:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3077:99:13",
															"nodeType": "YulAssignment",
															"src": "3077:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3149:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3149:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3157:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3157:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3145:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:13"
																		},
																		"nativeSrc": "3145:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3145:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3164:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3172:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3086:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3086:58:13"
																},
																"nativeSrc": "3086:90:13",
																"nodeType": "YulFunctionCall",
																"src": "3086:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3077:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3077:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2827:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2878:6:13",
														"nodeType": "YulTypedName",
														"src": "2878:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2886:3:13",
														"nodeType": "YulTypedName",
														"src": "2886:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2894:5:13",
														"nodeType": "YulTypedName",
														"src": "2894:5:13",
														"type": ""
													}
												],
												"src": "2827:355:13"
											},
											{
												"body": {
													"nativeSrc": "3346:1181:13",
													"nodeType": "YulBlock",
													"src": "3346:1181:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3393:83:13",
																"nodeType": "YulBlock",
																"src": "3393:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3395:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3395:77:13"
																			},
																			"nativeSrc": "3395:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3395:79:13"
																		},
																		"nativeSrc": "3395:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3395:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3367:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3367:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3376:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3376:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3363:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:13"
																		},
																		"nativeSrc": "3363:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3388:3:13",
																		"nodeType": "YulLiteral",
																		"src": "3388:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3359:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3359:3:13"
																},
																"nativeSrc": "3359:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3359:33:13"
															},
															"nativeSrc": "3356:120:13",
															"nodeType": "YulIf",
															"src": "3356:120:13"
														},
														{
															"nativeSrc": "3486:128:13",
															"nodeType": "YulBlock",
															"src": "3486:128:13",
															"statements": [
																{
																	"nativeSrc": "3501:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3501:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3515:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3515:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3505:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3505:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3530:74:13",
																	"nodeType": "YulAssignment",
																	"src": "3530:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3576:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3576:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3587:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3587:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3572:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3572:3:13"
																				},
																				"nativeSrc": "3572:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3572:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3596:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3596:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3540:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "3540:31:13"
																		},
																		"nativeSrc": "3540:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3540:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3530:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3530:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3624:292:13",
															"nodeType": "YulBlock",
															"src": "3624:292:13",
															"statements": [
																{
																	"nativeSrc": "3639:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3639:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3663:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3663:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3674:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3674:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3659:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:13"
																				},
																				"nativeSrc": "3659:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3659:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3653:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3653:5:13"
																		},
																		"nativeSrc": "3653:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3653:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3643:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3643:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3725:83:13",
																		"nodeType": "YulBlock",
																		"src": "3725:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3727:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3727:77:13"
																					},
																					"nativeSrc": "3727:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3727:79:13"
																				},
																				"nativeSrc": "3727:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3727:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3697:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3697:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3705:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3705:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3694:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3694:2:13"
																		},
																		"nativeSrc": "3694:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:30:13"
																	},
																	"nativeSrc": "3691:117:13",
																	"nodeType": "YulIf",
																	"src": "3691:117:13"
																},
																{
																	"nativeSrc": "3822:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3822:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3878:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3878:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3889:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3889:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3874:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3874:3:13"
																				},
																				"nativeSrc": "3874:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3874:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3898:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3898:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3832:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3832:41:13"
																		},
																		"nativeSrc": "3832:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3832:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3822:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3822:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3926:292:13",
															"nodeType": "YulBlock",
															"src": "3926:292:13",
															"statements": [
																{
																	"nativeSrc": "3941:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3941:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3965:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3965:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3976:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3976:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3961:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3961:3:13"
																				},
																				"nativeSrc": "3961:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3961:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3955:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3955:5:13"
																		},
																		"nativeSrc": "3955:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3955:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3945:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3945:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4027:83:13",
																		"nodeType": "YulBlock",
																		"src": "4027:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4029:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4029:77:13"
																					},
																					"nativeSrc": "4029:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4029:79:13"
																				},
																				"nativeSrc": "4029:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4029:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3999:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3999:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4007:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4007:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3996:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3996:2:13"
																		},
																		"nativeSrc": "3996:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3996:30:13"
																	},
																	"nativeSrc": "3993:117:13",
																	"nodeType": "YulIf",
																	"src": "3993:117:13"
																},
																{
																	"nativeSrc": "4124:84:13",
																	"nodeType": "YulAssignment",
																	"src": "4124:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4180:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4180:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4191:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4191:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4176:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4176:3:13"
																				},
																				"nativeSrc": "4176:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4176:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4200:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4200:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4134:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "4134:41:13"
																		},
																		"nativeSrc": "4134:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4124:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4124:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4228:292:13",
															"nodeType": "YulBlock",
															"src": "4228:292:13",
															"statements": [
																{
																	"nativeSrc": "4243:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4243:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4267:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4267:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4278:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4278:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4263:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:13"
																				},
																				"nativeSrc": "4263:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4263:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4257:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4257:5:13"
																		},
																		"nativeSrc": "4257:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4257:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4247:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4247:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4329:83:13",
																		"nodeType": "YulBlock",
																		"src": "4329:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4331:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4331:77:13"
																					},
																					"nativeSrc": "4331:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4331:79:13"
																				},
																				"nativeSrc": "4331:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4331:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4301:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4301:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4309:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4309:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4298:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4298:2:13"
																		},
																		"nativeSrc": "4298:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4298:30:13"
																	},
																	"nativeSrc": "4295:117:13",
																	"nodeType": "YulIf",
																	"src": "4295:117:13"
																},
																{
																	"nativeSrc": "4426:84:13",
																	"nodeType": "YulAssignment",
																	"src": "4426:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4482:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4482:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4493:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4478:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4478:3:13"
																				},
																				"nativeSrc": "4478:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4478:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4502:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4502:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4436:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "4436:41:13"
																		},
																		"nativeSrc": "4436:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4436:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4426:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4426:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3188:1339:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3292:9:13",
														"nodeType": "YulTypedName",
														"src": "3292:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3303:7:13",
														"nodeType": "YulTypedName",
														"src": "3303:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3315:6:13",
														"nodeType": "YulTypedName",
														"src": "3315:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3323:6:13",
														"nodeType": "YulTypedName",
														"src": "3323:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3331:6:13",
														"nodeType": "YulTypedName",
														"src": "3331:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3339:6:13",
														"nodeType": "YulTypedName",
														"src": "3339:6:13",
														"type": ""
													}
												],
												"src": "3188:1339:13"
											},
											{
												"body": {
													"nativeSrc": "4592:40:13",
													"nodeType": "YulBlock",
													"src": "4592:40:13",
													"statements": [
														{
															"nativeSrc": "4603:22:13",
															"nodeType": "YulAssignment",
															"src": "4603:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4619:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4619:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4613:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4613:5:13"
																},
																"nativeSrc": "4613:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4613:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4603:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4533:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4575:5:13",
														"nodeType": "YulTypedName",
														"src": "4575:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4585:6:13",
														"nodeType": "YulTypedName",
														"src": "4585:6:13",
														"type": ""
													}
												],
												"src": "4533:99:13"
											},
											{
												"body": {
													"nativeSrc": "4666:152:13",
													"nodeType": "YulBlock",
													"src": "4666:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4683:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4683:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4686:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4676:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:13"
																},
																"nativeSrc": "4676:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4676:88:13"
															},
															"nativeSrc": "4676:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4676:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4780:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4780:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4783:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4783:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4773:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4773:6:13"
																},
																"nativeSrc": "4773:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4773:15:13"
															},
															"nativeSrc": "4773:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4773:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4804:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4804:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4807:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4807:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4797:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4797:6:13"
																},
																"nativeSrc": "4797:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4797:15:13"
															},
															"nativeSrc": "4797:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4797:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4638:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4638:180:13"
											},
											{
												"body": {
													"nativeSrc": "4875:269:13",
													"nodeType": "YulBlock",
													"src": "4875:269:13",
													"statements": [
														{
															"nativeSrc": "4885:22:13",
															"nodeType": "YulAssignment",
															"src": "4885:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4899:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4899:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4905:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4905:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4895:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4895:3:13"
																},
																"nativeSrc": "4895:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4895:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4885:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:13"
																}
															]
														},
														{
															"nativeSrc": "4916:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4916:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4946:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4946:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4952:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4952:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4942:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:13"
																},
																"nativeSrc": "4942:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4942:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4920:18:13",
																	"nodeType": "YulTypedName",
																	"src": "4920:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4993:51:13",
																"nodeType": "YulBlock",
																"src": "4993:51:13",
																"statements": [
																	{
																		"nativeSrc": "5007:27:13",
																		"nodeType": "YulAssignment",
																		"src": "5007:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5021:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5021:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5029:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5029:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5017:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5017:3:13"
																			},
																			"nativeSrc": "5017:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5017:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5007:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5007:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4973:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "4973:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4966:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4966:6:13"
																},
																"nativeSrc": "4966:26:13",
																"nodeType": "YulFunctionCall",
																"src": "4966:26:13"
															},
															"nativeSrc": "4963:81:13",
															"nodeType": "YulIf",
															"src": "4963:81:13"
														},
														{
															"body": {
																"nativeSrc": "5096:42:13",
																"nodeType": "YulBlock",
																"src": "5096:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5110:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5110:16:13"
																			},
																			"nativeSrc": "5110:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5110:18:13"
																		},
																		"nativeSrc": "5110:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5110:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5060:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "5060:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5083:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5083:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5091:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5091:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5080:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5080:2:13"
																		},
																		"nativeSrc": "5080:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5080:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5057:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5057:2:13"
																},
																"nativeSrc": "5057:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5057:38:13"
															},
															"nativeSrc": "5054:84:13",
															"nodeType": "YulIf",
															"src": "5054:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4824:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4859:4:13",
														"nodeType": "YulTypedName",
														"src": "4859:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													}
												],
												"src": "4824:320:13"
											},
											{
												"body": {
													"nativeSrc": "5204:87:13",
													"nodeType": "YulBlock",
													"src": "5204:87:13",
													"statements": [
														{
															"nativeSrc": "5214:11:13",
															"nodeType": "YulAssignment",
															"src": "5214:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "5222:3:13",
																"nodeType": "YulIdentifier",
																"src": "5222:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5214:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5214:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5242:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5242:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5245:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5245:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5235:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:13"
																},
																"nativeSrc": "5235:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5235:14:13"
															},
															"nativeSrc": "5235:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "5235:14:13"
														},
														{
															"nativeSrc": "5258:26:13",
															"nodeType": "YulAssignment",
															"src": "5258:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5276:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5276:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5279:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5279:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5266:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5266:9:13"
																},
																"nativeSrc": "5266:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5266:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5258:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5258:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5150:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5191:3:13",
														"nodeType": "YulTypedName",
														"src": "5191:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5199:4:13",
														"nodeType": "YulTypedName",
														"src": "5199:4:13",
														"type": ""
													}
												],
												"src": "5150:141:13"
											},
											{
												"body": {
													"nativeSrc": "5341:49:13",
													"nodeType": "YulBlock",
													"src": "5341:49:13",
													"statements": [
														{
															"nativeSrc": "5351:33:13",
															"nodeType": "YulAssignment",
															"src": "5351:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5369:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5369:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5376:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5376:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5365:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5365:3:13"
																		},
																		"nativeSrc": "5365:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5365:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5381:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5381:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5361:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5361:3:13"
																},
																"nativeSrc": "5361:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5361:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5351:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5297:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5324:5:13",
														"nodeType": "YulTypedName",
														"src": "5324:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5334:6:13",
														"nodeType": "YulTypedName",
														"src": "5334:6:13",
														"type": ""
													}
												],
												"src": "5297:93:13"
											},
											{
												"body": {
													"nativeSrc": "5449:54:13",
													"nodeType": "YulBlock",
													"src": "5449:54:13",
													"statements": [
														{
															"nativeSrc": "5459:37:13",
															"nodeType": "YulAssignment",
															"src": "5459:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5484:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5484:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5490:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5490:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5480:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:13"
																},
																"nativeSrc": "5480:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5480:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5459:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5459:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5396:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5424:4:13",
														"nodeType": "YulTypedName",
														"src": "5424:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5430:5:13",
														"nodeType": "YulTypedName",
														"src": "5430:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5440:8:13",
														"nodeType": "YulTypedName",
														"src": "5440:8:13",
														"type": ""
													}
												],
												"src": "5396:107:13"
											},
											{
												"body": {
													"nativeSrc": "5585:317:13",
													"nodeType": "YulBlock",
													"src": "5585:317:13",
													"statements": [
														{
															"nativeSrc": "5595:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5595:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5616:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5616:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5628:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5628:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5612:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5612:3:13"
																},
																"nativeSrc": "5612:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5612:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5599:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5599:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5639:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5639:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5670:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5670:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5681:66:13",
																		"nodeType": "YulLiteral",
																		"src": "5681:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5651:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5651:18:13"
																},
																"nativeSrc": "5651:97:13",
																"nodeType": "YulFunctionCall",
																"src": "5651:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5643:4:13",
																	"nodeType": "YulTypedName",
																	"src": "5643:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5757:51:13",
															"nodeType": "YulAssignment",
															"src": "5757:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5788:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5788:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5799:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "5799:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5769:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5769:18:13"
																},
																"nativeSrc": "5769:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5769:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5757:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5757:8:13"
																}
															]
														},
														{
															"nativeSrc": "5817:30:13",
															"nodeType": "YulAssignment",
															"src": "5817:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5830:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5830:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5841:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5841:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5837:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5837:3:13"
																		},
																		"nativeSrc": "5837:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5826:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5826:3:13"
																},
																"nativeSrc": "5826:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5826:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5817:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5817:5:13"
																}
															]
														},
														{
															"nativeSrc": "5856:40:13",
															"nodeType": "YulAssignment",
															"src": "5856:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5869:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5869:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5880:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "5880:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5890:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5890:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5876:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5876:3:13"
																		},
																		"nativeSrc": "5876:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5876:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5866:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5866:2:13"
																},
																"nativeSrc": "5866:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5866:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5856:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5509:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5546:5:13",
														"nodeType": "YulTypedName",
														"src": "5546:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5553:10:13",
														"nodeType": "YulTypedName",
														"src": "5553:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5565:8:13",
														"nodeType": "YulTypedName",
														"src": "5565:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5578:6:13",
														"nodeType": "YulTypedName",
														"src": "5578:6:13",
														"type": ""
													}
												],
												"src": "5509:393:13"
											},
											{
												"body": {
													"nativeSrc": "5953:32:13",
													"nodeType": "YulBlock",
													"src": "5953:32:13",
													"statements": [
														{
															"nativeSrc": "5963:16:13",
															"nodeType": "YulAssignment",
															"src": "5963:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5974:5:13",
																"nodeType": "YulIdentifier",
																"src": "5974:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5963:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5963:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5908:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5935:5:13",
														"nodeType": "YulTypedName",
														"src": "5935:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5945:7:13",
														"nodeType": "YulTypedName",
														"src": "5945:7:13",
														"type": ""
													}
												],
												"src": "5908:77:13"
											},
											{
												"body": {
													"nativeSrc": "6023:28:13",
													"nodeType": "YulBlock",
													"src": "6023:28:13",
													"statements": [
														{
															"nativeSrc": "6033:12:13",
															"nodeType": "YulAssignment",
															"src": "6033:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "6040:5:13",
																"nodeType": "YulIdentifier",
																"src": "6040:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6033:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5991:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6009:5:13",
														"nodeType": "YulTypedName",
														"src": "6009:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6019:3:13",
														"nodeType": "YulTypedName",
														"src": "6019:3:13",
														"type": ""
													}
												],
												"src": "5991:60:13"
											},
											{
												"body": {
													"nativeSrc": "6117:82:13",
													"nodeType": "YulBlock",
													"src": "6117:82:13",
													"statements": [
														{
															"nativeSrc": "6127:66:13",
															"nodeType": "YulAssignment",
															"src": "6127:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6185:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6185:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6167:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6167:17:13"
																				},
																				"nativeSrc": "6167:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6167:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6158:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "6158:8:13"
																		},
																		"nativeSrc": "6158:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6158:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6140:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6140:17:13"
																},
																"nativeSrc": "6140:53:13",
																"nodeType": "YulFunctionCall",
																"src": "6140:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6127:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6127:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6057:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6097:5:13",
														"nodeType": "YulTypedName",
														"src": "6097:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6107:9:13",
														"nodeType": "YulTypedName",
														"src": "6107:9:13",
														"type": ""
													}
												],
												"src": "6057:142:13"
											},
											{
												"body": {
													"nativeSrc": "6252:28:13",
													"nodeType": "YulBlock",
													"src": "6252:28:13",
													"statements": [
														{
															"nativeSrc": "6262:12:13",
															"nodeType": "YulAssignment",
															"src": "6262:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "6269:5:13",
																"nodeType": "YulIdentifier",
																"src": "6269:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6262:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6205:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6238:5:13",
														"nodeType": "YulTypedName",
														"src": "6238:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6248:3:13",
														"nodeType": "YulTypedName",
														"src": "6248:3:13",
														"type": ""
													}
												],
												"src": "6205:75:13"
											},
											{
												"body": {
													"nativeSrc": "6362:193:13",
													"nodeType": "YulBlock",
													"src": "6362:193:13",
													"statements": [
														{
															"nativeSrc": "6372:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6372:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6427:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6427:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6396:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6396:30:13"
																},
																"nativeSrc": "6396:39:13",
																"nodeType": "YulFunctionCall",
																"src": "6396:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6376:16:13",
																	"nodeType": "YulTypedName",
																	"src": "6376:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6451:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6451:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6491:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6491:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6485:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6485:5:13"
																				},
																				"nativeSrc": "6485:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6485:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6498:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6498:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6530:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "6530:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6506:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "6506:23:13"
																				},
																				"nativeSrc": "6506:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6506:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6457:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "6457:27:13"
																		},
																		"nativeSrc": "6457:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6457:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6444:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:13"
																},
																"nativeSrc": "6444:105:13",
																"nodeType": "YulFunctionCall",
																"src": "6444:105:13"
															},
															"nativeSrc": "6444:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "6444:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6286:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6339:4:13",
														"nodeType": "YulTypedName",
														"src": "6339:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6345:6:13",
														"nodeType": "YulTypedName",
														"src": "6345:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6353:7:13",
														"nodeType": "YulTypedName",
														"src": "6353:7:13",
														"type": ""
													}
												],
												"src": "6286:269:13"
											},
											{
												"body": {
													"nativeSrc": "6610:24:13",
													"nodeType": "YulBlock",
													"src": "6610:24:13",
													"statements": [
														{
															"nativeSrc": "6620:8:13",
															"nodeType": "YulAssignment",
															"src": "6620:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6627:1:13",
																"nodeType": "YulLiteral",
																"src": "6627:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6620:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6620:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6561:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6606:3:13",
														"nodeType": "YulTypedName",
														"src": "6606:3:13",
														"type": ""
													}
												],
												"src": "6561:73:13"
											},
											{
												"body": {
													"nativeSrc": "6693:136:13",
													"nodeType": "YulBlock",
													"src": "6693:136:13",
													"statements": [
														{
															"nativeSrc": "6703:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6703:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6717:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6717:30:13"
																},
																"nativeSrc": "6717:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6717:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6707:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6707:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6802:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6802:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6808:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6808:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6816:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6816:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6758:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6758:43:13"
																},
																"nativeSrc": "6758:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6758:65:13"
															},
															"nativeSrc": "6758:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6758:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6640:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6679:4:13",
														"nodeType": "YulTypedName",
														"src": "6679:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6685:6:13",
														"nodeType": "YulTypedName",
														"src": "6685:6:13",
														"type": ""
													}
												],
												"src": "6640:189:13"
											},
											{
												"body": {
													"nativeSrc": "6885:136:13",
													"nodeType": "YulBlock",
													"src": "6885:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6952:63:13",
																"nodeType": "YulBlock",
																"src": "6952:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6996:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6996:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7003:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7003:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6966:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "6966:29:13"
																			},
																			"nativeSrc": "6966:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6966:39:13"
																		},
																		"nativeSrc": "6966:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6966:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6905:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6905:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6912:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6912:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6902:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6902:2:13"
																},
																"nativeSrc": "6902:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6902:14:13"
															},
															"nativeSrc": "6895:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6917:26:13",
																"nodeType": "YulBlock",
																"src": "6917:26:13",
																"statements": [
																	{
																		"nativeSrc": "6919:22:13",
																		"nodeType": "YulAssignment",
																		"src": "6919:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6932:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6932:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6939:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6939:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6928:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6928:3:13"
																			},
																			"nativeSrc": "6928:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6928:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6919:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6919:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6899:2:13",
																"nodeType": "YulBlock",
																"src": "6899:2:13",
																"statements": []
															},
															"src": "6895:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6835:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6873:5:13",
														"nodeType": "YulTypedName",
														"src": "6873:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6880:3:13",
														"nodeType": "YulTypedName",
														"src": "6880:3:13",
														"type": ""
													}
												],
												"src": "6835:186:13"
											},
											{
												"body": {
													"nativeSrc": "7106:464:13",
													"nodeType": "YulBlock",
													"src": "7106:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7132:431:13",
																"nodeType": "YulBlock",
																"src": "7132:431:13",
																"statements": [
																	{
																		"nativeSrc": "7146:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7146:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7194:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "7194:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7162:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "7162:31:13"
																			},
																			"nativeSrc": "7162:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7162:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7150:8:13",
																				"nodeType": "YulTypedName",
																				"src": "7150:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7213:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7213:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7236:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "7236:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7264:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "7264:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7246:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "7246:17:13"
																					},
																					"nativeSrc": "7246:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7246:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7232:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7232:3:13"
																			},
																			"nativeSrc": "7232:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7232:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7217:11:13",
																				"nodeType": "YulTypedName",
																				"src": "7217:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7433:27:13",
																			"nodeType": "YulBlock",
																			"src": "7433:27:13",
																			"statements": [
																				{
																					"nativeSrc": "7435:23:13",
																					"nodeType": "YulAssignment",
																					"src": "7435:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7450:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "7450:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7435:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "7435:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7417:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "7417:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7429:2:13",
																					"nodeType": "YulLiteral",
																					"src": "7429:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7414:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7414:2:13"
																			},
																			"nativeSrc": "7414:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7414:18:13"
																		},
																		"nativeSrc": "7411:49:13",
																		"nodeType": "YulIf",
																		"src": "7411:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7502:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "7502:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7519:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "7519:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7547:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7547:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7529:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "7529:17:13"
																							},
																							"nativeSrc": "7529:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7529:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7515:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7515:3:13"
																					},
																					"nativeSrc": "7515:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7515:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7473:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "7473:28:13"
																			},
																			"nativeSrc": "7473:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7473:80:13"
																		},
																		"nativeSrc": "7473:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7473:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7128:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7128:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7120:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7120:2:13"
																},
																"nativeSrc": "7120:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7120:11:13"
															},
															"nativeSrc": "7117:446:13",
															"nodeType": "YulIf",
															"src": "7117:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7027:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7082:5:13",
														"nodeType": "YulTypedName",
														"src": "7082:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7089:3:13",
														"nodeType": "YulTypedName",
														"src": "7089:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7094:10:13",
														"nodeType": "YulTypedName",
														"src": "7094:10:13",
														"type": ""
													}
												],
												"src": "7027:543:13"
											},
											{
												"body": {
													"nativeSrc": "7639:54:13",
													"nodeType": "YulBlock",
													"src": "7639:54:13",
													"statements": [
														{
															"nativeSrc": "7649:37:13",
															"nodeType": "YulAssignment",
															"src": "7649:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7674:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7674:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7680:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7680:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7670:3:13"
																},
																"nativeSrc": "7670:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7670:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7649:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7649:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7576:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7614:4:13",
														"nodeType": "YulTypedName",
														"src": "7614:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7620:5:13",
														"nodeType": "YulTypedName",
														"src": "7620:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7630:8:13",
														"nodeType": "YulTypedName",
														"src": "7630:8:13",
														"type": ""
													}
												],
												"src": "7576:117:13"
											},
											{
												"body": {
													"nativeSrc": "7750:118:13",
													"nodeType": "YulBlock",
													"src": "7750:118:13",
													"statements": [
														{
															"nativeSrc": "7760:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7760:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7809:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7809:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7812:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "7812:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7805:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7805:3:13"
																				},
																				"nativeSrc": "7805:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7805:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7824:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7824:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7820:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7820:3:13"
																				},
																				"nativeSrc": "7820:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7820:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7776:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "7776:28:13"
																		},
																		"nativeSrc": "7776:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7776:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7772:3:13"
																},
																"nativeSrc": "7772:56:13",
																"nodeType": "YulFunctionCall",
																"src": "7772:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7764:4:13",
																	"nodeType": "YulTypedName",
																	"src": "7764:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7837:25:13",
															"nodeType": "YulAssignment",
															"src": "7837:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7851:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7851:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7857:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7857:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7847:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7847:3:13"
																},
																"nativeSrc": "7847:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7847:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7837:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7837:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7699:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7727:4:13",
														"nodeType": "YulTypedName",
														"src": "7727:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7733:5:13",
														"nodeType": "YulTypedName",
														"src": "7733:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7743:6:13",
														"nodeType": "YulTypedName",
														"src": "7743:6:13",
														"type": ""
													}
												],
												"src": "7699:169:13"
											},
											{
												"body": {
													"nativeSrc": "7954:214:13",
													"nodeType": "YulBlock",
													"src": "7954:214:13",
													"statements": [
														{
															"nativeSrc": "8087:37:13",
															"nodeType": "YulAssignment",
															"src": "8087:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8114:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8114:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8120:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8120:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8095:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8095:18:13"
																},
																"nativeSrc": "8095:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8095:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8087:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:13"
																}
															]
														},
														{
															"nativeSrc": "8133:29:13",
															"nodeType": "YulAssignment",
															"src": "8133:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8144:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8144:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8154:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8154:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8157:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8157:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8150:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:13"
																		},
																		"nativeSrc": "8150:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8150:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8141:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8141:2:13"
																},
																"nativeSrc": "8141:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8141:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8133:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8133:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7873:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7935:4:13",
														"nodeType": "YulTypedName",
														"src": "7935:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7941:3:13",
														"nodeType": "YulTypedName",
														"src": "7941:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7949:4:13",
														"nodeType": "YulTypedName",
														"src": "7949:4:13",
														"type": ""
													}
												],
												"src": "7873:295:13"
											},
											{
												"body": {
													"nativeSrc": "8265:1303:13",
													"nodeType": "YulBlock",
													"src": "8265:1303:13",
													"statements": [
														{
															"nativeSrc": "8276:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8276:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8323:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8290:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "8290:32:13"
																},
																"nativeSrc": "8290:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8290:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8280:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8280:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8412:22:13",
																"nodeType": "YulBlock",
																"src": "8412:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8414:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8414:16:13"
																			},
																			"nativeSrc": "8414:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8414:18:13"
																		},
																		"nativeSrc": "8414:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8414:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8384:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8384:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8392:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8392:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8381:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8381:2:13"
																},
																"nativeSrc": "8381:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8381:30:13"
															},
															"nativeSrc": "8378:56:13",
															"nodeType": "YulIf",
															"src": "8378:56:13"
														},
														{
															"nativeSrc": "8444:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8444:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8490:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8490:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8484:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "8484:5:13"
																		},
																		"nativeSrc": "8484:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8484:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8458:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "8458:25:13"
																},
																"nativeSrc": "8458:38:13",
																"nodeType": "YulFunctionCall",
																"src": "8458:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8448:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8448:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8589:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8589:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8595:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8595:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8603:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8603:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8543:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "8543:45:13"
																},
																"nativeSrc": "8543:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8543:67:13"
															},
															"nativeSrc": "8543:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "8543:67:13"
														},
														{
															"nativeSrc": "8620:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8620:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8637:1:13",
																"nodeType": "YulLiteral",
																"src": "8637:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8624:9:13",
																	"nodeType": "YulTypedName",
																	"src": "8624:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8648:17:13",
															"nodeType": "YulAssignment",
															"src": "8648:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8661:4:13",
																"nodeType": "YulLiteral",
																"src": "8661:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8648:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "8648:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8712:611:13",
																		"nodeType": "YulBlock",
																		"src": "8712:611:13",
																		"statements": [
																			{
																				"nativeSrc": "8726:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8726:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8745:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "8745:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8757:4:13",
																									"nodeType": "YulLiteral",
																									"src": "8757:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8753:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8753:3:13"
																							},
																							"nativeSrc": "8753:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8753:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8741:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8741:3:13"
																					},
																					"nativeSrc": "8741:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8741:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8730:7:13",
																						"nodeType": "YulTypedName",
																						"src": "8730:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8777:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8777:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8823:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8823:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8791:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "8791:31:13"
																					},
																					"nativeSrc": "8791:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8791:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8781:6:13",
																						"nodeType": "YulTypedName",
																						"src": "8781:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8841:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8841:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8850:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8850:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8845:1:13",
																						"nodeType": "YulTypedName",
																						"src": "8845:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8909:163:13",
																					"nodeType": "YulBlock",
																					"src": "8909:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8934:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8934:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8952:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "8952:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8957:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "8957:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8948:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "8948:3:13"
																												},
																												"nativeSrc": "8948:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "8948:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8942:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "8942:5:13"
																										},
																										"nativeSrc": "8942:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8942:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8927:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8927:6:13"
																								},
																								"nativeSrc": "8927:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8927:42:13"
																							},
																							"nativeSrc": "8927:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8927:42:13"
																						},
																						{
																							"nativeSrc": "8986:24:13",
																							"nodeType": "YulAssignment",
																							"src": "8986:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9000:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "9000:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9008:1:13",
																										"nodeType": "YulLiteral",
																										"src": "9008:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8996:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8996:3:13"
																								},
																								"nativeSrc": "8996:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8996:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8986:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8986:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9027:31:13",
																							"nodeType": "YulAssignment",
																							"src": "9027:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9044:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "9044:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9055:2:13",
																										"nodeType": "YulLiteral",
																										"src": "9055:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9040:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "9040:3:13"
																								},
																								"nativeSrc": "9040:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9040:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9027:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "9027:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8875:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "8875:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8878:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "8878:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8872:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8872:2:13"
																					},
																					"nativeSrc": "8872:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8872:14:13"
																				},
																				"nativeSrc": "8864:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8887:21:13",
																					"nodeType": "YulBlock",
																					"src": "8887:21:13",
																					"statements": [
																						{
																							"nativeSrc": "8889:17:13",
																							"nodeType": "YulAssignment",
																							"src": "8889:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8898:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "8898:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8901:4:13",
																										"nodeType": "YulLiteral",
																										"src": "8901:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8894:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8894:3:13"
																								},
																								"nativeSrc": "8894:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8894:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8889:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "8889:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8868:3:13",
																					"nodeType": "YulBlock",
																					"src": "8868:3:13",
																					"statements": []
																				},
																				"src": "8864:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "9108:156:13",
																					"nodeType": "YulBlock",
																					"src": "9108:156:13",
																					"statements": [
																						{
																							"nativeSrc": "9126:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9126:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9153:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "9153:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9158:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "9158:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9149:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "9149:3:13"
																										},
																										"nativeSrc": "9149:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "9149:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9143:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9143:5:13"
																								},
																								"nativeSrc": "9143:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9143:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9130:9:13",
																									"nodeType": "YulTypedName",
																									"src": "9130:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9193:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "9193:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9220:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "9220:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9235:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "9235:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9243:4:13",
																														"nodeType": "YulLiteral",
																														"src": "9243:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9231:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "9231:3:13"
																												},
																												"nativeSrc": "9231:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "9231:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9201:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "9201:18:13"
																										},
																										"nativeSrc": "9201:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "9201:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9186:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "9186:6:13"
																								},
																								"nativeSrc": "9186:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9186:64:13"
																							},
																							"nativeSrc": "9186:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9186:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9091:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "9091:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9100:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "9100:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9088:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9088:2:13"
																					},
																					"nativeSrc": "9088:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9088:19:13"
																				},
																				"nativeSrc": "9085:179:13",
																				"nodeType": "YulIf",
																				"src": "9085:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9284:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "9284:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9298:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "9298:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9306:1:13",
																											"nodeType": "YulLiteral",
																											"src": "9306:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9294:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "9294:3:13"
																									},
																									"nativeSrc": "9294:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "9294:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9310:1:13",
																									"nodeType": "YulLiteral",
																									"src": "9310:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9290:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "9290:3:13"
																							},
																							"nativeSrc": "9290:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "9290:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9277:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9277:6:13"
																					},
																					"nativeSrc": "9277:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9277:36:13"
																				},
																				"nativeSrc": "9277:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9277:36:13"
																			}
																		]
																	},
																	"nativeSrc": "8705:618:13",
																	"nodeType": "YulCase",
																	"src": "8705:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8710:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8710:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9340:222:13",
																		"nodeType": "YulBlock",
																		"src": "9340:222:13",
																		"statements": [
																			{
																				"nativeSrc": "9354:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9354:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9367:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9367:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9358:5:13",
																						"nodeType": "YulTypedName",
																						"src": "9358:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9391:67:13",
																					"nodeType": "YulBlock",
																					"src": "9391:67:13",
																					"statements": [
																						{
																							"nativeSrc": "9409:35:13",
																							"nodeType": "YulAssignment",
																							"src": "9409:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9428:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "9428:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9433:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "9433:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9424:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "9424:3:13"
																										},
																										"nativeSrc": "9424:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "9424:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9418:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9418:5:13"
																								},
																								"nativeSrc": "9418:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9418:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9409:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9409:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9384:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9384:6:13"
																				},
																				"nativeSrc": "9381:77:13",
																				"nodeType": "YulIf",
																				"src": "9381:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9478:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "9478:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9537:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9537:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9544:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "9544:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9484:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "9484:52:13"
																							},
																							"nativeSrc": "9484:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "9484:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9471:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9471:6:13"
																					},
																					"nativeSrc": "9471:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9471:81:13"
																				},
																				"nativeSrc": "9471:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9471:81:13"
																			}
																		]
																	},
																	"nativeSrc": "9332:230:13",
																	"nodeType": "YulCase",
																	"src": "9332:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8685:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8685:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8693:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8682:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8682:2:13"
																},
																"nativeSrc": "8682:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8682:14:13"
															},
															"nativeSrc": "8675:887:13",
															"nodeType": "YulSwitch",
															"src": "8675:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8173:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8254:4:13",
														"nodeType": "YulTypedName",
														"src": "8254:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8260:3:13",
														"nodeType": "YulTypedName",
														"src": "8260:3:13",
														"type": ""
													}
												],
												"src": "8173:1395:13"
											},
											{
												"body": {
													"nativeSrc": "9639:53:13",
													"nodeType": "YulBlock",
													"src": "9639:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9656:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9656:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9679:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9679:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9661:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9661:17:13"
																		},
																		"nativeSrc": "9661:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9661:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9649:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9649:6:13"
																},
																"nativeSrc": "9649:37:13",
																"nodeType": "YulFunctionCall",
																"src": "9649:37:13"
															},
															"nativeSrc": "9649:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "9649:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9574:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9627:5:13",
														"nodeType": "YulTypedName",
														"src": "9627:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9634:3:13",
														"nodeType": "YulTypedName",
														"src": "9634:3:13",
														"type": ""
													}
												],
												"src": "9574:118:13"
											},
											{
												"body": {
													"nativeSrc": "9796:124:13",
													"nodeType": "YulBlock",
													"src": "9796:124:13",
													"statements": [
														{
															"nativeSrc": "9806:26:13",
															"nodeType": "YulAssignment",
															"src": "9806:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9818:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9818:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9829:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9814:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9814:3:13"
																},
																"nativeSrc": "9814:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9814:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9806:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9806:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9886:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9886:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9899:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9899:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9910:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9910:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9895:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9895:3:13"
																		},
																		"nativeSrc": "9895:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9895:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9842:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9842:43:13"
																},
																"nativeSrc": "9842:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9842:71:13"
															},
															"nativeSrc": "9842:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9842:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9698:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9768:9:13",
														"nodeType": "YulTypedName",
														"src": "9768:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9780:6:13",
														"nodeType": "YulTypedName",
														"src": "9780:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9791:4:13",
														"nodeType": "YulTypedName",
														"src": "9791:4:13",
														"type": ""
													}
												],
												"src": "9698:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60075534801562000014575f80fd5b50604051620031cb380380620031cb83398181016040528101906200003a9190620003ac565b838383815f90816200004d9190620006af565b5080600190816200005f9190620006af565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d5575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000cc9190620007a4565b60405180910390fd5b620000e6816200010360201b60201c565b508060089081620000f89190620006af565b5050505050620007bf565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200020282620001d7565b9050919050565b6200021481620001f6565b81146200021f575f80fd5b50565b5f81519050620002328162000209565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620002888262000240565b810181811067ffffffffffffffff82111715620002aa57620002a962000250565b5b80604052505050565b5f620002be620001c6565b9050620002cc82826200027d565b919050565b5f67ffffffffffffffff821115620002ee57620002ed62000250565b5b620002f98262000240565b9050602081019050919050565b5f5b838110156200032557808201518184015260208101905062000308565b5f8484015250505050565b5f620003466200034084620002d1565b620002b3565b9050828152602081018484840111156200036557620003646200023c565b5b6200037284828562000306565b509392505050565b5f82601f83011262000391576200039062000238565b5b8151620003a384826020860162000330565b91505092915050565b5f805f8060808587031215620003c757620003c6620001cf565b5b5f620003d68782880162000222565b945050602085015167ffffffffffffffff811115620003fa57620003f9620001d3565b5b62000408878288016200037a565b935050604085015167ffffffffffffffff8111156200042c576200042b620001d3565b5b6200043a878288016200037a565b925050606085015167ffffffffffffffff8111156200045e576200045d620001d3565b5b6200046c878288016200037a565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620004c757607f821691505b602082108103620004dd57620004dc62000482565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000504565b6200054d868362000504565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000597620005916200058b8462000565565b6200056e565b62000565565b9050919050565b5f819050919050565b620005b28362000577565b620005ca620005c1826200059e565b84845462000510565b825550505050565b5f90565b620005e0620005d2565b620005ed818484620005a7565b505050565b5b818110156200061457620006085f82620005d6565b600181019050620005f3565b5050565b601f82111562000663576200062d81620004e3565b6200063884620004f5565b8101602085101562000648578190505b620006606200065785620004f5565b830182620005f2565b50505b505050565b5f82821c905092915050565b5f620006855f198460080262000668565b1980831691505092915050565b5f6200069f838362000674565b9150826002028217905092915050565b620006ba8262000478565b67ffffffffffffffff811115620006d657620006d562000250565b5b620006e28254620004af565b620006ef82828562000618565b5f60209050601f83116001811462000725575f841562000710578287015190505b6200071c858262000692565b8655506200078b565b601f1984166200073586620004e3565b5f5b828110156200075e5784890151825560018201915060208501945060208101905062000737565b868310156200077e57848901516200077a601f89168262000674565b8355505b6001600288020188555050505b505050505050565b6200079e81620001f6565b82525050565b5f602082019050620007b95f83018462000793565b92915050565b6129fe80620007cd5f395ff3fe608060405234801561000f575f80fd5b5060043610610171575f3560e01c80638da5cb5b116100dc578063b88d4fde11610095578063cfad52771161006f578063cfad52771461046b578063e985e9c514610489578063f2fde38b146104b9578063fec2b9ee146104d557610171565b8063b88d4fde146103ef578063c87b56dd1461040b578063cf5f19d31461043b57610171565b80638da5cb5b146103195780639516a1041461033757806395d89b4114610355578063a22cb46514610373578063a50252221461038f578063b0141b14146103bf57610171565b806342842e0e1161012e57806342842e0e1461025b57806360e564f6146102775780636352211e146102935780636ea2351a146102c357806370a08231146102df578063715018a61461030f57610171565b806301ffc9a71461017557806306fdde03146101a5578063081812fc146101c3578063095ea7b3146101f357806323b872dd1461020f5780632f233b731461022b575b5f80fd5b61018f600480360381019061018a9190611f7a565b610505565b60405161019c9190611fbf565b60405180910390f35b6101ad6105e6565b6040516101ba9190612062565b60405180910390f35b6101dd60048036038101906101d891906120b5565b610675565b6040516101ea919061211f565b60405180910390f35b61020d60048036038101906102089190612162565b610690565b005b610229600480360381019061022491906121a0565b6106a6565b005b610245600480360381019061024091906120b5565b6107a5565b60405161025291906121ff565b60405180910390f35b610275600480360381019061027091906121a0565b6107c5565b005b610291600480360381019061028c9190612242565b6107e4565b005b6102ad60048036038101906102a891906120b5565b6108c6565b6040516102ba919061211f565b60405180910390f35b6102dd60048036038101906102d89190612242565b6108d7565b005b6102f960048036038101906102f4919061226d565b610aa0565b60405161030691906121ff565b60405180910390f35b610317610b56565b005b610321610b69565b60405161032e919061211f565b60405180910390f35b61033f610b91565b60405161034c919061234f565b60405180910390f35b61035d610c68565b60405161036a9190612062565b60405180910390f35b61038d6004803603810190610388919061236f565b610cf8565b005b6103a960048036038101906103a4919061226d565b610d0e565b6040516103b69190611fbf565b60405180910390f35b6103d960048036038101906103d491906120b5565b610d2b565b6040516103e69190611fbf565b60405180910390f35b610409600480360381019061040491906124d9565b610d51565b005b610425600480360381019061042091906120b5565b610d6e565b6040516104329190612062565b60405180910390f35b61045560048036038101906104509190612242565b610dd4565b6040516104629190612610565b60405180910390f35b610473610f0c565b60405161048091906121ff565b60405180910390f35b6104a3600480360381019061049e9190612630565b610f12565b6040516104b09190611fbf565b60405180910390f35b6104d360048036038101906104ce919061226d565b610fa0565b005b6104ef60048036038101906104ea91906120b5565b611024565b6040516104fc9190611fbf565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105cf57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105df57506105de8261104a565b5b9050919050565b60605f80546105f49061269b565b80601f01602080910402602001604051908101604052809291908181526020018280546106209061269b565b801561066b5780601f106106425761010080835404028352916020019161066b565b820191905f5260205f20905b81548152906001019060200180831161064e57829003601f168201915b5050505050905090565b5f61067f826110b3565b5061068982611139565b9050919050565b6106a2828261069d611172565b611179565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610716575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161070d919061211f565b60405180910390fd5b5f6107298383610724611172565b61118b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079f578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610796939291906126cb565b60405180910390fd5b50505050565b600c81815481106107b4575f80fd5b905f5260205f20015f915090505481565b6107df83838360405180602001604052805f815250610d51565b505050565b5f6107ee82610dd4565b90505f5b81518110156108a8575f8160075461080a919061272d565b905061083083838151811061082257610821612760565b5b602002602001015182611396565b82828151811061084357610842612760565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16817fcc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d340060016040516108929190611fbf565b60405180910390a35080806001019150506107f2565b50805160075f8282546108bb919061272d565b925050819055505050565b5f6108d0826110b3565b9050919050565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610961576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610958906127d7565b60405180910390fd5b5f6007549050600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600c81908060018154018082558091505060019003905f5260205f20015f90919091909150555f604051806020016040528084151581525090508083610a0357600b610a06565b600a5b5f8481526020019081526020015f205f820151815f015f6101000a81548160ff02191690831515021790555090505060075f815480929190610a47906127f5565b91905055503373ffffffffffffffffffffffffffffffffffffffff16827fcc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d340085604051610a939190611fbf565b60405180910390a3505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b11575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610b08919061211f565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b5e611489565b610b675f611510565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60605f60075467ffffffffffffffff811115610bb057610baf6123b5565b5b604051908082528060200260200182016040528015610bde5781602001602082028036833780820191505090505b5090505f600a90505f5b600754811015610c5f57815f600c8381548110610c0857610c07612760565b5b905f5260205f20015481526020019081526020015f205f015f9054906101000a900460ff16838281518110610c4057610c3f612760565b5b6020026020010190151590811515815250508080600101915050610be8565b50819250505090565b606060018054610c779061269b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca39061269b565b8015610cee5780601f10610cc557610100808354040283529160200191610cee565b820191905f5260205f20905b815481529060010190602001808311610cd157829003601f168201915b5050505050905090565b610d0a610d03611172565b83836115d3565b5050565b6009602052805f5260405f205f915054906101000a900460ff1681565b600a602052805f5260405f205f91509050805f015f9054906101000a900460ff16905081565b610d5c8484846106a6565b610d688484848461173c565b50505050565b6060610d79826110b3565b505f610d836118ee565b90505f815111610da15760405180602001604052805f815250610dcc565b80610dab8461197e565b604051602001610dbc929190612876565b6040516020818303038152906040525b915050919050565b60605f60075467ffffffffffffffff811115610df357610df26123b5565b5b604051908082528060200260200182016040528015610e215781602001602082028036833780820191505090505b5090505f8084610e3257600b610e35565b600a5b90505f5b600754811015610efd575f600c8281548110610e5857610e57612760565b5b905f5260205f2001549050861515835f8381526020019081526020015f205f015f9054906101000a900460ff16151503610eef57610e95816108c6565b858580610ea1906127f5565b965081518110610eb457610eb3612760565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b508080600101915050610e39565b50818352829350505050919050565b60075481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610fa8611489565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611018575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161100f919061211f565b60405180910390fd5b61102181611510565b50565b600b602052805f5260405f205f91509050805f015f9054906101000a900460ff16905081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f806110be83611a48565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361113057826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161112791906121ff565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111868383836001611a81565b505050565b5f8061119684611a48565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146111d7576111d6818486611c40565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611262576112165f855f80611a81565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146112e157600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611406575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113fd919061211f565b60405180910390fd5b5f61141283835f61118b565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611484575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161147b919061211f565b60405180910390fd5b505050565b611491611172565b73ffffffffffffffffffffffffffffffffffffffff166114af610b69565b73ffffffffffffffffffffffffffffffffffffffff161461150e576114d2611172565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611505919061211f565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361164357816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161163a919061211f565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161172f9190611fbf565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156118e8578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261177f611172565b8685856040518563ffffffff1660e01b81526004016117a194939291906128eb565b6020604051808303815f875af19250505080156117dc57506040513d601f19601f820116820180604052508101906117d99190612949565b60015b61185d573d805f811461180a576040519150601f19603f3d011682016040523d82523d5f602084013e61180f565b606091505b505f81510361185557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161184c919061211f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146118e657836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118dd919061211f565b60405180910390fd5b505b50505050565b6060600880546118fd9061269b565b80601f01602080910402602001604051908101604052809291908181526020018280546119299061269b565b80156119745780601f1061194b57610100808354040283529160200191611974565b820191905f5260205f20905b81548152906001019060200180831161195757829003601f168201915b5050505050905090565b60605f600161198c84611d03565b0190505f8167ffffffffffffffff8111156119aa576119a96123b5565b5b6040519080825280601f01601f1916602001820160405280156119dc5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a3d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a3257611a31612974565b5b0494505f85036119e9575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611ab957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611beb575f611ac8846110b3565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b3257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611b455750611b438184610f12565b155b15611b8757826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611b7e919061211f565b60405180910390fd5b8115611be957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611c4b838383611e54565b611cfe575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cbf57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611cb691906121ff565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611cf59291906129a1565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d5f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d5557611d54612974565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611d9c576d04ee2d6d415b85acef81000000008381611d9257611d91612974565b5b0492506020810190505b662386f26fc100008310611dcb57662386f26fc100008381611dc157611dc0612974565b5b0492506010810190505b6305f5e1008310611df4576305f5e1008381611dea57611de9612974565b5b0492506008810190505b6127108310611e19576127108381611e0f57611e0e612974565b5b0492506004810190505b60648310611e3c5760648381611e3257611e31612974565b5b0492506002810190505b600a8310611e4b576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f0b57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ecc5750611ecb8484610f12565b5b80611f0a57508273ffffffffffffffffffffffffffffffffffffffff16611ef283611139565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f5981611f25565b8114611f63575f80fd5b50565b5f81359050611f7481611f50565b92915050565b5f60208284031215611f8f57611f8e611f1d565b5b5f611f9c84828501611f66565b91505092915050565b5f8115159050919050565b611fb981611fa5565b82525050565b5f602082019050611fd25f830184611fb0565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561200f578082015181840152602081019050611ff4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61203482611fd8565b61203e8185611fe2565b935061204e818560208601611ff2565b6120578161201a565b840191505092915050565b5f6020820190508181035f83015261207a818461202a565b905092915050565b5f819050919050565b61209481612082565b811461209e575f80fd5b50565b5f813590506120af8161208b565b92915050565b5f602082840312156120ca576120c9611f1d565b5b5f6120d7848285016120a1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612109826120e0565b9050919050565b612119816120ff565b82525050565b5f6020820190506121325f830184612110565b92915050565b612141816120ff565b811461214b575f80fd5b50565b5f8135905061215c81612138565b92915050565b5f806040838503121561217857612177611f1d565b5b5f6121858582860161214e565b9250506020612196858286016120a1565b9150509250929050565b5f805f606084860312156121b7576121b6611f1d565b5b5f6121c48682870161214e565b93505060206121d58682870161214e565b92505060406121e6868287016120a1565b9150509250925092565b6121f981612082565b82525050565b5f6020820190506122125f8301846121f0565b92915050565b61222181611fa5565b811461222b575f80fd5b50565b5f8135905061223c81612218565b92915050565b5f6020828403121561225757612256611f1d565b5b5f6122648482850161222e565b91505092915050565b5f6020828403121561228257612281611f1d565b5b5f61228f8482850161214e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6122ca81611fa5565b82525050565b5f6122db83836122c1565b60208301905092915050565b5f602082019050919050565b5f6122fd82612298565b61230781856122a2565b9350612312836122b2565b805f5b8381101561234257815161232988826122d0565b9750612334836122e7565b925050600181019050612315565b5085935050505092915050565b5f6020820190508181035f83015261236781846122f3565b905092915050565b5f806040838503121561238557612384611f1d565b5b5f6123928582860161214e565b92505060206123a38582860161222e565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6123eb8261201a565b810181811067ffffffffffffffff8211171561240a576124096123b5565b5b80604052505050565b5f61241c611f14565b905061242882826123e2565b919050565b5f67ffffffffffffffff821115612447576124466123b5565b5b6124508261201a565b9050602081019050919050565b828183375f83830152505050565b5f61247d6124788461242d565b612413565b905082815260208101848484011115612499576124986123b1565b5b6124a484828561245d565b509392505050565b5f82601f8301126124c0576124bf6123ad565b5b81356124d084826020860161246b565b91505092915050565b5f805f80608085870312156124f1576124f0611f1d565b5b5f6124fe8782880161214e565b945050602061250f8782880161214e565b9350506040612520878288016120a1565b925050606085013567ffffffffffffffff81111561254157612540611f21565b5b61254d878288016124ac565b91505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61258b816120ff565b82525050565b5f61259c8383612582565b60208301905092915050565b5f602082019050919050565b5f6125be82612559565b6125c88185612563565b93506125d383612573565b805f5b838110156126035781516125ea8882612591565b97506125f5836125a8565b9250506001810190506125d6565b5085935050505092915050565b5f6020820190508181035f83015261262881846125b4565b905092915050565b5f806040838503121561264657612645611f1d565b5b5f6126538582860161214e565b92505060206126648582860161214e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806126b257607f821691505b6020821081036126c5576126c461266e565b5b50919050565b5f6060820190506126de5f830186612110565b6126eb60208301856121f0565b6126f86040830184612110565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61273782612082565b915061274283612082565b925082820190508082111561275a57612759612700565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4164647265737320616c726561647920657869737473000000000000000000005f82015250565b5f6127c1601683611fe2565b91506127cc8261278d565b602082019050919050565b5f6020820190508181035f8301526127ee816127b5565b9050919050565b5f6127ff82612082565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361283157612830612700565b5b600182019050919050565b5f81905092915050565b5f61285082611fd8565b61285a818561283c565b935061286a818560208601611ff2565b80840191505092915050565b5f6128818285612846565b915061288d8284612846565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128bd82612899565b6128c781856128a3565b93506128d7818560208601611ff2565b6128e08161201a565b840191505092915050565b5f6080820190506128fe5f830187612110565b61290b6020830186612110565b61291860408301856121f0565b818103606083015261292a81846128b3565b905095945050505050565b5f8151905061294381611f50565b92915050565b5f6020828403121561295e5761295d611f1d565b5b5f61296b84828501612935565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506129b45f830185612110565b6129c160208301846121f0565b939250505056fea2646970667358221220d6aab86c192230581f8d7664ad57efc2ba131dc69b2203c64065f43206c58f5a64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x31CB CODESIZE SUB DUP1 PUSH3 0x31CB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3A SWAP2 SWAP1 PUSH3 0x3AC JUMP JUMPDEST DUP4 DUP4 DUP4 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x4D SWAP2 SWAP1 PUSH3 0x6AF JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5F SWAP2 SWAP1 PUSH3 0x6AF JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCC SWAP2 SWAP1 PUSH3 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE6 DUP2 PUSH3 0x103 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x8 SWAP1 DUP2 PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0x6AF JUMP JUMPDEST POP POP POP POP POP PUSH3 0x7BF JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x202 DUP3 PUSH3 0x1D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x214 DUP2 PUSH3 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH3 0x21F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x288 DUP3 PUSH3 0x240 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2AA JUMPI PUSH3 0x2A9 PUSH3 0x250 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2BE PUSH3 0x1C6 JUMP JUMPDEST SWAP1 POP PUSH3 0x2CC DUP3 DUP3 PUSH3 0x27D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2EE JUMPI PUSH3 0x2ED PUSH3 0x250 JUMP JUMPDEST JUMPDEST PUSH3 0x2F9 DUP3 PUSH3 0x240 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x325 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x308 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x346 PUSH3 0x340 DUP5 PUSH3 0x2D1 JUMP JUMPDEST PUSH3 0x2B3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x365 JUMPI PUSH3 0x364 PUSH3 0x23C JUMP JUMPDEST JUMPDEST PUSH3 0x372 DUP5 DUP3 DUP6 PUSH3 0x306 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x391 JUMPI PUSH3 0x390 PUSH3 0x238 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3A3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x330 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3C7 JUMPI PUSH3 0x3C6 PUSH3 0x1CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x3D6 DUP8 DUP3 DUP9 ADD PUSH3 0x222 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3FA JUMPI PUSH3 0x3F9 PUSH3 0x1D3 JUMP JUMPDEST JUMPDEST PUSH3 0x408 DUP8 DUP3 DUP9 ADD PUSH3 0x37A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x42C JUMPI PUSH3 0x42B PUSH3 0x1D3 JUMP JUMPDEST JUMPDEST PUSH3 0x43A DUP8 DUP3 DUP9 ADD PUSH3 0x37A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x45E JUMPI PUSH3 0x45D PUSH3 0x1D3 JUMP JUMPDEST JUMPDEST PUSH3 0x46C DUP8 DUP3 DUP9 ADD PUSH3 0x37A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4C7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4DD JUMPI PUSH3 0x4DC PUSH3 0x482 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x541 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x504 JUMP JUMPDEST PUSH3 0x54D DUP7 DUP4 PUSH3 0x504 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x597 PUSH3 0x591 PUSH3 0x58B DUP5 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x56E JUMP JUMPDEST PUSH3 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5B2 DUP4 PUSH3 0x577 JUMP JUMPDEST PUSH3 0x5CA PUSH3 0x5C1 DUP3 PUSH3 0x59E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x510 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x5E0 PUSH3 0x5D2 JUMP JUMPDEST PUSH3 0x5ED DUP2 DUP5 DUP5 PUSH3 0x5A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x614 JUMPI PUSH3 0x608 PUSH0 DUP3 PUSH3 0x5D6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x663 JUMPI PUSH3 0x62D DUP2 PUSH3 0x4E3 JUMP JUMPDEST PUSH3 0x638 DUP5 PUSH3 0x4F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x648 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x660 PUSH3 0x657 DUP6 PUSH3 0x4F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5F2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x685 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x668 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x69F DUP4 DUP4 PUSH3 0x674 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6BA DUP3 PUSH3 0x478 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D6 JUMPI PUSH3 0x6D5 PUSH3 0x250 JUMP JUMPDEST JUMPDEST PUSH3 0x6E2 DUP3 SLOAD PUSH3 0x4AF JUMP JUMPDEST PUSH3 0x6EF DUP3 DUP3 DUP6 PUSH3 0x618 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x725 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x710 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x71C DUP6 DUP3 PUSH3 0x692 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x78B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x735 DUP7 PUSH3 0x4E3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x75E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x737 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x77E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x77A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x674 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x79E DUP2 PUSH3 0x1F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7B9 PUSH0 DUP4 ADD DUP5 PUSH3 0x793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29FE DUP1 PUSH3 0x7CD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCFAD5277 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCFAD5277 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xFEC2B9EE EQ PUSH2 0x4D5 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xCF5F19D3 EQ PUSH2 0x43B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x9516A104 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xA5025222 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xB0141B14 EQ PUSH2 0x3BF JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x60E564F6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x6EA2351A EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30F JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x2F233B73 EQ PUSH2 0x22B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH2 0xB56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x473 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x2630 JUMP JUMPDEST PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5CF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x5DF JUMPI POP PUSH2 0x5DE DUP3 PUSH2 0x104A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x620 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x642 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x67F DUP3 PUSH2 0x10B3 JUMP JUMPDEST POP PUSH2 0x689 DUP3 PUSH2 0x1139 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A2 DUP3 DUP3 PUSH2 0x69D PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x729 DUP4 DUP4 PUSH2 0x724 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79F JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x796 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7DF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xD51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7EE DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH0 DUP2 PUSH1 0x7 SLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST SWAP1 POP PUSH2 0x830 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x822 JUMPI PUSH2 0x821 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1396 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x843 JUMPI PUSH2 0x842 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xCC45E233B2A26479F10617BAB0F82A2B918C69827943F81CB847BD970A6D3400 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x892 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x7F2 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D0 DUP3 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x958 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP DUP1 DUP4 PUSH2 0xA03 JUMPI PUSH1 0xB PUSH2 0xA06 JUMP JUMPDEST PUSH1 0xA JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA47 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xCC45E233B2A26479F10617BAB0F82A2B918C69827943F81CB847BD970A6D3400 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x1489 JUMP JUMPDEST PUSH2 0xB67 PUSH0 PUSH2 0x1510 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xBAF PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0xA SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI DUP2 PUSH0 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC08 JUMPI PUSH2 0xC07 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC40 JUMPI PUSH2 0xC3F PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBE8 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC77 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCA3 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCD1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD0A PUSH2 0xD03 PUSH2 0x1172 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x15D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xD5C DUP5 DUP5 DUP5 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0xD68 DUP5 DUP5 DUP5 DUP5 PUSH2 0x173C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD79 DUP3 PUSH2 0x10B3 JUMP JUMPDEST POP PUSH0 PUSH2 0xD83 PUSH2 0x18EE JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xDCC JUMP JUMPDEST DUP1 PUSH2 0xDAB DUP5 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBC SWAP3 SWAP2 SWAP1 PUSH2 0x2876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDF3 JUMPI PUSH2 0xDF2 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE21 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 DUP5 PUSH2 0xE32 JUMPI PUSH1 0xB PUSH2 0xE35 JUMP JUMPDEST PUSH1 0xA JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEFD JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP7 ISZERO ISZERO DUP4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0xEEF JUMPI PUSH2 0xE95 DUP2 PUSH2 0x8C6 JUMP JUMPDEST DUP6 DUP6 DUP1 PUSH2 0xEA1 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE39 JUMP JUMPDEST POP DUP2 DUP4 MSTORE DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA8 PUSH2 0x1489 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1018 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1021 DUP2 PUSH2 0x1510 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x10BE DUP4 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1130 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1127 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1186 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1196 DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D7 JUMPI PUSH2 0x11D6 DUP2 DUP5 DUP7 PUSH2 0x1C40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1262 JUMPI PUSH2 0x1216 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12E1 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1406 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1412 DUP4 DUP4 PUSH0 PUSH2 0x118B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1484 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1491 PUSH2 0x1172 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14AF PUSH2 0xB69 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150E JUMPI PUSH2 0x14D2 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1643 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163A SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x172F SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x18E8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x177F PUSH2 0x1172 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17DC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x185D JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x180A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x180F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1855 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184C SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x18E6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DD SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x18FD SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1929 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1974 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x194B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1974 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1957 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x198C DUP5 PUSH2 0x1D03 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19DC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A3D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x19E9 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1AB9 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1BEB JUMPI PUSH0 PUSH2 0x1AC8 DUP5 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B32 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B45 JUMPI POP PUSH2 0x1B43 DUP2 DUP5 PUSH2 0xF12 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1B87 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7E SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1BE9 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C4B DUP4 DUP4 DUP4 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x1CFE JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CBF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB6 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF5 SWAP3 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1D5F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1D55 JUMPI PUSH2 0x1D54 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1D9C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1DCB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1DC1 JUMPI PUSH2 0x1DC0 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1DF4 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1DEA JUMPI PUSH2 0x1DE9 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E19 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E0F JUMPI PUSH2 0x1E0E PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1E3C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1E4B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F0B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1ECC JUMPI POP PUSH2 0x1ECB DUP5 DUP5 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1F0A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF2 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F59 DUP2 PUSH2 0x1F25 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F74 DUP2 PUSH2 0x1F50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8F JUMPI PUSH2 0x1F8E PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9C DUP5 DUP3 DUP6 ADD PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB9 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x200F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FF4 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2034 DUP3 PUSH2 0x1FD8 JUMP JUMPDEST PUSH2 0x203E DUP2 DUP6 PUSH2 0x1FE2 JUMP JUMPDEST SWAP4 POP PUSH2 0x204E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2057 DUP2 PUSH2 0x201A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 DUP5 PUSH2 0x202A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2094 DUP2 PUSH2 0x2082 JUMP JUMPDEST DUP2 EQ PUSH2 0x209E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20AF DUP2 PUSH2 0x208B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D7 DUP5 DUP3 DUP6 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2109 DUP3 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2119 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2132 PUSH0 DUP4 ADD DUP5 PUSH2 0x2110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2141 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP2 EQ PUSH2 0x214B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x215C DUP2 PUSH2 0x2138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2185 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2196 DUP6 DUP3 DUP7 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21B7 JUMPI PUSH2 0x21B6 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C4 DUP7 DUP3 DUP8 ADD PUSH2 0x214E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21D5 DUP7 DUP3 DUP8 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21E6 DUP7 DUP3 DUP8 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x21F9 DUP2 PUSH2 0x2082 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2212 PUSH0 DUP4 ADD DUP5 PUSH2 0x21F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2221 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP2 EQ PUSH2 0x222B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223C DUP2 PUSH2 0x2218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2264 DUP5 DUP3 DUP6 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2282 JUMPI PUSH2 0x2281 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228F DUP5 DUP3 DUP6 ADD PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CA DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22DB DUP4 DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22FD DUP3 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x2307 DUP2 DUP6 PUSH2 0x22A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2312 DUP4 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2342 JUMPI DUP2 MLOAD PUSH2 0x2329 DUP9 DUP3 PUSH2 0x22D0 JUMP JUMPDEST SWAP8 POP PUSH2 0x2334 DUP4 PUSH2 0x22E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2315 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2367 DUP2 DUP5 PUSH2 0x22F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2385 JUMPI PUSH2 0x2384 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2392 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23A3 DUP6 DUP3 DUP7 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x23EB DUP3 PUSH2 0x201A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x240A JUMPI PUSH2 0x2409 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x241C PUSH2 0x1F14 JUMP JUMPDEST SWAP1 POP PUSH2 0x2428 DUP3 DUP3 PUSH2 0x23E2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2447 JUMPI PUSH2 0x2446 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH2 0x2450 DUP3 PUSH2 0x201A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x247D PUSH2 0x2478 DUP5 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2413 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2499 JUMPI PUSH2 0x2498 PUSH2 0x23B1 JUMP JUMPDEST JUMPDEST PUSH2 0x24A4 DUP5 DUP3 DUP6 PUSH2 0x245D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24C0 JUMPI PUSH2 0x24BF PUSH2 0x23AD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x246B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH2 0x24F0 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24FE DUP8 DUP3 DUP9 ADD PUSH2 0x214E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x250F DUP8 DUP3 DUP9 ADD PUSH2 0x214E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2520 DUP8 DUP3 DUP9 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2541 JUMPI PUSH2 0x2540 PUSH2 0x1F21 JUMP JUMPDEST JUMPDEST PUSH2 0x254D DUP8 DUP3 DUP9 ADD PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258B DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x259C DUP4 DUP4 PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25BE DUP3 PUSH2 0x2559 JUMP JUMPDEST PUSH2 0x25C8 DUP2 DUP6 PUSH2 0x2563 JUMP JUMPDEST SWAP4 POP PUSH2 0x25D3 DUP4 PUSH2 0x2573 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2603 JUMPI DUP2 MLOAD PUSH2 0x25EA DUP9 DUP3 PUSH2 0x2591 JUMP JUMPDEST SWAP8 POP PUSH2 0x25F5 DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25D6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2628 DUP2 DUP5 PUSH2 0x25B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH2 0x2645 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2653 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2664 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26C5 JUMPI PUSH2 0x26C4 PUSH2 0x266E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26DE PUSH0 DUP4 ADD DUP7 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x26EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21F0 JUMP JUMPDEST PUSH2 0x26F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2110 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2737 DUP3 PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP PUSH2 0x2742 DUP4 PUSH2 0x2082 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x275A JUMPI PUSH2 0x2759 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4164647265737320616C72656164792065786973747300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27C1 PUSH1 0x16 DUP4 PUSH2 0x1FE2 JUMP JUMPDEST SWAP2 POP PUSH2 0x27CC DUP3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27EE DUP2 PUSH2 0x27B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27FF DUP3 PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2831 JUMPI PUSH2 0x2830 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2850 DUP3 PUSH2 0x1FD8 JUMP JUMPDEST PUSH2 0x285A DUP2 DUP6 PUSH2 0x283C JUMP JUMPDEST SWAP4 POP PUSH2 0x286A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2881 DUP3 DUP6 PUSH2 0x2846 JUMP JUMPDEST SWAP2 POP PUSH2 0x288D DUP3 DUP5 PUSH2 0x2846 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28BD DUP3 PUSH2 0x2899 JUMP JUMPDEST PUSH2 0x28C7 DUP2 DUP6 PUSH2 0x28A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x28D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x28E0 DUP2 PUSH2 0x201A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x28FE PUSH0 DUP4 ADD DUP8 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x290B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x2918 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x292A DUP2 DUP5 PUSH2 0x28B3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2943 DUP2 PUSH2 0x1F50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295E JUMPI PUSH2 0x295D PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x296B DUP5 DUP3 DUP6 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29B4 PUSH0 DUP4 ADD DUP6 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x29C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xAA 0xB8 PUSH13 0x192230581F8D7664AD57EFC2BA SGT SAR 0xC6 SWAP12 0x22 SUB 0xC6 BLOCKHASH PUSH6 0xF43206C58F5A PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "170:2804:12:-:0;;;253:1;221:33;;648:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;794:12;762:5;769:7;1455:5:2;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;827:4:12::2;822:3;:9;;;;;;:::i;:::-;;648:194:::0;;;;170:2804;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:246::-;2202:1;2212:113;2226:6;2223:1;2220:13;2212:113;;;2311:1;2306:3;2302:11;2296:18;2292:1;2287:3;2283:11;2276:39;2248:2;2245:1;2241:10;2236:15;;2212:113;;;2359:1;2350:6;2345:3;2341:16;2334:27;2183:184;2121:246;;;:::o;2373:434::-;2462:5;2487:66;2503:49;2545:6;2503:49;:::i;:::-;2487:66;:::i;:::-;2478:75;;2576:6;2569:5;2562:21;2614:4;2607:5;2603:16;2652:3;2643:6;2638:3;2634:16;2631:25;2628:112;;;2659:79;;:::i;:::-;2628:112;2749:52;2794:6;2789:3;2784;2749:52;:::i;:::-;2468:339;2373:434;;;;;:::o;2827:355::-;2894:5;2943:3;2936:4;2928:6;2924:17;2920:27;2910:122;;2951:79;;:::i;:::-;2910:122;3061:6;3055:13;3086:90;3172:3;3164:6;3157:4;3149:6;3145:17;3086:90;:::i;:::-;3077:99;;2900:282;2827:355;;;;:::o;3188:1339::-;3315:6;3323;3331;3339;3388:3;3376:9;3367:7;3363:23;3359:33;3356:120;;;3395:79;;:::i;:::-;3356:120;3515:1;3540:64;3596:7;3587:6;3576:9;3572:22;3540:64;:::i;:::-;3530:74;;3486:128;3674:2;3663:9;3659:18;3653:25;3705:18;3697:6;3694:30;3691:117;;;3727:79;;:::i;:::-;3691:117;3832:74;3898:7;3889:6;3878:9;3874:22;3832:74;:::i;:::-;3822:84;;3624:292;3976:2;3965:9;3961:18;3955:25;4007:18;3999:6;3996:30;3993:117;;;4029:79;;:::i;:::-;3993:117;4134:74;4200:7;4191:6;4180:9;4176:22;4134:74;:::i;:::-;4124:84;;3926:292;4278:2;4267:9;4263:18;4257:25;4309:18;4301:6;4298:30;4295:117;;;4331:79;;:::i;:::-;4295:117;4436:74;4502:7;4493:6;4482:9;4478:22;4436:74;:::i;:::-;4426:84;;4228:292;3188:1339;;;;;;;:::o;4533:99::-;4585:6;4619:5;4613:12;4603:22;;4533:99;;;:::o;4638:180::-;4686:77;4683:1;4676:88;4783:4;4780:1;4773:15;4807:4;4804:1;4797:15;4824:320;4868:6;4905:1;4899:4;4895:12;4885:22;;4952:1;4946:4;4942:12;4973:18;4963:81;;5029:4;5021:6;5017:17;5007:27;;4963:81;5091:2;5083:6;5080:14;5060:18;5057:38;5054:84;;5110:18;;:::i;:::-;5054:84;4875:269;4824:320;;;:::o;5150:141::-;5199:4;5222:3;5214:11;;5245:3;5242:1;5235:14;5279:4;5276:1;5266:18;5258:26;;5150:141;;;:::o;5297:93::-;5334:6;5381:2;5376;5369:5;5365:14;5361:23;5351:33;;5297:93;;;:::o;5396:107::-;5440:8;5490:5;5484:4;5480:16;5459:37;;5396:107;;;;:::o;5509:393::-;5578:6;5628:1;5616:10;5612:18;5651:97;5681:66;5670:9;5651:97;:::i;:::-;5769:39;5799:8;5788:9;5769:39;:::i;:::-;5757:51;;5841:4;5837:9;5830:5;5826:21;5817:30;;5890:4;5880:8;5876:19;5869:5;5866:30;5856:40;;5585:317;;5509:393;;;;;:::o;5908:77::-;5945:7;5974:5;5963:16;;5908:77;;;:::o;5991:60::-;6019:3;6040:5;6033:12;;5991:60;;;:::o;6057:142::-;6107:9;6140:53;6158:34;6167:24;6185:5;6167:24;:::i;:::-;6158:34;:::i;:::-;6140:53;:::i;:::-;6127:66;;6057:142;;;:::o;6205:75::-;6248:3;6269:5;6262:12;;6205:75;;;:::o;6286:269::-;6396:39;6427:7;6396:39;:::i;:::-;6457:91;6506:41;6530:16;6506:41;:::i;:::-;6498:6;6491:4;6485:11;6457:91;:::i;:::-;6451:4;6444:105;6362:193;6286:269;;;:::o;6561:73::-;6606:3;6561:73;:::o;6640:189::-;6717:32;;:::i;:::-;6758:65;6816:6;6808;6802:4;6758:65;:::i;:::-;6693:136;6640:189;;:::o;6835:186::-;6895:120;6912:3;6905:5;6902:14;6895:120;;;6966:39;7003:1;6996:5;6966:39;:::i;:::-;6939:1;6932:5;6928:13;6919:22;;6895:120;;;6835:186;;:::o;7027:543::-;7128:2;7123:3;7120:11;7117:446;;;7162:38;7194:5;7162:38;:::i;:::-;7246:29;7264:10;7246:29;:::i;:::-;7236:8;7232:44;7429:2;7417:10;7414:18;7411:49;;;7450:8;7435:23;;7411:49;7473:80;7529:22;7547:3;7529:22;:::i;:::-;7519:8;7515:37;7502:11;7473:80;:::i;:::-;7132:431;;7117:446;7027:543;;;:::o;7576:117::-;7630:8;7680:5;7674:4;7670:16;7649:37;;7576:117;;;;:::o;7699:169::-;7743:6;7776:51;7824:1;7820:6;7812:5;7809:1;7805:13;7776:51;:::i;:::-;7772:56;7857:4;7851;7847:15;7837:25;;7750:118;7699:169;;;;:::o;7873:295::-;7949:4;8095:29;8120:3;8114:4;8095:29;:::i;:::-;8087:37;;8157:3;8154:1;8150:11;8144:4;8141:21;8133:29;;7873:295;;;;:::o;8173:1395::-;8290:37;8323:3;8290:37;:::i;:::-;8392:18;8384:6;8381:30;8378:56;;;8414:18;;:::i;:::-;8378:56;8458:38;8490:4;8484:11;8458:38;:::i;:::-;8543:67;8603:6;8595;8589:4;8543:67;:::i;:::-;8637:1;8661:4;8648:17;;8693:2;8685:6;8682:14;8710:1;8705:618;;;;9367:1;9384:6;9381:77;;;9433:9;9428:3;9424:19;9418:26;9409:35;;9381:77;9484:67;9544:6;9537:5;9484:67;:::i;:::-;9478:4;9471:81;9340:222;8675:887;;8705:618;8757:4;8753:9;8745:6;8741:22;8791:37;8823:4;8791:37;:::i;:::-;8850:1;8864:208;8878:7;8875:1;8872:14;8864:208;;;8957:9;8952:3;8948:19;8942:26;8934:6;8927:42;9008:1;9000:6;8996:14;8986:24;;9055:2;9044:9;9040:18;9027:31;;8901:4;8898:1;8894:12;8889:17;;8864:208;;;9100:6;9091:7;9088:19;9085:179;;;9158:9;9153:3;9149:19;9143:26;9201:48;9243:4;9235:6;9231:17;9220:9;9201:48;:::i;:::-;9193:6;9186:64;9108:156;9085:179;9310:1;9306;9298:6;9294:14;9290:22;9284:4;9277:36;8712:611;;;8675:887;;8265:1303;;;8173:1395;;:::o;9574:118::-;9661:24;9679:5;9661:24;:::i;:::-;9656:3;9649:37;9574:118;;:::o;9698:222::-;9791:4;9829:2;9818:9;9814:18;9806:26;;9842:71;9910:1;9899:9;9895:17;9886:6;9842:71;:::i;:::-;9698:222;;;;:::o;170:2804:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1096": {
									"entryPoint": 4473,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 6785,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3114": {
									"entryPoint": 6382,
									"id": 3114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 7232,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 5948,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5257,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": 4409,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 7764,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 5014,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 4466,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": 6728,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1228": {
									"entryPoint": 4275,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 5587,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5392,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_850": {
									"entryPoint": 4491,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addressExists_2948": {
									"entryPoint": 3342,
									"id": 2948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addressInfoMapFalse_2958": {
									"entryPoint": 4132,
									"id": 2958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addressInfoMapTrue_2953": {
									"entryPoint": 3371,
									"id": 2953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addressKeys_2961": {
									"entryPoint": 1957,
									"id": 2961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_505": {
									"entryPoint": 1680,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 2720,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAddressesByValue_3237": {
									"entryPoint": 3540,
									"id": 3237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAllAddresses_3164": {
									"entryPoint": 2961,
									"id": 3164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 1653,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 3858,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2643": {
									"entryPoint": 7427,
									"id": 2643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFTs_3105": {
									"entryPoint": 2020,
									"id": 3105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_435": {
									"entryPoint": 1510,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_426": {
									"entryPoint": 2246,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2921,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pushAddress_3051": {
									"entryPoint": 2263,
									"id": 3051,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2902,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 1989,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 3409,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 3320,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1756": {
									"entryPoint": 4170,
									"id": 1756,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 1285,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 3176,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1546": {
									"entryPoint": 6526,
									"id": 1546,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 3438,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalAddresses_2939": {
									"entryPoint": 3852,
									"id": 2939,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_601": {
									"entryPoint": 1702,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4000,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 9617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_bool_to_t_bool": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 9602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 8897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10358,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10475,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10657,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9931,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_bool_$dyn_memory_ptr": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_bool_$dyn_memory_ptr": {
									"entryPoint": 8856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_bool_$dyn_memory_ptr": {
									"entryPoint": 8935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9309,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7969,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0": {
									"entryPoint": 10125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20811:13",
										"nodeType": "YulBlock",
										"src": "0:20811:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:184:13",
													"nodeType": "YulBlock",
													"src": "1860:184:13",
													"statements": [
														{
															"nativeSrc": "1870:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:13",
																"nodeType": "YulLiteral",
																"src": "1879:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:13",
																"nodeType": "YulBlock",
																"src": "1939:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:13"
																					},
																					"nativeSrc": "1960:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:13"
																							},
																							"nativeSrc": "1979:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:13"
																					},
																					"nativeSrc": "1973:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:13"
																			},
																			"nativeSrc": "1953:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:13"
																		},
																		"nativeSrc": "1953:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:13"
																},
																"nativeSrc": "1897:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:13"
															},
															"nativeSrc": "1889:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:13",
																"nodeType": "YulBlock",
																"src": "1911:19:13",
																"statements": [
																	{
																		"nativeSrc": "1913:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:13"
																			},
																			"nativeSrc": "1918:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:13",
																"nodeType": "YulBlock",
																"src": "1893:3:13",
																"statements": []
															},
															"src": "1889:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nativeSrc": "2018:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:13"
																},
																"nativeSrc": "2011:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:13"
															},
															"nativeSrc": "2011:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:246:13"
											},
											{
												"body": {
													"nativeSrc": "2098:54:13",
													"nodeType": "YulBlock",
													"src": "2098:54:13",
													"statements": [
														{
															"nativeSrc": "2108:38:13",
															"nodeType": "YulAssignment",
															"src": "2108:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nativeSrc": "2122:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:13"
																		},
																		"nativeSrc": "2138:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nativeSrc": "2118:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:13",
														"nodeType": "YulTypedName",
														"src": "2081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:13",
														"nodeType": "YulTypedName",
														"src": "2091:6:13",
														"type": ""
													}
												],
												"src": "2050:102:13"
											},
											{
												"body": {
													"nativeSrc": "2250:285:13",
													"nodeType": "YulBlock",
													"src": "2250:285:13",
													"statements": [
														{
															"nativeSrc": "2260:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:13"
																},
																"nativeSrc": "2274:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:13",
															"nodeType": "YulAssignment",
															"src": "2322:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:13"
																},
																"nativeSrc": "2329:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:13"
																		},
																		"nativeSrc": "2444:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:13"
																},
																"nativeSrc": "2409:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:13"
															},
															"nativeSrc": "2409:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:13"
														},
														{
															"nativeSrc": "2483:46:13",
															"nodeType": "YulAssignment",
															"src": "2483:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:13"
																		},
																		"nativeSrc": "2499:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nativeSrc": "2490:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:13",
														"nodeType": "YulTypedName",
														"src": "2231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:13",
														"nodeType": "YulTypedName",
														"src": "2238:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:13",
														"nodeType": "YulTypedName",
														"src": "2246:3:13",
														"type": ""
													}
												],
												"src": "2158:377:13"
											},
											{
												"body": {
													"nativeSrc": "2659:195:13",
													"nodeType": "YulBlock",
													"src": "2659:195:13",
													"statements": [
														{
															"nativeSrc": "2669:26:13",
															"nodeType": "YulAssignment",
															"src": "2669:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:13"
																},
																"nativeSrc": "2677:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:13"
																		},
																		"nativeSrc": "2712:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:13"
																},
																"nativeSrc": "2705:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:13"
															},
															"nativeSrc": "2705:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:13"
														},
														{
															"nativeSrc": "2761:86:13",
															"nodeType": "YulAssignment",
															"src": "2761:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:13"
																},
																"nativeSrc": "2769:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:13",
														"nodeType": "YulTypedName",
														"src": "2631:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:13",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:13",
														"nodeType": "YulTypedName",
														"src": "2654:4:13",
														"type": ""
													}
												],
												"src": "2541:313:13"
											},
											{
												"body": {
													"nativeSrc": "2905:32:13",
													"nodeType": "YulBlock",
													"src": "2905:32:13",
													"statements": [
														{
															"nativeSrc": "2915:16:13",
															"nodeType": "YulAssignment",
															"src": "2915:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:13",
																"nodeType": "YulIdentifier",
																"src": "2926:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:13",
														"nodeType": "YulTypedName",
														"src": "2887:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:13",
														"nodeType": "YulTypedName",
														"src": "2897:7:13",
														"type": ""
													}
												],
												"src": "2860:77:13"
											},
											{
												"body": {
													"nativeSrc": "2986:79:13",
													"nodeType": "YulBlock",
													"src": "2986:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:13",
																"nodeType": "YulBlock",
																"src": "3043:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:13"
																			},
																			"nativeSrc": "3045:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:13"
																		},
																		"nativeSrc": "3045:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:13"
																				},
																				"nativeSrc": "3016:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:13"
																		},
																		"nativeSrc": "3006:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:13"
																},
																"nativeSrc": "2999:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:13"
															},
															"nativeSrc": "2996:63:13",
															"nodeType": "YulIf",
															"src": "2996:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:13",
														"nodeType": "YulTypedName",
														"src": "2979:5:13",
														"type": ""
													}
												],
												"src": "2943:122:13"
											},
											{
												"body": {
													"nativeSrc": "3123:87:13",
													"nodeType": "YulBlock",
													"src": "3123:87:13",
													"statements": [
														{
															"nativeSrc": "3133:29:13",
															"nodeType": "YulAssignment",
															"src": "3133:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:13"
																},
																"nativeSrc": "3142:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:13"
																},
																"nativeSrc": "3171:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:13"
															},
															"nativeSrc": "3171:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:13",
														"nodeType": "YulTypedName",
														"src": "3101:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:13",
														"nodeType": "YulTypedName",
														"src": "3109:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:13",
														"nodeType": "YulTypedName",
														"src": "3117:5:13",
														"type": ""
													}
												],
												"src": "3071:139:13"
											},
											{
												"body": {
													"nativeSrc": "3282:263:13",
													"nodeType": "YulBlock",
													"src": "3282:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:13",
																"nodeType": "YulBlock",
																"src": "3328:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:13"
																			},
																			"nativeSrc": "3330:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:13"
																		},
																		"nativeSrc": "3330:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:13"
																		},
																		"nativeSrc": "3299:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:13"
																},
																"nativeSrc": "3295:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:13"
															},
															"nativeSrc": "3292:119:13",
															"nodeType": "YulIf",
															"src": "3292:119:13"
														},
														{
															"nativeSrc": "3421:117:13",
															"nodeType": "YulBlock",
															"src": "3421:117:13",
															"statements": [
																{
																	"nativeSrc": "3436:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:13"
																				},
																				"nativeSrc": "3496:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:13"
																		},
																		"nativeSrc": "3475:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:13",
														"nodeType": "YulTypedName",
														"src": "3252:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:13",
														"nodeType": "YulTypedName",
														"src": "3263:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:13",
														"nodeType": "YulTypedName",
														"src": "3275:6:13",
														"type": ""
													}
												],
												"src": "3216:329:13"
											},
											{
												"body": {
													"nativeSrc": "3596:81:13",
													"nodeType": "YulBlock",
													"src": "3596:81:13",
													"statements": [
														{
															"nativeSrc": "3606:65:13",
															"nodeType": "YulAssignment",
															"src": "3606:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:13"
																},
																"nativeSrc": "3617:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:13",
														"nodeType": "YulTypedName",
														"src": "3578:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:13",
														"nodeType": "YulTypedName",
														"src": "3588:7:13",
														"type": ""
													}
												],
												"src": "3551:126:13"
											},
											{
												"body": {
													"nativeSrc": "3728:51:13",
													"nodeType": "YulBlock",
													"src": "3728:51:13",
													"statements": [
														{
															"nativeSrc": "3738:35:13",
															"nodeType": "YulAssignment",
															"src": "3738:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:13"
																},
																"nativeSrc": "3749:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:13",
														"nodeType": "YulTypedName",
														"src": "3710:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:13",
														"nodeType": "YulTypedName",
														"src": "3720:7:13",
														"type": ""
													}
												],
												"src": "3683:96:13"
											},
											{
												"body": {
													"nativeSrc": "3850:53:13",
													"nodeType": "YulBlock",
													"src": "3850:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:13"
																		},
																		"nativeSrc": "3872:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:13"
																},
																"nativeSrc": "3860:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:13"
															},
															"nativeSrc": "3860:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:13",
														"nodeType": "YulTypedName",
														"src": "3838:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:13",
														"nodeType": "YulTypedName",
														"src": "3845:3:13",
														"type": ""
													}
												],
												"src": "3785:118:13"
											},
											{
												"body": {
													"nativeSrc": "4007:124:13",
													"nodeType": "YulBlock",
													"src": "4007:124:13",
													"statements": [
														{
															"nativeSrc": "4017:26:13",
															"nodeType": "YulAssignment",
															"src": "4017:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:13"
																},
																"nativeSrc": "4025:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:13"
																		},
																		"nativeSrc": "4106:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:13"
																},
																"nativeSrc": "4053:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:13"
															},
															"nativeSrc": "4053:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:13",
														"nodeType": "YulTypedName",
														"src": "3979:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:13",
														"nodeType": "YulTypedName",
														"src": "3991:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:13",
														"nodeType": "YulTypedName",
														"src": "4002:4:13",
														"type": ""
													}
												],
												"src": "3909:222:13"
											},
											{
												"body": {
													"nativeSrc": "4180:79:13",
													"nodeType": "YulBlock",
													"src": "4180:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:13",
																"nodeType": "YulBlock",
																"src": "4237:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:13"
																			},
																			"nativeSrc": "4239:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:13"
																		},
																		"nativeSrc": "4239:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:13"
																				},
																				"nativeSrc": "4210:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:13"
																		},
																		"nativeSrc": "4200:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:13"
																},
																"nativeSrc": "4193:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:13"
															},
															"nativeSrc": "4190:63:13",
															"nodeType": "YulIf",
															"src": "4190:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:13",
														"nodeType": "YulTypedName",
														"src": "4173:5:13",
														"type": ""
													}
												],
												"src": "4137:122:13"
											},
											{
												"body": {
													"nativeSrc": "4317:87:13",
													"nodeType": "YulBlock",
													"src": "4317:87:13",
													"statements": [
														{
															"nativeSrc": "4327:29:13",
															"nodeType": "YulAssignment",
															"src": "4327:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:13"
																},
																"nativeSrc": "4336:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:13"
																},
																"nativeSrc": "4365:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:13"
															},
															"nativeSrc": "4365:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:13",
														"nodeType": "YulTypedName",
														"src": "4295:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:13",
														"nodeType": "YulTypedName",
														"src": "4303:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:13",
														"nodeType": "YulTypedName",
														"src": "4311:5:13",
														"type": ""
													}
												],
												"src": "4265:139:13"
											},
											{
												"body": {
													"nativeSrc": "4493:391:13",
													"nodeType": "YulBlock",
													"src": "4493:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:13",
																"nodeType": "YulBlock",
																"src": "4539:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:13"
																			},
																			"nativeSrc": "4541:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:13"
																		},
																		"nativeSrc": "4541:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:13"
																		},
																		"nativeSrc": "4510:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:13"
																},
																"nativeSrc": "4506:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:13"
															},
															"nativeSrc": "4503:119:13",
															"nodeType": "YulIf",
															"src": "4503:119:13"
														},
														{
															"nativeSrc": "4632:117:13",
															"nodeType": "YulBlock",
															"src": "4632:117:13",
															"statements": [
																{
																	"nativeSrc": "4647:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:13"
																				},
																				"nativeSrc": "4707:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:13"
																		},
																		"nativeSrc": "4686:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:13",
															"nodeType": "YulBlock",
															"src": "4759:118:13",
															"statements": [
																{
																	"nativeSrc": "4774:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:13"
																				},
																				"nativeSrc": "4835:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:13"
																		},
																		"nativeSrc": "4814:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:13",
														"nodeType": "YulTypedName",
														"src": "4455:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:13",
														"nodeType": "YulTypedName",
														"src": "4466:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:13",
														"nodeType": "YulTypedName",
														"src": "4478:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:13",
														"nodeType": "YulTypedName",
														"src": "4486:6:13",
														"type": ""
													}
												],
												"src": "4410:474:13"
											},
											{
												"body": {
													"nativeSrc": "4990:519:13",
													"nodeType": "YulBlock",
													"src": "4990:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:13",
																"nodeType": "YulBlock",
																"src": "5036:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:13"
																			},
																			"nativeSrc": "5038:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:13"
																		},
																		"nativeSrc": "5038:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:13"
																		},
																		"nativeSrc": "5007:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:13"
																},
																"nativeSrc": "5003:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:13"
															},
															"nativeSrc": "5000:119:13",
															"nodeType": "YulIf",
															"src": "5000:119:13"
														},
														{
															"nativeSrc": "5129:117:13",
															"nodeType": "YulBlock",
															"src": "5129:117:13",
															"statements": [
																{
																	"nativeSrc": "5144:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:13"
																				},
																				"nativeSrc": "5204:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:13"
																		},
																		"nativeSrc": "5183:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:13",
															"nodeType": "YulBlock",
															"src": "5256:118:13",
															"statements": [
																{
																	"nativeSrc": "5271:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:13"
																				},
																				"nativeSrc": "5332:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:13"
																		},
																		"nativeSrc": "5311:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:13",
															"nodeType": "YulBlock",
															"src": "5384:118:13",
															"statements": [
																{
																	"nativeSrc": "5399:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:13"
																				},
																				"nativeSrc": "5460:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:13"
																		},
																		"nativeSrc": "5439:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:13",
														"nodeType": "YulTypedName",
														"src": "4944:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:13",
														"nodeType": "YulTypedName",
														"src": "4955:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:13",
														"nodeType": "YulTypedName",
														"src": "4967:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:13",
														"nodeType": "YulTypedName",
														"src": "4975:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:13",
														"nodeType": "YulTypedName",
														"src": "4983:6:13",
														"type": ""
													}
												],
												"src": "4890:619:13"
											},
											{
												"body": {
													"nativeSrc": "5580:53:13",
													"nodeType": "YulBlock",
													"src": "5580:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5597:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5597:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5620:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5620:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5602:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5602:17:13"
																		},
																		"nativeSrc": "5602:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5590:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:13"
																},
																"nativeSrc": "5590:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5590:37:13"
															},
															"nativeSrc": "5590:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5590:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5515:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5568:5:13",
														"nodeType": "YulTypedName",
														"src": "5568:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5575:3:13",
														"nodeType": "YulTypedName",
														"src": "5575:3:13",
														"type": ""
													}
												],
												"src": "5515:118:13"
											},
											{
												"body": {
													"nativeSrc": "5737:124:13",
													"nodeType": "YulBlock",
													"src": "5737:124:13",
													"statements": [
														{
															"nativeSrc": "5747:26:13",
															"nodeType": "YulAssignment",
															"src": "5747:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5759:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5759:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5770:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5770:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5755:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5755:3:13"
																},
																"nativeSrc": "5755:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5755:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5747:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5747:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5827:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5827:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5840:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5840:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5851:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5851:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5836:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5836:3:13"
																		},
																		"nativeSrc": "5836:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5836:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5783:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5783:43:13"
																},
																"nativeSrc": "5783:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5783:71:13"
															},
															"nativeSrc": "5783:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5783:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5639:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5709:9:13",
														"nodeType": "YulTypedName",
														"src": "5709:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5721:6:13",
														"nodeType": "YulTypedName",
														"src": "5721:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5732:4:13",
														"nodeType": "YulTypedName",
														"src": "5732:4:13",
														"type": ""
													}
												],
												"src": "5639:222:13"
											},
											{
												"body": {
													"nativeSrc": "5907:76:13",
													"nodeType": "YulBlock",
													"src": "5907:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5961:16:13",
																"nodeType": "YulBlock",
																"src": "5961:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5970:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5970:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5973:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5973:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5963:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5963:6:13"
																			},
																			"nativeSrc": "5963:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5963:12:13"
																		},
																		"nativeSrc": "5963:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5963:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5930:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5930:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5952:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5952:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5937:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "5937:14:13"
																				},
																				"nativeSrc": "5937:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5937:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5927:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5927:2:13"
																		},
																		"nativeSrc": "5927:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5927:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5920:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5920:6:13"
																},
																"nativeSrc": "5920:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5920:40:13"
															},
															"nativeSrc": "5917:60:13",
															"nodeType": "YulIf",
															"src": "5917:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5867:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5900:5:13",
														"nodeType": "YulTypedName",
														"src": "5900:5:13",
														"type": ""
													}
												],
												"src": "5867:116:13"
											},
											{
												"body": {
													"nativeSrc": "6038:84:13",
													"nodeType": "YulBlock",
													"src": "6038:84:13",
													"statements": [
														{
															"nativeSrc": "6048:29:13",
															"nodeType": "YulAssignment",
															"src": "6048:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6070:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6070:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6057:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6057:12:13"
																},
																"nativeSrc": "6057:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6057:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6048:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6048:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6110:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6110:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6086:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "6086:23:13"
																},
																"nativeSrc": "6086:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6086:30:13"
															},
															"nativeSrc": "6086:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6086:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5989:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6016:6:13",
														"nodeType": "YulTypedName",
														"src": "6016:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6024:3:13",
														"nodeType": "YulTypedName",
														"src": "6024:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6032:5:13",
														"nodeType": "YulTypedName",
														"src": "6032:5:13",
														"type": ""
													}
												],
												"src": "5989:133:13"
											},
											{
												"body": {
													"nativeSrc": "6191:260:13",
													"nodeType": "YulBlock",
													"src": "6191:260:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6237:83:13",
																"nodeType": "YulBlock",
																"src": "6237:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6239:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6239:77:13"
																			},
																			"nativeSrc": "6239:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6239:79:13"
																		},
																		"nativeSrc": "6239:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6239:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6212:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6212:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6221:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6221:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6208:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:13"
																		},
																		"nativeSrc": "6208:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6233:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6233:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6204:3:13"
																},
																"nativeSrc": "6204:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6204:32:13"
															},
															"nativeSrc": "6201:119:13",
															"nodeType": "YulIf",
															"src": "6201:119:13"
														},
														{
															"nativeSrc": "6330:114:13",
															"nodeType": "YulBlock",
															"src": "6330:114:13",
															"statements": [
																{
																	"nativeSrc": "6345:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6345:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6359:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6359:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6349:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6349:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6374:60:13",
																	"nodeType": "YulAssignment",
																	"src": "6374:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6406:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6406:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6417:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6417:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6402:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6402:3:13"
																				},
																				"nativeSrc": "6402:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6402:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6426:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6426:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6384:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6384:17:13"
																		},
																		"nativeSrc": "6384:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6384:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6374:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6374:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "6128:323:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:13",
														"nodeType": "YulTypedName",
														"src": "6161:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:13",
														"nodeType": "YulTypedName",
														"src": "6172:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:13",
														"nodeType": "YulTypedName",
														"src": "6184:6:13",
														"type": ""
													}
												],
												"src": "6128:323:13"
											},
											{
												"body": {
													"nativeSrc": "6523:263:13",
													"nodeType": "YulBlock",
													"src": "6523:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6569:83:13",
																"nodeType": "YulBlock",
																"src": "6569:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6571:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6571:77:13"
																			},
																			"nativeSrc": "6571:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6571:79:13"
																		},
																		"nativeSrc": "6571:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6571:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6553:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6553:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:13"
																		},
																		"nativeSrc": "6540:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6540:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6565:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6565:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6536:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:13"
																},
																"nativeSrc": "6536:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6536:32:13"
															},
															"nativeSrc": "6533:119:13",
															"nodeType": "YulIf",
															"src": "6533:119:13"
														},
														{
															"nativeSrc": "6662:117:13",
															"nodeType": "YulBlock",
															"src": "6662:117:13",
															"statements": [
																{
																	"nativeSrc": "6677:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6677:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6691:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6681:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6681:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6706:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6706:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6741:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6741:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6752:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6752:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6737:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6737:3:13"
																				},
																				"nativeSrc": "6737:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6737:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6761:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6761:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6716:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6716:20:13"
																		},
																		"nativeSrc": "6716:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6716:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6706:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6706:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6457:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6493:9:13",
														"nodeType": "YulTypedName",
														"src": "6493:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6504:7:13",
														"nodeType": "YulTypedName",
														"src": "6504:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6516:6:13",
														"nodeType": "YulTypedName",
														"src": "6516:6:13",
														"type": ""
													}
												],
												"src": "6457:329:13"
											},
											{
												"body": {
													"nativeSrc": "6863:40:13",
													"nodeType": "YulBlock",
													"src": "6863:40:13",
													"statements": [
														{
															"nativeSrc": "6874:22:13",
															"nodeType": "YulAssignment",
															"src": "6874:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6890:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6890:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6884:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6884:5:13"
																},
																"nativeSrc": "6884:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6884:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6874:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6874:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
												"nativeSrc": "6792:111:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6846:5:13",
														"nodeType": "YulTypedName",
														"src": "6846:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6856:6:13",
														"nodeType": "YulTypedName",
														"src": "6856:6:13",
														"type": ""
													}
												],
												"src": "6792:111:13"
											},
											{
												"body": {
													"nativeSrc": "7017:73:13",
													"nodeType": "YulBlock",
													"src": "7017:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7034:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7034:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7039:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7039:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7027:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7027:6:13"
																},
																"nativeSrc": "7027:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7027:19:13"
															},
															"nativeSrc": "7027:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "7027:19:13"
														},
														{
															"nativeSrc": "7055:29:13",
															"nodeType": "YulAssignment",
															"src": "7055:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7074:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7074:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7079:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7079:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7070:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7070:3:13"
																},
																"nativeSrc": "7070:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7070:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7055:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "7055:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6909:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6989:3:13",
														"nodeType": "YulTypedName",
														"src": "6989:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6994:6:13",
														"nodeType": "YulTypedName",
														"src": "6994:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7005:11:13",
														"nodeType": "YulTypedName",
														"src": "7005:11:13",
														"type": ""
													}
												],
												"src": "6909:181:13"
											},
											{
												"body": {
													"nativeSrc": "7165:60:13",
													"nodeType": "YulBlock",
													"src": "7165:60:13",
													"statements": [
														{
															"nativeSrc": "7175:11:13",
															"nodeType": "YulAssignment",
															"src": "7175:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "7183:3:13",
																"nodeType": "YulIdentifier",
																"src": "7183:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7175:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7175:4:13"
																}
															]
														},
														{
															"nativeSrc": "7196:22:13",
															"nodeType": "YulAssignment",
															"src": "7196:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7208:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7208:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7213:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7213:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:13"
																},
																"nativeSrc": "7204:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7204:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7196:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7196:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
												"nativeSrc": "7096:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7152:3:13",
														"nodeType": "YulTypedName",
														"src": "7152:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7160:4:13",
														"nodeType": "YulTypedName",
														"src": "7160:4:13",
														"type": ""
													}
												],
												"src": "7096:129:13"
											},
											{
												"body": {
													"nativeSrc": "7280:50:13",
													"nodeType": "YulBlock",
													"src": "7280:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7297:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7297:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7317:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7317:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "7302:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "7302:14:13"
																		},
																		"nativeSrc": "7302:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7302:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7290:6:13"
																},
																"nativeSrc": "7290:34:13",
																"nodeType": "YulFunctionCall",
																"src": "7290:34:13"
															},
															"nativeSrc": "7290:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "7290:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "7231:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7268:5:13",
														"nodeType": "YulTypedName",
														"src": "7268:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7275:3:13",
														"nodeType": "YulTypedName",
														"src": "7275:3:13",
														"type": ""
													}
												],
												"src": "7231:99:13"
											},
											{
												"body": {
													"nativeSrc": "7410:93:13",
													"nodeType": "YulBlock",
													"src": "7410:93:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7448:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7448:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7456:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7456:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool",
																	"nativeSrc": "7420:27:13",
																	"nodeType": "YulIdentifier",
																	"src": "7420:27:13"
																},
																"nativeSrc": "7420:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7420:40:13"
															},
															"nativeSrc": "7420:40:13",
															"nodeType": "YulExpressionStatement",
															"src": "7420:40:13"
														},
														{
															"nativeSrc": "7469:28:13",
															"nodeType": "YulAssignment",
															"src": "7469:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7487:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7487:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7492:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7492:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7483:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:13"
																},
																"nativeSrc": "7483:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7483:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7469:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "7469:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
												"nativeSrc": "7336:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7383:6:13",
														"nodeType": "YulTypedName",
														"src": "7383:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7391:3:13",
														"nodeType": "YulTypedName",
														"src": "7391:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7399:10:13",
														"nodeType": "YulTypedName",
														"src": "7399:10:13",
														"type": ""
													}
												],
												"src": "7336:167:13"
											},
											{
												"body": {
													"nativeSrc": "7581:38:13",
													"nodeType": "YulBlock",
													"src": "7581:38:13",
													"statements": [
														{
															"nativeSrc": "7591:22:13",
															"nodeType": "YulAssignment",
															"src": "7591:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7603:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7603:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7608:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7608:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7599:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:13"
																},
																"nativeSrc": "7599:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7599:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7591:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7591:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
												"nativeSrc": "7509:110:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7568:3:13",
														"nodeType": "YulTypedName",
														"src": "7568:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7576:4:13",
														"nodeType": "YulTypedName",
														"src": "7576:4:13",
														"type": ""
													}
												],
												"src": "7509:110:13"
											},
											{
												"body": {
													"nativeSrc": "7767:590:13",
													"nodeType": "YulBlock",
													"src": "7767:590:13",
													"statements": [
														{
															"nativeSrc": "7777:65:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7777:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7836:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7836:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
																	"nativeSrc": "7791:44:13",
																	"nodeType": "YulIdentifier",
																	"src": "7791:44:13"
																},
																"nativeSrc": "7791:51:13",
																"nodeType": "YulFunctionCall",
																"src": "7791:51:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7781:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7781:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7851:90:13",
															"nodeType": "YulAssignment",
															"src": "7851:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7929:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7858:70:13",
																	"nodeType": "YulIdentifier",
																	"src": "7858:70:13"
																},
																"nativeSrc": "7858:83:13",
																"nodeType": "YulFunctionCall",
																"src": "7858:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7851:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7851:3:13"
																}
															]
														},
														{
															"nativeSrc": "7950:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7950:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8012:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8012:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
																	"nativeSrc": "7965:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "7965:46:13"
																},
																"nativeSrc": "7965:53:13",
																"nodeType": "YulFunctionCall",
																"src": "7965:53:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7954:7:13",
																	"nodeType": "YulTypedName",
																	"src": "7954:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8027:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8027:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8041:7:13",
																"nodeType": "YulIdentifier",
																"src": "8041:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8031:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8031:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8117:215:13",
																"nodeType": "YulBlock",
																"src": "8117:215:13",
																"statements": [
																	{
																		"nativeSrc": "8131:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8131:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8158:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8158:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8152:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8152:5:13"
																			},
																			"nativeSrc": "8152:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8152:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8135:13:13",
																				"nodeType": "YulTypedName",
																				"src": "8135:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8178:64:13",
																		"nodeType": "YulAssignment",
																		"src": "8178:64:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8223:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "8223:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8238:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8238:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
																				"nativeSrc": "8185:37:13",
																				"nodeType": "YulIdentifier",
																				"src": "8185:37:13"
																			},
																			"nativeSrc": "8185:57:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8185:57:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8178:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8178:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8255:67:13",
																		"nodeType": "YulAssignment",
																		"src": "8255:67:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8315:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8315:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
																				"nativeSrc": "8265:49:13",
																				"nodeType": "YulIdentifier",
																				"src": "8265:49:13"
																			},
																			"nativeSrc": "8265:57:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8265:57:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8255:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8255:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8079:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8079:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8082:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8082:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8076:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8076:2:13"
																},
																"nativeSrc": "8076:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8076:13:13"
															},
															"nativeSrc": "8057:275:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8090:18:13",
																"nodeType": "YulBlock",
																"src": "8090:18:13",
																"statements": [
																	{
																		"nativeSrc": "8092:14:13",
																		"nodeType": "YulAssignment",
																		"src": "8092:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8101:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "8101:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8104:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8104:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8097:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8097:3:13"
																			},
																			"nativeSrc": "8097:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8097:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8092:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8092:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8061:14:13",
																"nodeType": "YulBlock",
																"src": "8061:14:13",
																"statements": [
																	{
																		"nativeSrc": "8063:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8063:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8072:1:13",
																			"nodeType": "YulLiteral",
																			"src": "8072:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8067:1:13",
																				"nodeType": "YulTypedName",
																				"src": "8067:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8057:275:13"
														},
														{
															"nativeSrc": "8341:10:13",
															"nodeType": "YulAssignment",
															"src": "8341:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "8348:3:13",
																"nodeType": "YulIdentifier",
																"src": "8348:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8341:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8341:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7649:708:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7746:5:13",
														"nodeType": "YulTypedName",
														"src": "7746:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7753:3:13",
														"nodeType": "YulTypedName",
														"src": "7753:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7762:3:13",
														"nodeType": "YulTypedName",
														"src": "7762:3:13",
														"type": ""
													}
												],
												"src": "7649:708:13"
											},
											{
												"body": {
													"nativeSrc": "8505:219:13",
													"nodeType": "YulBlock",
													"src": "8505:219:13",
													"statements": [
														{
															"nativeSrc": "8515:26:13",
															"nodeType": "YulAssignment",
															"src": "8515:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8527:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8527:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8523:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8523:3:13"
																},
																"nativeSrc": "8523:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8523:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8515:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8515:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8562:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8562:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8573:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8573:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8558:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8558:3:13"
																		},
																		"nativeSrc": "8558:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8558:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8581:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8581:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8587:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8587:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8577:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:13"
																		},
																		"nativeSrc": "8577:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8551:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:13"
																},
																"nativeSrc": "8551:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8551:47:13"
															},
															"nativeSrc": "8551:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8551:47:13"
														},
														{
															"nativeSrc": "8607:110:13",
															"nodeType": "YulAssignment",
															"src": "8607:110:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8703:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8703:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8712:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8712:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8615:87:13",
																	"nodeType": "YulIdentifier",
																	"src": "8615:87:13"
																},
																"nativeSrc": "8615:102:13",
																"nodeType": "YulFunctionCall",
																"src": "8615:102:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8607:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8607:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8363:361:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8477:9:13",
														"nodeType": "YulTypedName",
														"src": "8477:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8489:6:13",
														"nodeType": "YulTypedName",
														"src": "8489:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8500:4:13",
														"nodeType": "YulTypedName",
														"src": "8500:4:13",
														"type": ""
													}
												],
												"src": "8363:361:13"
											},
											{
												"body": {
													"nativeSrc": "8810:388:13",
													"nodeType": "YulBlock",
													"src": "8810:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8856:83:13",
																"nodeType": "YulBlock",
																"src": "8856:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8858:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8858:77:13"
																			},
																			"nativeSrc": "8858:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8858:79:13"
																		},
																		"nativeSrc": "8858:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8858:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8831:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8831:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8840:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8840:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8827:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8827:3:13"
																		},
																		"nativeSrc": "8827:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8827:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8852:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8852:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8823:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8823:3:13"
																},
																"nativeSrc": "8823:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8823:32:13"
															},
															"nativeSrc": "8820:119:13",
															"nodeType": "YulIf",
															"src": "8820:119:13"
														},
														{
															"nativeSrc": "8949:117:13",
															"nodeType": "YulBlock",
															"src": "8949:117:13",
															"statements": [
																{
																	"nativeSrc": "8964:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8964:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8978:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8978:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8968:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8968:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8993:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8993:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9028:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9028:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9039:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9039:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9024:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9024:3:13"
																				},
																				"nativeSrc": "9024:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9024:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9048:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9048:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9003:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9003:20:13"
																		},
																		"nativeSrc": "9003:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9003:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8993:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8993:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9076:115:13",
															"nodeType": "YulBlock",
															"src": "9076:115:13",
															"statements": [
																{
																	"nativeSrc": "9091:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9091:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9105:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9105:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9095:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9095:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9121:60:13",
																	"nodeType": "YulAssignment",
																	"src": "9121:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9153:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9153:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9164:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9164:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9149:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9149:3:13"
																				},
																				"nativeSrc": "9149:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9149:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9173:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9173:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9131:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9131:17:13"
																		},
																		"nativeSrc": "9131:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9131:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9121:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9121:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "8730:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8772:9:13",
														"nodeType": "YulTypedName",
														"src": "8772:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8783:7:13",
														"nodeType": "YulTypedName",
														"src": "8783:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8795:6:13",
														"nodeType": "YulTypedName",
														"src": "8795:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8803:6:13",
														"nodeType": "YulTypedName",
														"src": "8803:6:13",
														"type": ""
													}
												],
												"src": "8730:468:13"
											},
											{
												"body": {
													"nativeSrc": "9293:28:13",
													"nodeType": "YulBlock",
													"src": "9293:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9310:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9310:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9313:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9313:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9303:6:13"
																},
																"nativeSrc": "9303:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9303:12:13"
															},
															"nativeSrc": "9303:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "9303:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "9204:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9204:117:13"
											},
											{
												"body": {
													"nativeSrc": "9416:28:13",
													"nodeType": "YulBlock",
													"src": "9416:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9433:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9433:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9436:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9426:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:13"
																},
																"nativeSrc": "9426:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9426:12:13"
															},
															"nativeSrc": "9426:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "9426:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "9327:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9327:117:13"
											},
											{
												"body": {
													"nativeSrc": "9478:152:13",
													"nodeType": "YulBlock",
													"src": "9478:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9495:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9495:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9498:77:13",
																		"nodeType": "YulLiteral",
																		"src": "9498:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9488:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:13"
																},
																"nativeSrc": "9488:88:13",
																"nodeType": "YulFunctionCall",
																"src": "9488:88:13"
															},
															"nativeSrc": "9488:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "9488:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9592:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9592:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9595:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9595:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9585:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9585:6:13"
																},
																"nativeSrc": "9585:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9585:15:13"
															},
															"nativeSrc": "9585:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9585:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9616:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9616:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9619:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9609:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9609:6:13"
																},
																"nativeSrc": "9609:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9609:15:13"
															},
															"nativeSrc": "9609:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9609:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9450:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9450:180:13"
											},
											{
												"body": {
													"nativeSrc": "9679:238:13",
													"nodeType": "YulBlock",
													"src": "9679:238:13",
													"statements": [
														{
															"nativeSrc": "9689:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9689:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9711:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9711:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "9741:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9741:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9719:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "9719:21:13"
																		},
																		"nativeSrc": "9719:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9719:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9707:3:13"
																},
																"nativeSrc": "9707:40:13",
																"nodeType": "YulFunctionCall",
																"src": "9707:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9693:10:13",
																	"nodeType": "YulTypedName",
																	"src": "9693:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9858:22:13",
																"nodeType": "YulBlock",
																"src": "9858:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9860:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9860:16:13"
																			},
																			"nativeSrc": "9860:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9860:18:13"
																		},
																		"nativeSrc": "9860:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9860:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9801:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "9801:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9813:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9813:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9798:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9798:2:13"
																		},
																		"nativeSrc": "9798:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9798:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9837:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "9837:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9849:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9849:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9834:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9834:2:13"
																		},
																		"nativeSrc": "9834:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9834:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9795:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9795:2:13"
																},
																"nativeSrc": "9795:62:13",
																"nodeType": "YulFunctionCall",
																"src": "9795:62:13"
															},
															"nativeSrc": "9792:88:13",
															"nodeType": "YulIf",
															"src": "9792:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9896:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9896:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9900:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "9900:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9889:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9889:6:13"
																},
																"nativeSrc": "9889:22:13",
																"nodeType": "YulFunctionCall",
																"src": "9889:22:13"
															},
															"nativeSrc": "9889:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "9889:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "9636:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9665:6:13",
														"nodeType": "YulTypedName",
														"src": "9665:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "9673:4:13",
														"nodeType": "YulTypedName",
														"src": "9673:4:13",
														"type": ""
													}
												],
												"src": "9636:281:13"
											},
											{
												"body": {
													"nativeSrc": "9964:88:13",
													"nodeType": "YulBlock",
													"src": "9964:88:13",
													"statements": [
														{
															"nativeSrc": "9974:30:13",
															"nodeType": "YulAssignment",
															"src": "9974:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "9984:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9984:18:13"
																},
																"nativeSrc": "9984:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9984:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9974:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9974:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10033:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10033:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "10041:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10041:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "10013:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "10013:19:13"
																},
																"nativeSrc": "10013:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10013:33:13"
															},
															"nativeSrc": "10013:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "10013:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9923:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "9948:4:13",
														"nodeType": "YulTypedName",
														"src": "9948:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9957:6:13",
														"nodeType": "YulTypedName",
														"src": "9957:6:13",
														"type": ""
													}
												],
												"src": "9923:129:13"
											},
											{
												"body": {
													"nativeSrc": "10124:241:13",
													"nodeType": "YulBlock",
													"src": "10124:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10229:22:13",
																"nodeType": "YulBlock",
																"src": "10229:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10231:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10231:16:13"
																			},
																			"nativeSrc": "10231:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10231:18:13"
																		},
																		"nativeSrc": "10231:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10231:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10201:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10201:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10209:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10209:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10198:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10198:2:13"
																},
																"nativeSrc": "10198:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10198:30:13"
															},
															"nativeSrc": "10195:56:13",
															"nodeType": "YulIf",
															"src": "10195:56:13"
														},
														{
															"nativeSrc": "10261:37:13",
															"nodeType": "YulAssignment",
															"src": "10261:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10291:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10291:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10269:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "10269:21:13"
																},
																"nativeSrc": "10269:29:13",
																"nodeType": "YulFunctionCall",
																"src": "10269:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10261:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10261:4:13"
																}
															]
														},
														{
															"nativeSrc": "10335:23:13",
															"nodeType": "YulAssignment",
															"src": "10335:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10347:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10347:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10353:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10353:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10343:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10343:3:13"
																},
																"nativeSrc": "10343:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10343:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10335:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10335:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10058:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10108:6:13",
														"nodeType": "YulTypedName",
														"src": "10108:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10119:4:13",
														"nodeType": "YulTypedName",
														"src": "10119:4:13",
														"type": ""
													}
												],
												"src": "10058:307:13"
											},
											{
												"body": {
													"nativeSrc": "10435:82:13",
													"nodeType": "YulBlock",
													"src": "10435:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10458:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10458:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10463:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10463:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10468:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10468:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10445:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10445:12:13"
																},
																"nativeSrc": "10445:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10445:30:13"
															},
															"nativeSrc": "10445:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10445:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10495:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10495:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10500:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10500:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10491:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10491:3:13"
																		},
																		"nativeSrc": "10491:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10491:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10509:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10509:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10484:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:13"
																},
																"nativeSrc": "10484:27:13",
																"nodeType": "YulFunctionCall",
																"src": "10484:27:13"
															},
															"nativeSrc": "10484:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "10484:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10371:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10417:3:13",
														"nodeType": "YulTypedName",
														"src": "10417:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10422:3:13",
														"nodeType": "YulTypedName",
														"src": "10422:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10427:6:13",
														"nodeType": "YulTypedName",
														"src": "10427:6:13",
														"type": ""
													}
												],
												"src": "10371:146:13"
											},
											{
												"body": {
													"nativeSrc": "10606:340:13",
													"nodeType": "YulBlock",
													"src": "10606:340:13",
													"statements": [
														{
															"nativeSrc": "10616:74:13",
															"nodeType": "YulAssignment",
															"src": "10616:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10682:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10682:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10641:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "10641:40:13"
																		},
																		"nativeSrc": "10641:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10641:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10625:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10625:15:13"
																},
																"nativeSrc": "10625:65:13",
																"nodeType": "YulFunctionCall",
																"src": "10625:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10616:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10616:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10706:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10706:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10713:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10713:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10699:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10699:6:13"
																},
																"nativeSrc": "10699:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10699:21:13"
															},
															"nativeSrc": "10699:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10699:21:13"
														},
														{
															"nativeSrc": "10729:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10729:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10744:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10744:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10751:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10751:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10740:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10740:3:13"
																},
																"nativeSrc": "10740:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10740:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10733:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10733:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10794:83:13",
																"nodeType": "YulBlock",
																"src": "10794:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10796:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10796:77:13"
																			},
																			"nativeSrc": "10796:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10796:79:13"
																		},
																		"nativeSrc": "10796:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10796:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10775:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10775:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10780:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10780:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10771:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:13"
																		},
																		"nativeSrc": "10771:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10771:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10789:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10789:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10768:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10768:2:13"
																},
																"nativeSrc": "10768:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10768:25:13"
															},
															"nativeSrc": "10765:112:13",
															"nodeType": "YulIf",
															"src": "10765:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10923:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10923:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10928:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10928:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10933:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10933:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10886:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "10886:36:13"
																},
																"nativeSrc": "10886:54:13",
																"nodeType": "YulFunctionCall",
																"src": "10886:54:13"
															},
															"nativeSrc": "10886:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "10886:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10523:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10579:3:13",
														"nodeType": "YulTypedName",
														"src": "10579:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10584:6:13",
														"nodeType": "YulTypedName",
														"src": "10584:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10592:3:13",
														"nodeType": "YulTypedName",
														"src": "10592:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10600:5:13",
														"nodeType": "YulTypedName",
														"src": "10600:5:13",
														"type": ""
													}
												],
												"src": "10523:423:13"
											},
											{
												"body": {
													"nativeSrc": "11026:277:13",
													"nodeType": "YulBlock",
													"src": "11026:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11075:83:13",
																"nodeType": "YulBlock",
																"src": "11075:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11077:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11077:77:13"
																			},
																			"nativeSrc": "11077:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11077:79:13"
																		},
																		"nativeSrc": "11077:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11077:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11054:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11054:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11062:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11062:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11050:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11050:3:13"
																				},
																				"nativeSrc": "11050:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11050:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11069:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11069:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11046:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:13"
																		},
																		"nativeSrc": "11046:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11046:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11039:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:13"
																},
																"nativeSrc": "11039:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11039:35:13"
															},
															"nativeSrc": "11036:122:13",
															"nodeType": "YulIf",
															"src": "11036:122:13"
														},
														{
															"nativeSrc": "11167:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11167:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11194:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11194:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11181:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11181:12:13"
																},
																"nativeSrc": "11181:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11181:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11171:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11171:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11210:87:13",
															"nodeType": "YulAssignment",
															"src": "11210:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11270:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11270:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11278:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11278:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11266:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11266:3:13"
																		},
																		"nativeSrc": "11266:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11266:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11285:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11285:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11293:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11293:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11219:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "11219:46:13"
																},
																"nativeSrc": "11219:78:13",
																"nodeType": "YulFunctionCall",
																"src": "11219:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11210:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11210:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10965:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11004:6:13",
														"nodeType": "YulTypedName",
														"src": "11004:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11012:3:13",
														"nodeType": "YulTypedName",
														"src": "11012:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11020:5:13",
														"nodeType": "YulTypedName",
														"src": "11020:5:13",
														"type": ""
													}
												],
												"src": "10965:338:13"
											},
											{
												"body": {
													"nativeSrc": "11435:817:13",
													"nodeType": "YulBlock",
													"src": "11435:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11482:83:13",
																"nodeType": "YulBlock",
																"src": "11482:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11484:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11484:77:13"
																			},
																			"nativeSrc": "11484:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11484:79:13"
																		},
																		"nativeSrc": "11484:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11484:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11456:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11456:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11465:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11465:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11452:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11452:3:13"
																		},
																		"nativeSrc": "11452:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11452:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11477:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11477:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11448:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11448:3:13"
																},
																"nativeSrc": "11448:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11448:33:13"
															},
															"nativeSrc": "11445:120:13",
															"nodeType": "YulIf",
															"src": "11445:120:13"
														},
														{
															"nativeSrc": "11575:117:13",
															"nodeType": "YulBlock",
															"src": "11575:117:13",
															"statements": [
																{
																	"nativeSrc": "11590:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11590:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11604:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11604:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11594:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11594:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11619:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11619:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11654:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11654:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11665:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11665:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11650:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11650:3:13"
																				},
																				"nativeSrc": "11650:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11650:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11674:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11674:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11629:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11629:20:13"
																		},
																		"nativeSrc": "11629:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11629:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11619:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11619:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11702:118:13",
															"nodeType": "YulBlock",
															"src": "11702:118:13",
															"statements": [
																{
																	"nativeSrc": "11717:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11717:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11731:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11731:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11721:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11721:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11747:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11747:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11782:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11782:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11793:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11793:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11778:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11778:3:13"
																				},
																				"nativeSrc": "11778:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11778:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11802:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11802:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11757:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11757:20:13"
																		},
																		"nativeSrc": "11757:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11757:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11747:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11747:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11830:118:13",
															"nodeType": "YulBlock",
															"src": "11830:118:13",
															"statements": [
																{
																	"nativeSrc": "11845:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11845:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11859:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11859:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11849:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11849:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11875:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11875:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11910:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11910:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11921:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11921:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11906:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11906:3:13"
																				},
																				"nativeSrc": "11906:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11906:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11930:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11930:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11885:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11885:20:13"
																		},
																		"nativeSrc": "11885:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11885:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11875:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11875:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11958:287:13",
															"nodeType": "YulBlock",
															"src": "11958:287:13",
															"statements": [
																{
																	"nativeSrc": "11973:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11973:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12004:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12004:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12015:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12015:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12000:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12000:3:13"
																				},
																				"nativeSrc": "12000:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12000:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11987:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11987:12:13"
																		},
																		"nativeSrc": "11987:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11987:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11977:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11977:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12066:83:13",
																		"nodeType": "YulBlock",
																		"src": "12066:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12068:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12068:77:13"
																					},
																					"nativeSrc": "12068:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12068:79:13"
																				},
																				"nativeSrc": "12068:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12068:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12038:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12038:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12046:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12046:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12035:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12035:2:13"
																		},
																		"nativeSrc": "12035:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12035:30:13"
																	},
																	"nativeSrc": "12032:117:13",
																	"nodeType": "YulIf",
																	"src": "12032:117:13"
																},
																{
																	"nativeSrc": "12163:72:13",
																	"nodeType": "YulAssignment",
																	"src": "12163:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12207:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12207:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12218:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12218:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12203:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12203:3:13"
																				},
																				"nativeSrc": "12203:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12203:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12227:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12227:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12173:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "12173:29:13"
																		},
																		"nativeSrc": "12173:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12173:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12163:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12163:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11309:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11381:9:13",
														"nodeType": "YulTypedName",
														"src": "11381:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11392:7:13",
														"nodeType": "YulTypedName",
														"src": "11392:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11404:6:13",
														"nodeType": "YulTypedName",
														"src": "11404:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11412:6:13",
														"nodeType": "YulTypedName",
														"src": "11412:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11420:6:13",
														"nodeType": "YulTypedName",
														"src": "11420:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11428:6:13",
														"nodeType": "YulTypedName",
														"src": "11428:6:13",
														"type": ""
													}
												],
												"src": "11309:943:13"
											},
											{
												"body": {
													"nativeSrc": "12332:40:13",
													"nodeType": "YulBlock",
													"src": "12332:40:13",
													"statements": [
														{
															"nativeSrc": "12343:22:13",
															"nodeType": "YulAssignment",
															"src": "12343:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12359:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12359:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12353:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12353:5:13"
																},
																"nativeSrc": "12353:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12353:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12343:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12343:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12258:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12315:5:13",
														"nodeType": "YulTypedName",
														"src": "12315:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12325:6:13",
														"nodeType": "YulTypedName",
														"src": "12325:6:13",
														"type": ""
													}
												],
												"src": "12258:114:13"
											},
											{
												"body": {
													"nativeSrc": "12489:73:13",
													"nodeType": "YulBlock",
													"src": "12489:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12506:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12506:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12511:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12511:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12499:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12499:6:13"
																},
																"nativeSrc": "12499:19:13",
																"nodeType": "YulFunctionCall",
																"src": "12499:19:13"
															},
															"nativeSrc": "12499:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "12499:19:13"
														},
														{
															"nativeSrc": "12527:29:13",
															"nodeType": "YulAssignment",
															"src": "12527:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12546:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12546:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12551:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12551:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12542:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12542:3:13"
																},
																"nativeSrc": "12542:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12542:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12527:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "12527:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12378:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12461:3:13",
														"nodeType": "YulTypedName",
														"src": "12461:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12466:6:13",
														"nodeType": "YulTypedName",
														"src": "12466:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12477:11:13",
														"nodeType": "YulTypedName",
														"src": "12477:11:13",
														"type": ""
													}
												],
												"src": "12378:184:13"
											},
											{
												"body": {
													"nativeSrc": "12640:60:13",
													"nodeType": "YulBlock",
													"src": "12640:60:13",
													"statements": [
														{
															"nativeSrc": "12650:11:13",
															"nodeType": "YulAssignment",
															"src": "12650:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "12658:3:13",
																"nodeType": "YulIdentifier",
																"src": "12658:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12650:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12650:4:13"
																}
															]
														},
														{
															"nativeSrc": "12671:22:13",
															"nodeType": "YulAssignment",
															"src": "12671:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12683:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12683:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12688:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12688:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12679:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12679:3:13"
																},
																"nativeSrc": "12679:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12679:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12671:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12671:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12568:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12627:3:13",
														"nodeType": "YulTypedName",
														"src": "12627:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12635:4:13",
														"nodeType": "YulTypedName",
														"src": "12635:4:13",
														"type": ""
													}
												],
												"src": "12568:132:13"
											},
											{
												"body": {
													"nativeSrc": "12761:53:13",
													"nodeType": "YulBlock",
													"src": "12761:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12778:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12778:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12801:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12801:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12783:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "12783:17:13"
																		},
																		"nativeSrc": "12783:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12783:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12771:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12771:6:13"
																},
																"nativeSrc": "12771:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12771:37:13"
															},
															"nativeSrc": "12771:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "12771:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "12706:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12749:5:13",
														"nodeType": "YulTypedName",
														"src": "12749:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12756:3:13",
														"nodeType": "YulTypedName",
														"src": "12756:3:13",
														"type": ""
													}
												],
												"src": "12706:108:13"
											},
											{
												"body": {
													"nativeSrc": "12900:99:13",
													"nodeType": "YulBlock",
													"src": "12900:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12944:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12944:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12952:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12952:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "12910:33:13",
																	"nodeType": "YulIdentifier",
																	"src": "12910:33:13"
																},
																"nativeSrc": "12910:46:13",
																"nodeType": "YulFunctionCall",
																"src": "12910:46:13"
															},
															"nativeSrc": "12910:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "12910:46:13"
														},
														{
															"nativeSrc": "12965:28:13",
															"nodeType": "YulAssignment",
															"src": "12965:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12983:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12988:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12988:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12979:3:13"
																},
																"nativeSrc": "12979:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12979:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "12965:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "12965:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "12820:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "12873:6:13",
														"nodeType": "YulTypedName",
														"src": "12873:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12881:3:13",
														"nodeType": "YulTypedName",
														"src": "12881:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "12889:10:13",
														"nodeType": "YulTypedName",
														"src": "12889:10:13",
														"type": ""
													}
												],
												"src": "12820:179:13"
											},
											{
												"body": {
													"nativeSrc": "13080:38:13",
													"nodeType": "YulBlock",
													"src": "13080:38:13",
													"statements": [
														{
															"nativeSrc": "13090:22:13",
															"nodeType": "YulAssignment",
															"src": "13090:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13102:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13102:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13107:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13107:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13098:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13098:3:13"
																},
																"nativeSrc": "13098:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13098:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13090:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13090:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "13005:113:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13067:3:13",
														"nodeType": "YulTypedName",
														"src": "13067:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13075:4:13",
														"nodeType": "YulTypedName",
														"src": "13075:4:13",
														"type": ""
													}
												],
												"src": "13005:113:13"
											},
											{
												"body": {
													"nativeSrc": "13278:608:13",
													"nodeType": "YulBlock",
													"src": "13278:608:13",
													"statements": [
														{
															"nativeSrc": "13288:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13288:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13350:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13350:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "13302:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "13302:47:13"
																},
																"nativeSrc": "13302:54:13",
																"nodeType": "YulFunctionCall",
																"src": "13302:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13292:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13292:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13365:93:13",
															"nodeType": "YulAssignment",
															"src": "13365:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13446:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13446:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13451:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13451:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13372:73:13",
																	"nodeType": "YulIdentifier",
																	"src": "13372:73:13"
																},
																"nativeSrc": "13372:86:13",
																"nodeType": "YulFunctionCall",
																"src": "13372:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13365:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13365:3:13"
																}
															]
														},
														{
															"nativeSrc": "13467:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13467:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13532:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13532:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "13482:49:13",
																	"nodeType": "YulIdentifier",
																	"src": "13482:49:13"
																},
																"nativeSrc": "13482:56:13",
																"nodeType": "YulFunctionCall",
																"src": "13482:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "13471:7:13",
																	"nodeType": "YulTypedName",
																	"src": "13471:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13547:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13547:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "13561:7:13",
																"nodeType": "YulIdentifier",
																"src": "13561:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "13551:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13551:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13637:224:13",
																"nodeType": "YulBlock",
																"src": "13637:224:13",
																"statements": [
																	{
																		"nativeSrc": "13651:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13651:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13678:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13678:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13672:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13672:5:13"
																			},
																			"nativeSrc": "13672:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13672:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "13655:13:13",
																				"nodeType": "YulTypedName",
																				"src": "13655:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13698:70:13",
																		"nodeType": "YulAssignment",
																		"src": "13698:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "13749:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "13749:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "13764:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13764:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "13705:43:13",
																				"nodeType": "YulIdentifier",
																				"src": "13705:43:13"
																			},
																			"nativeSrc": "13705:63:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13705:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "13698:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13698:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13781:70:13",
																		"nodeType": "YulAssignment",
																		"src": "13781:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13844:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13844:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "13791:52:13",
																				"nodeType": "YulIdentifier",
																				"src": "13791:52:13"
																			},
																			"nativeSrc": "13791:60:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13791:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "13781:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13781:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13599:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13599:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13602:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13602:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13596:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13596:2:13"
																},
																"nativeSrc": "13596:13:13",
																"nodeType": "YulFunctionCall",
																"src": "13596:13:13"
															},
															"nativeSrc": "13577:284:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13610:18:13",
																"nodeType": "YulBlock",
																"src": "13610:18:13",
																"statements": [
																	{
																		"nativeSrc": "13612:14:13",
																		"nodeType": "YulAssignment",
																		"src": "13612:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13621:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "13621:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13624:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13624:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13617:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13617:3:13"
																			},
																			"nativeSrc": "13617:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13617:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13612:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "13612:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13581:14:13",
																"nodeType": "YulBlock",
																"src": "13581:14:13",
																"statements": [
																	{
																		"nativeSrc": "13583:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13583:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13592:1:13",
																			"nodeType": "YulLiteral",
																			"src": "13592:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "13587:1:13",
																				"nodeType": "YulTypedName",
																				"src": "13587:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13577:284:13"
														},
														{
															"nativeSrc": "13870:10:13",
															"nodeType": "YulAssignment",
															"src": "13870:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "13877:3:13",
																"nodeType": "YulIdentifier",
																"src": "13877:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13870:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13870:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13154:732:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13257:5:13",
														"nodeType": "YulTypedName",
														"src": "13257:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13264:3:13",
														"nodeType": "YulTypedName",
														"src": "13264:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13273:3:13",
														"nodeType": "YulTypedName",
														"src": "13273:3:13",
														"type": ""
													}
												],
												"src": "13154:732:13"
											},
											{
												"body": {
													"nativeSrc": "14040:225:13",
													"nodeType": "YulBlock",
													"src": "14040:225:13",
													"statements": [
														{
															"nativeSrc": "14050:26:13",
															"nodeType": "YulAssignment",
															"src": "14050:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14062:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14062:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14073:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14058:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:13"
																},
																"nativeSrc": "14058:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14058:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14050:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14050:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14097:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14097:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14108:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14108:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14093:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14093:3:13"
																		},
																		"nativeSrc": "14093:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14093:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14116:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14116:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14122:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14122:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14112:3:13"
																		},
																		"nativeSrc": "14112:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14112:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14086:6:13"
																},
																"nativeSrc": "14086:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14086:47:13"
															},
															"nativeSrc": "14086:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14086:47:13"
														},
														{
															"nativeSrc": "14142:116:13",
															"nodeType": "YulAssignment",
															"src": "14142:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14244:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14244:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14253:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14253:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14150:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "14150:93:13"
																},
																"nativeSrc": "14150:108:13",
																"nodeType": "YulFunctionCall",
																"src": "14150:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14142:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14142:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13892:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14012:9:13",
														"nodeType": "YulTypedName",
														"src": "14012:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14024:6:13",
														"nodeType": "YulTypedName",
														"src": "14024:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14035:4:13",
														"nodeType": "YulTypedName",
														"src": "14035:4:13",
														"type": ""
													}
												],
												"src": "13892:373:13"
											},
											{
												"body": {
													"nativeSrc": "14354:391:13",
													"nodeType": "YulBlock",
													"src": "14354:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14400:83:13",
																"nodeType": "YulBlock",
																"src": "14400:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14402:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "14402:77:13"
																			},
																			"nativeSrc": "14402:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14402:79:13"
																		},
																		"nativeSrc": "14402:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14402:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14375:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14375:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14384:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14384:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14371:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14371:3:13"
																		},
																		"nativeSrc": "14371:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14371:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14396:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14396:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14367:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14367:3:13"
																},
																"nativeSrc": "14367:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14367:32:13"
															},
															"nativeSrc": "14364:119:13",
															"nodeType": "YulIf",
															"src": "14364:119:13"
														},
														{
															"nativeSrc": "14493:117:13",
															"nodeType": "YulBlock",
															"src": "14493:117:13",
															"statements": [
																{
																	"nativeSrc": "14508:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14508:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14522:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14522:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14512:6:13",
																			"nodeType": "YulTypedName",
																			"src": "14512:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14537:63:13",
																	"nodeType": "YulAssignment",
																	"src": "14537:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14572:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "14572:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14583:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "14583:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14568:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14568:3:13"
																				},
																				"nativeSrc": "14568:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14568:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14592:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14592:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14547:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "14547:20:13"
																		},
																		"nativeSrc": "14547:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14547:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14537:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "14537:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14620:118:13",
															"nodeType": "YulBlock",
															"src": "14620:118:13",
															"statements": [
																{
																	"nativeSrc": "14635:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14635:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14649:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14649:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14639:6:13",
																			"nodeType": "YulTypedName",
																			"src": "14639:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14665:63:13",
																	"nodeType": "YulAssignment",
																	"src": "14665:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14700:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "14700:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14711:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "14711:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14696:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14696:3:13"
																				},
																				"nativeSrc": "14696:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14696:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14720:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14675:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "14675:20:13"
																		},
																		"nativeSrc": "14675:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14675:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14665:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "14665:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "14271:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14316:9:13",
														"nodeType": "YulTypedName",
														"src": "14316:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14327:7:13",
														"nodeType": "YulTypedName",
														"src": "14327:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14339:6:13",
														"nodeType": "YulTypedName",
														"src": "14339:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14347:6:13",
														"nodeType": "YulTypedName",
														"src": "14347:6:13",
														"type": ""
													}
												],
												"src": "14271:474:13"
											},
											{
												"body": {
													"nativeSrc": "14779:152:13",
													"nodeType": "YulBlock",
													"src": "14779:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14796:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14796:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14799:77:13",
																		"nodeType": "YulLiteral",
																		"src": "14799:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14789:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14789:6:13"
																},
																"nativeSrc": "14789:88:13",
																"nodeType": "YulFunctionCall",
																"src": "14789:88:13"
															},
															"nativeSrc": "14789:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "14789:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14893:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14893:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14896:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14896:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14886:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14886:6:13"
																},
																"nativeSrc": "14886:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14886:15:13"
															},
															"nativeSrc": "14886:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14886:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14917:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14917:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14920:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14920:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14910:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14910:6:13"
																},
																"nativeSrc": "14910:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14910:15:13"
															},
															"nativeSrc": "14910:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14910:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14751:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14751:180:13"
											},
											{
												"body": {
													"nativeSrc": "14988:269:13",
													"nodeType": "YulBlock",
													"src": "14988:269:13",
													"statements": [
														{
															"nativeSrc": "14998:22:13",
															"nodeType": "YulAssignment",
															"src": "14998:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15012:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15012:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15018:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15018:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15008:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15008:3:13"
																},
																"nativeSrc": "15008:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15008:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14998:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14998:6:13"
																}
															]
														},
														{
															"nativeSrc": "15029:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15029:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15059:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15059:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15065:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15065:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15055:3:13"
																},
																"nativeSrc": "15055:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15055:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "15033:18:13",
																	"nodeType": "YulTypedName",
																	"src": "15033:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15106:51:13",
																"nodeType": "YulBlock",
																"src": "15106:51:13",
																"statements": [
																	{
																		"nativeSrc": "15120:27:13",
																		"nodeType": "YulAssignment",
																		"src": "15120:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "15134:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "15134:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15142:4:13",
																					"nodeType": "YulLiteral",
																					"src": "15142:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15130:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15130:3:13"
																			},
																			"nativeSrc": "15130:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15130:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "15120:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15120:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15086:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "15086:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15079:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15079:6:13"
																},
																"nativeSrc": "15079:26:13",
																"nodeType": "YulFunctionCall",
																"src": "15079:26:13"
															},
															"nativeSrc": "15076:81:13",
															"nodeType": "YulIf",
															"src": "15076:81:13"
														},
														{
															"body": {
																"nativeSrc": "15209:42:13",
																"nodeType": "YulBlock",
																"src": "15209:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15223:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15223:16:13"
																			},
																			"nativeSrc": "15223:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15223:18:13"
																		},
																		"nativeSrc": "15223:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15223:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15173:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "15173:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15196:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15196:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15204:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15204:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "15193:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "15193:2:13"
																		},
																		"nativeSrc": "15193:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15193:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15170:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15170:2:13"
																},
																"nativeSrc": "15170:38:13",
																"nodeType": "YulFunctionCall",
																"src": "15170:38:13"
															},
															"nativeSrc": "15167:84:13",
															"nodeType": "YulIf",
															"src": "15167:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14937:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14972:4:13",
														"nodeType": "YulTypedName",
														"src": "14972:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14981:6:13",
														"nodeType": "YulTypedName",
														"src": "14981:6:13",
														"type": ""
													}
												],
												"src": "14937:320:13"
											},
											{
												"body": {
													"nativeSrc": "15417:288:13",
													"nodeType": "YulBlock",
													"src": "15417:288:13",
													"statements": [
														{
															"nativeSrc": "15427:26:13",
															"nodeType": "YulAssignment",
															"src": "15427:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15439:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15439:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15450:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15450:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15435:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15435:3:13"
																},
																"nativeSrc": "15435:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15435:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15427:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15427:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15507:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15507:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15520:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15520:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15531:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15531:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15516:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15516:3:13"
																		},
																		"nativeSrc": "15516:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15516:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15463:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15463:43:13"
																},
																"nativeSrc": "15463:71:13",
																"nodeType": "YulFunctionCall",
																"src": "15463:71:13"
															},
															"nativeSrc": "15463:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "15463:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15588:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15588:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15601:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15601:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15612:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15612:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15597:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:13"
																		},
																		"nativeSrc": "15597:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15597:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15544:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15544:43:13"
																},
																"nativeSrc": "15544:72:13",
																"nodeType": "YulFunctionCall",
																"src": "15544:72:13"
															},
															"nativeSrc": "15544:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "15544:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15670:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15683:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15683:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15694:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15694:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15679:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15679:3:13"
																		},
																		"nativeSrc": "15679:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15679:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15626:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15626:43:13"
																},
																"nativeSrc": "15626:72:13",
																"nodeType": "YulFunctionCall",
																"src": "15626:72:13"
															},
															"nativeSrc": "15626:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "15626:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "15263:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15373:9:13",
														"nodeType": "YulTypedName",
														"src": "15373:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15385:6:13",
														"nodeType": "YulTypedName",
														"src": "15385:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15393:6:13",
														"nodeType": "YulTypedName",
														"src": "15393:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15401:6:13",
														"nodeType": "YulTypedName",
														"src": "15401:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15412:4:13",
														"nodeType": "YulTypedName",
														"src": "15412:4:13",
														"type": ""
													}
												],
												"src": "15263:442:13"
											},
											{
												"body": {
													"nativeSrc": "15739:152:13",
													"nodeType": "YulBlock",
													"src": "15739:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15756:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15756:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15759:77:13",
																		"nodeType": "YulLiteral",
																		"src": "15759:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15749:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15749:6:13"
																},
																"nativeSrc": "15749:88:13",
																"nodeType": "YulFunctionCall",
																"src": "15749:88:13"
															},
															"nativeSrc": "15749:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "15749:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15853:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15853:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15856:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15856:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15846:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15846:6:13"
																},
																"nativeSrc": "15846:15:13",
																"nodeType": "YulFunctionCall",
																"src": "15846:15:13"
															},
															"nativeSrc": "15846:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "15846:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15877:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15877:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15880:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15880:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15870:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15870:6:13"
																},
																"nativeSrc": "15870:15:13",
																"nodeType": "YulFunctionCall",
																"src": "15870:15:13"
															},
															"nativeSrc": "15870:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "15870:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15711:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "15711:180:13"
											},
											{
												"body": {
													"nativeSrc": "15941:147:13",
													"nodeType": "YulBlock",
													"src": "15941:147:13",
													"statements": [
														{
															"nativeSrc": "15951:25:13",
															"nodeType": "YulAssignment",
															"src": "15951:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15974:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15974:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15956:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15956:17:13"
																},
																"nativeSrc": "15956:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15956:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15951:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15951:1:13"
																}
															]
														},
														{
															"nativeSrc": "15985:25:13",
															"nodeType": "YulAssignment",
															"src": "15985:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16008:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16008:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15990:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15990:17:13"
																},
																"nativeSrc": "15990:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15990:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15985:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15985:1:13"
																}
															]
														},
														{
															"nativeSrc": "16019:16:13",
															"nodeType": "YulAssignment",
															"src": "16019:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16030:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16030:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16033:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16033:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16026:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16026:3:13"
																},
																"nativeSrc": "16026:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16026:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16019:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16019:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16059:22:13",
																"nodeType": "YulBlock",
																"src": "16059:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16061:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16061:16:13"
																			},
																			"nativeSrc": "16061:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16061:18:13"
																		},
																		"nativeSrc": "16061:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16061:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16051:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16051:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16054:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16054:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16048:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16048:2:13"
																},
																"nativeSrc": "16048:10:13",
																"nodeType": "YulFunctionCall",
																"src": "16048:10:13"
															},
															"nativeSrc": "16045:36:13",
															"nodeType": "YulIf",
															"src": "16045:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15897:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15928:1:13",
														"nodeType": "YulTypedName",
														"src": "15928:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15931:1:13",
														"nodeType": "YulTypedName",
														"src": "15931:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15937:3:13",
														"nodeType": "YulTypedName",
														"src": "15937:3:13",
														"type": ""
													}
												],
												"src": "15897:191:13"
											},
											{
												"body": {
													"nativeSrc": "16122:152:13",
													"nodeType": "YulBlock",
													"src": "16122:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16139:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16139:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16142:77:13",
																		"nodeType": "YulLiteral",
																		"src": "16142:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16132:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16132:6:13"
																},
																"nativeSrc": "16132:88:13",
																"nodeType": "YulFunctionCall",
																"src": "16132:88:13"
															},
															"nativeSrc": "16132:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "16132:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16236:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16236:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16239:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16239:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16229:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16229:6:13"
																},
																"nativeSrc": "16229:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16229:15:13"
															},
															"nativeSrc": "16229:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16229:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16260:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16260:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16263:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16263:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16253:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16253:6:13"
																},
																"nativeSrc": "16253:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16253:15:13"
															},
															"nativeSrc": "16253:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16253:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16094:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "16094:180:13"
											},
											{
												"body": {
													"nativeSrc": "16386:66:13",
													"nodeType": "YulBlock",
													"src": "16386:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16408:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16408:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16416:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16416:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16404:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16404:3:13"
																		},
																		"nativeSrc": "16404:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16404:14:13"
																	},
																	{
																		"hexValue": "4164647265737320616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "16420:24:13",
																		"nodeType": "YulLiteral",
																		"src": "16420:24:13",
																		"type": "",
																		"value": "Address already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16397:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16397:6:13"
																},
																"nativeSrc": "16397:48:13",
																"nodeType": "YulFunctionCall",
																"src": "16397:48:13"
															},
															"nativeSrc": "16397:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "16397:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0",
												"nativeSrc": "16280:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16378:6:13",
														"nodeType": "YulTypedName",
														"src": "16378:6:13",
														"type": ""
													}
												],
												"src": "16280:172:13"
											},
											{
												"body": {
													"nativeSrc": "16604:220:13",
													"nodeType": "YulBlock",
													"src": "16604:220:13",
													"statements": [
														{
															"nativeSrc": "16614:74:13",
															"nodeType": "YulAssignment",
															"src": "16614:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16680:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16680:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16685:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16685:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16621:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16621:58:13"
																},
																"nativeSrc": "16621:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16621:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16614:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16614:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16786:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16786:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0",
																	"nativeSrc": "16697:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16697:88:13"
																},
																"nativeSrc": "16697:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16697:93:13"
															},
															"nativeSrc": "16697:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16697:93:13"
														},
														{
															"nativeSrc": "16799:19:13",
															"nodeType": "YulAssignment",
															"src": "16799:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16810:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16810:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16815:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16815:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16806:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16806:3:13"
																},
																"nativeSrc": "16806:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16806:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16799:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16799:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16458:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16592:3:13",
														"nodeType": "YulTypedName",
														"src": "16592:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16600:3:13",
														"nodeType": "YulTypedName",
														"src": "16600:3:13",
														"type": ""
													}
												],
												"src": "16458:366:13"
											},
											{
												"body": {
													"nativeSrc": "17001:248:13",
													"nodeType": "YulBlock",
													"src": "17001:248:13",
													"statements": [
														{
															"nativeSrc": "17011:26:13",
															"nodeType": "YulAssignment",
															"src": "17011:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17023:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17023:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17034:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17034:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17019:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17019:3:13"
																},
																"nativeSrc": "17019:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17019:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17011:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17011:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17058:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17058:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17069:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17069:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17054:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17054:3:13"
																		},
																		"nativeSrc": "17054:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17054:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17077:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17077:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17083:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17083:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17073:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17073:3:13"
																		},
																		"nativeSrc": "17073:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17073:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17047:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17047:6:13"
																},
																"nativeSrc": "17047:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17047:47:13"
															},
															"nativeSrc": "17047:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17047:47:13"
														},
														{
															"nativeSrc": "17103:139:13",
															"nodeType": "YulAssignment",
															"src": "17103:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17237:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17237:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17111:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17111:124:13"
																},
																"nativeSrc": "17111:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17111:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17103:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17103:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16830:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16981:9:13",
														"nodeType": "YulTypedName",
														"src": "16981:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16996:4:13",
														"nodeType": "YulTypedName",
														"src": "16996:4:13",
														"type": ""
													}
												],
												"src": "16830:419:13"
											},
											{
												"body": {
													"nativeSrc": "17298:190:13",
													"nodeType": "YulBlock",
													"src": "17298:190:13",
													"statements": [
														{
															"nativeSrc": "17308:33:13",
															"nodeType": "YulAssignment",
															"src": "17308:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17335:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17335:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17317:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17317:17:13"
																},
																"nativeSrc": "17317:24:13",
																"nodeType": "YulFunctionCall",
																"src": "17317:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17308:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17308:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17431:22:13",
																"nodeType": "YulBlock",
																"src": "17431:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17433:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "17433:16:13"
																			},
																			"nativeSrc": "17433:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17433:18:13"
																		},
																		"nativeSrc": "17433:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17433:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17356:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17356:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17363:66:13",
																		"nodeType": "YulLiteral",
																		"src": "17363:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17353:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17353:2:13"
																},
																"nativeSrc": "17353:77:13",
																"nodeType": "YulFunctionCall",
																"src": "17353:77:13"
															},
															"nativeSrc": "17350:103:13",
															"nodeType": "YulIf",
															"src": "17350:103:13"
														},
														{
															"nativeSrc": "17462:20:13",
															"nodeType": "YulAssignment",
															"src": "17462:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17473:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17473:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17480:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17480:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17469:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17469:3:13"
																},
																"nativeSrc": "17469:13:13",
																"nodeType": "YulFunctionCall",
																"src": "17469:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17462:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17462:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17255:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17284:5:13",
														"nodeType": "YulTypedName",
														"src": "17284:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17294:3:13",
														"nodeType": "YulTypedName",
														"src": "17294:3:13",
														"type": ""
													}
												],
												"src": "17255:233:13"
											},
											{
												"body": {
													"nativeSrc": "17608:34:13",
													"nodeType": "YulBlock",
													"src": "17608:34:13",
													"statements": [
														{
															"nativeSrc": "17618:18:13",
															"nodeType": "YulAssignment",
															"src": "17618:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "17633:3:13",
																"nodeType": "YulIdentifier",
																"src": "17633:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17618:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "17618:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17494:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17580:3:13",
														"nodeType": "YulTypedName",
														"src": "17580:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17585:6:13",
														"nodeType": "YulTypedName",
														"src": "17585:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17596:11:13",
														"nodeType": "YulTypedName",
														"src": "17596:11:13",
														"type": ""
													}
												],
												"src": "17494:148:13"
											},
											{
												"body": {
													"nativeSrc": "17758:280:13",
													"nodeType": "YulBlock",
													"src": "17758:280:13",
													"statements": [
														{
															"nativeSrc": "17768:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17768:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17815:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17815:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17782:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "17782:32:13"
																},
																"nativeSrc": "17782:39:13",
																"nodeType": "YulFunctionCall",
																"src": "17782:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17772:6:13",
																	"nodeType": "YulTypedName",
																	"src": "17772:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17830:96:13",
															"nodeType": "YulAssignment",
															"src": "17830:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17914:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17914:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17919:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17919:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17837:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "17837:76:13"
																},
																"nativeSrc": "17837:89:13",
																"nodeType": "YulFunctionCall",
																"src": "17837:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17830:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17830:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17974:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17974:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17981:4:13",
																				"nodeType": "YulLiteral",
																				"src": "17981:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17970:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17970:3:13"
																		},
																		"nativeSrc": "17970:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17970:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17988:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17988:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17993:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17993:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "17935:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "17935:34:13"
																},
																"nativeSrc": "17935:65:13",
																"nodeType": "YulFunctionCall",
																"src": "17935:65:13"
															},
															"nativeSrc": "17935:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "17935:65:13"
														},
														{
															"nativeSrc": "18009:23:13",
															"nodeType": "YulAssignment",
															"src": "18009:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18020:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18020:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18025:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18025:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18016:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18016:3:13"
																},
																"nativeSrc": "18016:16:13",
																"nodeType": "YulFunctionCall",
																"src": "18016:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18009:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18009:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17648:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17739:5:13",
														"nodeType": "YulTypedName",
														"src": "17739:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17746:3:13",
														"nodeType": "YulTypedName",
														"src": "17746:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17754:3:13",
														"nodeType": "YulTypedName",
														"src": "17754:3:13",
														"type": ""
													}
												],
												"src": "17648:390:13"
											},
											{
												"body": {
													"nativeSrc": "18228:251:13",
													"nodeType": "YulBlock",
													"src": "18228:251:13",
													"statements": [
														{
															"nativeSrc": "18239:102:13",
															"nodeType": "YulAssignment",
															"src": "18239:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18328:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18328:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18337:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18337:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18246:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "18246:81:13"
																},
																"nativeSrc": "18246:95:13",
																"nodeType": "YulFunctionCall",
																"src": "18246:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18239:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18239:3:13"
																}
															]
														},
														{
															"nativeSrc": "18351:102:13",
															"nodeType": "YulAssignment",
															"src": "18351:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18440:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18449:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18449:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18358:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "18358:81:13"
																},
																"nativeSrc": "18358:95:13",
																"nodeType": "YulFunctionCall",
																"src": "18358:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18351:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18351:3:13"
																}
															]
														},
														{
															"nativeSrc": "18463:10:13",
															"nodeType": "YulAssignment",
															"src": "18463:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "18470:3:13",
																"nodeType": "YulIdentifier",
																"src": "18470:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18463:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18463:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18044:435:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18199:3:13",
														"nodeType": "YulTypedName",
														"src": "18199:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18205:6:13",
														"nodeType": "YulTypedName",
														"src": "18205:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18213:6:13",
														"nodeType": "YulTypedName",
														"src": "18213:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18224:3:13",
														"nodeType": "YulTypedName",
														"src": "18224:3:13",
														"type": ""
													}
												],
												"src": "18044:435:13"
											},
											{
												"body": {
													"nativeSrc": "18543:40:13",
													"nodeType": "YulBlock",
													"src": "18543:40:13",
													"statements": [
														{
															"nativeSrc": "18554:22:13",
															"nodeType": "YulAssignment",
															"src": "18554:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18570:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18570:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18564:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18564:5:13"
																},
																"nativeSrc": "18564:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18564:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18554:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18554:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18485:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18526:5:13",
														"nodeType": "YulTypedName",
														"src": "18526:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18536:6:13",
														"nodeType": "YulTypedName",
														"src": "18536:6:13",
														"type": ""
													}
												],
												"src": "18485:98:13"
											},
											{
												"body": {
													"nativeSrc": "18684:73:13",
													"nodeType": "YulBlock",
													"src": "18684:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18701:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18701:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18706:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18706:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18694:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18694:6:13"
																},
																"nativeSrc": "18694:19:13",
																"nodeType": "YulFunctionCall",
																"src": "18694:19:13"
															},
															"nativeSrc": "18694:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "18694:19:13"
														},
														{
															"nativeSrc": "18722:29:13",
															"nodeType": "YulAssignment",
															"src": "18722:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18741:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18741:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18746:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18746:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18737:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18737:3:13"
																},
																"nativeSrc": "18737:14:13",
																"nodeType": "YulFunctionCall",
																"src": "18737:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18722:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "18722:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18589:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18656:3:13",
														"nodeType": "YulTypedName",
														"src": "18656:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18661:6:13",
														"nodeType": "YulTypedName",
														"src": "18661:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18672:11:13",
														"nodeType": "YulTypedName",
														"src": "18672:11:13",
														"type": ""
													}
												],
												"src": "18589:168:13"
											},
											{
												"body": {
													"nativeSrc": "18853:283:13",
													"nodeType": "YulBlock",
													"src": "18853:283:13",
													"statements": [
														{
															"nativeSrc": "18863:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18863:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18909:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18909:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18877:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "18877:31:13"
																},
																"nativeSrc": "18877:38:13",
																"nodeType": "YulFunctionCall",
																"src": "18877:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18867:6:13",
																	"nodeType": "YulTypedName",
																	"src": "18867:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18924:77:13",
															"nodeType": "YulAssignment",
															"src": "18924:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18989:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18989:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18994:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18994:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18931:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "18931:57:13"
																},
																"nativeSrc": "18931:70:13",
																"nodeType": "YulFunctionCall",
																"src": "18931:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18924:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18924:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19049:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19049:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19056:4:13",
																				"nodeType": "YulLiteral",
																				"src": "19056:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19045:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19045:3:13"
																		},
																		"nativeSrc": "19045:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19045:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19063:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19063:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19068:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19068:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19010:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "19010:34:13"
																},
																"nativeSrc": "19010:65:13",
																"nodeType": "YulFunctionCall",
																"src": "19010:65:13"
															},
															"nativeSrc": "19010:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "19010:65:13"
														},
														{
															"nativeSrc": "19084:46:13",
															"nodeType": "YulAssignment",
															"src": "19084:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19095:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19095:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19122:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19122:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19100:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "19100:21:13"
																		},
																		"nativeSrc": "19100:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19100:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19091:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19091:3:13"
																},
																"nativeSrc": "19091:39:13",
																"nodeType": "YulFunctionCall",
																"src": "19091:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19084:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19084:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18763:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18834:5:13",
														"nodeType": "YulTypedName",
														"src": "18834:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18841:3:13",
														"nodeType": "YulTypedName",
														"src": "18841:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18849:3:13",
														"nodeType": "YulTypedName",
														"src": "18849:3:13",
														"type": ""
													}
												],
												"src": "18763:373:13"
											},
											{
												"body": {
													"nativeSrc": "19342:440:13",
													"nodeType": "YulBlock",
													"src": "19342:440:13",
													"statements": [
														{
															"nativeSrc": "19352:27:13",
															"nodeType": "YulAssignment",
															"src": "19352:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19364:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19364:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19375:3:13",
																		"nodeType": "YulLiteral",
																		"src": "19375:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19360:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19360:3:13"
																},
																"nativeSrc": "19360:19:13",
																"nodeType": "YulFunctionCall",
																"src": "19360:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19352:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19352:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19433:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19433:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19446:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19446:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19457:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19457:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19442:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19442:3:13"
																		},
																		"nativeSrc": "19442:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19442:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19389:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19389:43:13"
																},
																"nativeSrc": "19389:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19389:71:13"
															},
															"nativeSrc": "19389:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19389:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19514:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19514:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19527:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19527:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19538:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19538:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19523:3:13"
																		},
																		"nativeSrc": "19523:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19523:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19470:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19470:43:13"
																},
																"nativeSrc": "19470:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19470:72:13"
															},
															"nativeSrc": "19470:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19470:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19596:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19596:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19620:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19620:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19605:3:13"
																		},
																		"nativeSrc": "19605:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19605:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19552:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19552:43:13"
																},
																"nativeSrc": "19552:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19552:72:13"
															},
															"nativeSrc": "19552:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19552:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19645:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19645:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19656:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19656:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19641:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19641:3:13"
																		},
																		"nativeSrc": "19641:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19641:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19665:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19665:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19671:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19671:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19661:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19661:3:13"
																		},
																		"nativeSrc": "19661:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19661:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19634:6:13"
																},
																"nativeSrc": "19634:48:13",
																"nodeType": "YulFunctionCall",
																"src": "19634:48:13"
															},
															"nativeSrc": "19634:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "19634:48:13"
														},
														{
															"nativeSrc": "19691:84:13",
															"nodeType": "YulAssignment",
															"src": "19691:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19761:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19761:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19770:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19770:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19699:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "19699:61:13"
																},
																"nativeSrc": "19699:76:13",
																"nodeType": "YulFunctionCall",
																"src": "19699:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19691:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19691:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19142:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19290:9:13",
														"nodeType": "YulTypedName",
														"src": "19290:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19302:6:13",
														"nodeType": "YulTypedName",
														"src": "19302:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19310:6:13",
														"nodeType": "YulTypedName",
														"src": "19310:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19318:6:13",
														"nodeType": "YulTypedName",
														"src": "19318:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19326:6:13",
														"nodeType": "YulTypedName",
														"src": "19326:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19337:4:13",
														"nodeType": "YulTypedName",
														"src": "19337:4:13",
														"type": ""
													}
												],
												"src": "19142:640:13"
											},
											{
												"body": {
													"nativeSrc": "19850:79:13",
													"nodeType": "YulBlock",
													"src": "19850:79:13",
													"statements": [
														{
															"nativeSrc": "19860:22:13",
															"nodeType": "YulAssignment",
															"src": "19860:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19875:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19875:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19869:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19869:5:13"
																},
																"nativeSrc": "19869:13:13",
																"nodeType": "YulFunctionCall",
																"src": "19869:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19860:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19860:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19917:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19917:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "19891:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "19891:25:13"
																},
																"nativeSrc": "19891:32:13",
																"nodeType": "YulFunctionCall",
																"src": "19891:32:13"
															},
															"nativeSrc": "19891:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "19891:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "19788:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19828:6:13",
														"nodeType": "YulTypedName",
														"src": "19828:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19836:3:13",
														"nodeType": "YulTypedName",
														"src": "19836:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19844:5:13",
														"nodeType": "YulTypedName",
														"src": "19844:5:13",
														"type": ""
													}
												],
												"src": "19788:141:13"
											},
											{
												"body": {
													"nativeSrc": "20011:273:13",
													"nodeType": "YulBlock",
													"src": "20011:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20057:83:13",
																"nodeType": "YulBlock",
																"src": "20057:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20059:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "20059:77:13"
																			},
																			"nativeSrc": "20059:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20059:79:13"
																		},
																		"nativeSrc": "20059:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20059:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20032:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20032:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20041:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20041:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20028:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20028:3:13"
																		},
																		"nativeSrc": "20028:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20028:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20053:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20053:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20024:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20024:3:13"
																},
																"nativeSrc": "20024:32:13",
																"nodeType": "YulFunctionCall",
																"src": "20024:32:13"
															},
															"nativeSrc": "20021:119:13",
															"nodeType": "YulIf",
															"src": "20021:119:13"
														},
														{
															"nativeSrc": "20150:127:13",
															"nodeType": "YulBlock",
															"src": "20150:127:13",
															"statements": [
																{
																	"nativeSrc": "20165:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20165:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20179:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20179:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20169:6:13",
																			"nodeType": "YulTypedName",
																			"src": "20169:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20194:73:13",
																	"nodeType": "YulAssignment",
																	"src": "20194:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20239:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "20239:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20250:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20250:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20235:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "20235:3:13"
																				},
																				"nativeSrc": "20235:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20235:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20259:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20259:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20204:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "20204:30:13"
																		},
																		"nativeSrc": "20204:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20204:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "20194:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "19935:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19981:9:13",
														"nodeType": "YulTypedName",
														"src": "19981:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19992:7:13",
														"nodeType": "YulTypedName",
														"src": "19992:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20004:6:13",
														"nodeType": "YulTypedName",
														"src": "20004:6:13",
														"type": ""
													}
												],
												"src": "19935:349:13"
											},
											{
												"body": {
													"nativeSrc": "20318:152:13",
													"nodeType": "YulBlock",
													"src": "20318:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20335:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20335:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20338:77:13",
																		"nodeType": "YulLiteral",
																		"src": "20338:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20328:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20328:6:13"
																},
																"nativeSrc": "20328:88:13",
																"nodeType": "YulFunctionCall",
																"src": "20328:88:13"
															},
															"nativeSrc": "20328:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "20328:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20432:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20432:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20435:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20435:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20425:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20425:6:13"
																},
																"nativeSrc": "20425:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20425:15:13"
															},
															"nativeSrc": "20425:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20425:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20456:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20456:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20459:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20459:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20449:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20449:6:13"
																},
																"nativeSrc": "20449:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20449:15:13"
															},
															"nativeSrc": "20449:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20449:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20290:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "20290:180:13"
											},
											{
												"body": {
													"nativeSrc": "20602:206:13",
													"nodeType": "YulBlock",
													"src": "20602:206:13",
													"statements": [
														{
															"nativeSrc": "20612:26:13",
															"nodeType": "YulAssignment",
															"src": "20612:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20624:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20624:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20635:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20635:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20620:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20620:3:13"
																},
																"nativeSrc": "20620:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20620:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20612:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20612:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20692:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20692:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20705:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20705:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20716:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20716:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20701:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20701:3:13"
																		},
																		"nativeSrc": "20701:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20701:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20648:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20648:43:13"
																},
																"nativeSrc": "20648:71:13",
																"nodeType": "YulFunctionCall",
																"src": "20648:71:13"
															},
															"nativeSrc": "20648:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "20648:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20773:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20773:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20786:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20797:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20797:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20782:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20782:3:13"
																		},
																		"nativeSrc": "20782:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20782:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20729:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20729:43:13"
																},
																"nativeSrc": "20729:72:13",
																"nodeType": "YulFunctionCall",
																"src": "20729:72:13"
															},
															"nativeSrc": "20729:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "20729:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20476:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20566:9:13",
														"nodeType": "YulTypedName",
														"src": "20566:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20578:6:13",
														"nodeType": "YulTypedName",
														"src": "20578:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20586:6:13",
														"nodeType": "YulTypedName",
														"src": "20586:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20597:4:13",
														"nodeType": "YulTypedName",
														"src": "20597:4:13",
														"type": ""
													}
												],
												"src": "20476:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bool_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bool_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bool_to_t_bool(value0, pos) -> updatedPos {\n        abi_encode_t_bool_to_t_bool(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bool_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bool[] -> bool[]\n    function abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bool_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bool_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bool_to_t_bool(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bool_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610171575f3560e01c80638da5cb5b116100dc578063b88d4fde11610095578063cfad52771161006f578063cfad52771461046b578063e985e9c514610489578063f2fde38b146104b9578063fec2b9ee146104d557610171565b8063b88d4fde146103ef578063c87b56dd1461040b578063cf5f19d31461043b57610171565b80638da5cb5b146103195780639516a1041461033757806395d89b4114610355578063a22cb46514610373578063a50252221461038f578063b0141b14146103bf57610171565b806342842e0e1161012e57806342842e0e1461025b57806360e564f6146102775780636352211e146102935780636ea2351a146102c357806370a08231146102df578063715018a61461030f57610171565b806301ffc9a71461017557806306fdde03146101a5578063081812fc146101c3578063095ea7b3146101f357806323b872dd1461020f5780632f233b731461022b575b5f80fd5b61018f600480360381019061018a9190611f7a565b610505565b60405161019c9190611fbf565b60405180910390f35b6101ad6105e6565b6040516101ba9190612062565b60405180910390f35b6101dd60048036038101906101d891906120b5565b610675565b6040516101ea919061211f565b60405180910390f35b61020d60048036038101906102089190612162565b610690565b005b610229600480360381019061022491906121a0565b6106a6565b005b610245600480360381019061024091906120b5565b6107a5565b60405161025291906121ff565b60405180910390f35b610275600480360381019061027091906121a0565b6107c5565b005b610291600480360381019061028c9190612242565b6107e4565b005b6102ad60048036038101906102a891906120b5565b6108c6565b6040516102ba919061211f565b60405180910390f35b6102dd60048036038101906102d89190612242565b6108d7565b005b6102f960048036038101906102f4919061226d565b610aa0565b60405161030691906121ff565b60405180910390f35b610317610b56565b005b610321610b69565b60405161032e919061211f565b60405180910390f35b61033f610b91565b60405161034c919061234f565b60405180910390f35b61035d610c68565b60405161036a9190612062565b60405180910390f35b61038d6004803603810190610388919061236f565b610cf8565b005b6103a960048036038101906103a4919061226d565b610d0e565b6040516103b69190611fbf565b60405180910390f35b6103d960048036038101906103d491906120b5565b610d2b565b6040516103e69190611fbf565b60405180910390f35b610409600480360381019061040491906124d9565b610d51565b005b610425600480360381019061042091906120b5565b610d6e565b6040516104329190612062565b60405180910390f35b61045560048036038101906104509190612242565b610dd4565b6040516104629190612610565b60405180910390f35b610473610f0c565b60405161048091906121ff565b60405180910390f35b6104a3600480360381019061049e9190612630565b610f12565b6040516104b09190611fbf565b60405180910390f35b6104d360048036038101906104ce919061226d565b610fa0565b005b6104ef60048036038101906104ea91906120b5565b611024565b6040516104fc9190611fbf565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105cf57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105df57506105de8261104a565b5b9050919050565b60605f80546105f49061269b565b80601f01602080910402602001604051908101604052809291908181526020018280546106209061269b565b801561066b5780601f106106425761010080835404028352916020019161066b565b820191905f5260205f20905b81548152906001019060200180831161064e57829003601f168201915b5050505050905090565b5f61067f826110b3565b5061068982611139565b9050919050565b6106a2828261069d611172565b611179565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610716575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161070d919061211f565b60405180910390fd5b5f6107298383610724611172565b61118b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079f578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610796939291906126cb565b60405180910390fd5b50505050565b600c81815481106107b4575f80fd5b905f5260205f20015f915090505481565b6107df83838360405180602001604052805f815250610d51565b505050565b5f6107ee82610dd4565b90505f5b81518110156108a8575f8160075461080a919061272d565b905061083083838151811061082257610821612760565b5b602002602001015182611396565b82828151811061084357610842612760565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16817fcc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d340060016040516108929190611fbf565b60405180910390a35080806001019150506107f2565b50805160075f8282546108bb919061272d565b925050819055505050565b5f6108d0826110b3565b9050919050565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610961576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610958906127d7565b60405180910390fd5b5f6007549050600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600c81908060018154018082558091505060019003905f5260205f20015f90919091909150555f604051806020016040528084151581525090508083610a0357600b610a06565b600a5b5f8481526020019081526020015f205f820151815f015f6101000a81548160ff02191690831515021790555090505060075f815480929190610a47906127f5565b91905055503373ffffffffffffffffffffffffffffffffffffffff16827fcc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d340085604051610a939190611fbf565b60405180910390a3505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b11575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610b08919061211f565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b5e611489565b610b675f611510565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60605f60075467ffffffffffffffff811115610bb057610baf6123b5565b5b604051908082528060200260200182016040528015610bde5781602001602082028036833780820191505090505b5090505f600a90505f5b600754811015610c5f57815f600c8381548110610c0857610c07612760565b5b905f5260205f20015481526020019081526020015f205f015f9054906101000a900460ff16838281518110610c4057610c3f612760565b5b6020026020010190151590811515815250508080600101915050610be8565b50819250505090565b606060018054610c779061269b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca39061269b565b8015610cee5780601f10610cc557610100808354040283529160200191610cee565b820191905f5260205f20905b815481529060010190602001808311610cd157829003601f168201915b5050505050905090565b610d0a610d03611172565b83836115d3565b5050565b6009602052805f5260405f205f915054906101000a900460ff1681565b600a602052805f5260405f205f91509050805f015f9054906101000a900460ff16905081565b610d5c8484846106a6565b610d688484848461173c565b50505050565b6060610d79826110b3565b505f610d836118ee565b90505f815111610da15760405180602001604052805f815250610dcc565b80610dab8461197e565b604051602001610dbc929190612876565b6040516020818303038152906040525b915050919050565b60605f60075467ffffffffffffffff811115610df357610df26123b5565b5b604051908082528060200260200182016040528015610e215781602001602082028036833780820191505090505b5090505f8084610e3257600b610e35565b600a5b90505f5b600754811015610efd575f600c8281548110610e5857610e57612760565b5b905f5260205f2001549050861515835f8381526020019081526020015f205f015f9054906101000a900460ff16151503610eef57610e95816108c6565b858580610ea1906127f5565b965081518110610eb457610eb3612760565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b508080600101915050610e39565b50818352829350505050919050565b60075481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610fa8611489565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611018575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161100f919061211f565b60405180910390fd5b61102181611510565b50565b600b602052805f5260405f205f91509050805f015f9054906101000a900460ff16905081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f806110be83611a48565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361113057826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161112791906121ff565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111868383836001611a81565b505050565b5f8061119684611a48565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146111d7576111d6818486611c40565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611262576112165f855f80611a81565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146112e157600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611406575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113fd919061211f565b60405180910390fd5b5f61141283835f61118b565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611484575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161147b919061211f565b60405180910390fd5b505050565b611491611172565b73ffffffffffffffffffffffffffffffffffffffff166114af610b69565b73ffffffffffffffffffffffffffffffffffffffff161461150e576114d2611172565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611505919061211f565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361164357816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161163a919061211f565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161172f9190611fbf565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156118e8578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261177f611172565b8685856040518563ffffffff1660e01b81526004016117a194939291906128eb565b6020604051808303815f875af19250505080156117dc57506040513d601f19601f820116820180604052508101906117d99190612949565b60015b61185d573d805f811461180a576040519150601f19603f3d011682016040523d82523d5f602084013e61180f565b606091505b505f81510361185557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161184c919061211f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146118e657836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118dd919061211f565b60405180910390fd5b505b50505050565b6060600880546118fd9061269b565b80601f01602080910402602001604051908101604052809291908181526020018280546119299061269b565b80156119745780601f1061194b57610100808354040283529160200191611974565b820191905f5260205f20905b81548152906001019060200180831161195757829003601f168201915b5050505050905090565b60605f600161198c84611d03565b0190505f8167ffffffffffffffff8111156119aa576119a96123b5565b5b6040519080825280601f01601f1916602001820160405280156119dc5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611a3d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a3257611a31612974565b5b0494505f85036119e9575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611ab957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611beb575f611ac8846110b3565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b3257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611b455750611b438184610f12565b155b15611b8757826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611b7e919061211f565b60405180910390fd5b8115611be957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611c4b838383611e54565b611cfe575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cbf57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611cb691906121ff565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611cf59291906129a1565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d5f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d5557611d54612974565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611d9c576d04ee2d6d415b85acef81000000008381611d9257611d91612974565b5b0492506020810190505b662386f26fc100008310611dcb57662386f26fc100008381611dc157611dc0612974565b5b0492506010810190505b6305f5e1008310611df4576305f5e1008381611dea57611de9612974565b5b0492506008810190505b6127108310611e19576127108381611e0f57611e0e612974565b5b0492506004810190505b60648310611e3c5760648381611e3257611e31612974565b5b0492506002810190505b600a8310611e4b576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f0b57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ecc5750611ecb8484610f12565b5b80611f0a57508273ffffffffffffffffffffffffffffffffffffffff16611ef283611139565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f5981611f25565b8114611f63575f80fd5b50565b5f81359050611f7481611f50565b92915050565b5f60208284031215611f8f57611f8e611f1d565b5b5f611f9c84828501611f66565b91505092915050565b5f8115159050919050565b611fb981611fa5565b82525050565b5f602082019050611fd25f830184611fb0565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561200f578082015181840152602081019050611ff4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61203482611fd8565b61203e8185611fe2565b935061204e818560208601611ff2565b6120578161201a565b840191505092915050565b5f6020820190508181035f83015261207a818461202a565b905092915050565b5f819050919050565b61209481612082565b811461209e575f80fd5b50565b5f813590506120af8161208b565b92915050565b5f602082840312156120ca576120c9611f1d565b5b5f6120d7848285016120a1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612109826120e0565b9050919050565b612119816120ff565b82525050565b5f6020820190506121325f830184612110565b92915050565b612141816120ff565b811461214b575f80fd5b50565b5f8135905061215c81612138565b92915050565b5f806040838503121561217857612177611f1d565b5b5f6121858582860161214e565b9250506020612196858286016120a1565b9150509250929050565b5f805f606084860312156121b7576121b6611f1d565b5b5f6121c48682870161214e565b93505060206121d58682870161214e565b92505060406121e6868287016120a1565b9150509250925092565b6121f981612082565b82525050565b5f6020820190506122125f8301846121f0565b92915050565b61222181611fa5565b811461222b575f80fd5b50565b5f8135905061223c81612218565b92915050565b5f6020828403121561225757612256611f1d565b5b5f6122648482850161222e565b91505092915050565b5f6020828403121561228257612281611f1d565b5b5f61228f8482850161214e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6122ca81611fa5565b82525050565b5f6122db83836122c1565b60208301905092915050565b5f602082019050919050565b5f6122fd82612298565b61230781856122a2565b9350612312836122b2565b805f5b8381101561234257815161232988826122d0565b9750612334836122e7565b925050600181019050612315565b5085935050505092915050565b5f6020820190508181035f83015261236781846122f3565b905092915050565b5f806040838503121561238557612384611f1d565b5b5f6123928582860161214e565b92505060206123a38582860161222e565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6123eb8261201a565b810181811067ffffffffffffffff8211171561240a576124096123b5565b5b80604052505050565b5f61241c611f14565b905061242882826123e2565b919050565b5f67ffffffffffffffff821115612447576124466123b5565b5b6124508261201a565b9050602081019050919050565b828183375f83830152505050565b5f61247d6124788461242d565b612413565b905082815260208101848484011115612499576124986123b1565b5b6124a484828561245d565b509392505050565b5f82601f8301126124c0576124bf6123ad565b5b81356124d084826020860161246b565b91505092915050565b5f805f80608085870312156124f1576124f0611f1d565b5b5f6124fe8782880161214e565b945050602061250f8782880161214e565b9350506040612520878288016120a1565b925050606085013567ffffffffffffffff81111561254157612540611f21565b5b61254d878288016124ac565b91505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61258b816120ff565b82525050565b5f61259c8383612582565b60208301905092915050565b5f602082019050919050565b5f6125be82612559565b6125c88185612563565b93506125d383612573565b805f5b838110156126035781516125ea8882612591565b97506125f5836125a8565b9250506001810190506125d6565b5085935050505092915050565b5f6020820190508181035f83015261262881846125b4565b905092915050565b5f806040838503121561264657612645611f1d565b5b5f6126538582860161214e565b92505060206126648582860161214e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806126b257607f821691505b6020821081036126c5576126c461266e565b5b50919050565b5f6060820190506126de5f830186612110565b6126eb60208301856121f0565b6126f86040830184612110565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61273782612082565b915061274283612082565b925082820190508082111561275a57612759612700565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4164647265737320616c726561647920657869737473000000000000000000005f82015250565b5f6127c1601683611fe2565b91506127cc8261278d565b602082019050919050565b5f6020820190508181035f8301526127ee816127b5565b9050919050565b5f6127ff82612082565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361283157612830612700565b5b600182019050919050565b5f81905092915050565b5f61285082611fd8565b61285a818561283c565b935061286a818560208601611ff2565b80840191505092915050565b5f6128818285612846565b915061288d8284612846565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128bd82612899565b6128c781856128a3565b93506128d7818560208601611ff2565b6128e08161201a565b840191505092915050565b5f6080820190506128fe5f830187612110565b61290b6020830186612110565b61291860408301856121f0565b818103606083015261292a81846128b3565b905095945050505050565b5f8151905061294381611f50565b92915050565b5f6020828403121561295e5761295d611f1d565b5b5f61296b84828501612935565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506129b45f830185612110565b6129c160208301846121f0565b939250505056fea2646970667358221220d6aab86c192230581f8d7664ad57efc2ba131dc69b2203c64065f43206c58f5a64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCFAD5277 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCFAD5277 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xFEC2B9EE EQ PUSH2 0x4D5 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xCF5F19D3 EQ PUSH2 0x43B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x9516A104 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xA5025222 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xB0141B14 EQ PUSH2 0x3BF JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x60E564F6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x6EA2351A EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30F JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x2F233B73 EQ PUSH2 0x22B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH2 0xB56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x473 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x2630 JUMP JUMPDEST PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5CF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x5DF JUMPI POP PUSH2 0x5DE DUP3 PUSH2 0x104A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x620 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x642 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x67F DUP3 PUSH2 0x10B3 JUMP JUMPDEST POP PUSH2 0x689 DUP3 PUSH2 0x1139 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A2 DUP3 DUP3 PUSH2 0x69D PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x729 DUP4 DUP4 PUSH2 0x724 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79F JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x796 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7DF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xD51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7EE DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH0 DUP2 PUSH1 0x7 SLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST SWAP1 POP PUSH2 0x830 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x822 JUMPI PUSH2 0x821 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1396 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x843 JUMPI PUSH2 0x842 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xCC45E233B2A26479F10617BAB0F82A2B918C69827943F81CB847BD970A6D3400 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x892 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x7F2 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D0 DUP3 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x958 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP DUP1 DUP4 PUSH2 0xA03 JUMPI PUSH1 0xB PUSH2 0xA06 JUMP JUMPDEST PUSH1 0xA JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA47 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xCC45E233B2A26479F10617BAB0F82A2B918C69827943F81CB847BD970A6D3400 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5E PUSH2 0x1489 JUMP JUMPDEST PUSH2 0xB67 PUSH0 PUSH2 0x1510 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xBAF PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0xA SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI DUP2 PUSH0 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC08 JUMPI PUSH2 0xC07 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC40 JUMPI PUSH2 0xC3F PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBE8 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC77 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCA3 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCD1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD0A PUSH2 0xD03 PUSH2 0x1172 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x15D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xD5C DUP5 DUP5 DUP5 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0xD68 DUP5 DUP5 DUP5 DUP5 PUSH2 0x173C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD79 DUP3 PUSH2 0x10B3 JUMP JUMPDEST POP PUSH0 PUSH2 0xD83 PUSH2 0x18EE JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xDCC JUMP JUMPDEST DUP1 PUSH2 0xDAB DUP5 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBC SWAP3 SWAP2 SWAP1 PUSH2 0x2876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDF3 JUMPI PUSH2 0xDF2 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE21 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 DUP5 PUSH2 0xE32 JUMPI PUSH1 0xB PUSH2 0xE35 JUMP JUMPDEST PUSH1 0xA JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEFD JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP7 ISZERO ISZERO DUP4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0xEEF JUMPI PUSH2 0xE95 DUP2 PUSH2 0x8C6 JUMP JUMPDEST DUP6 DUP6 DUP1 PUSH2 0xEA1 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE39 JUMP JUMPDEST POP DUP2 DUP4 MSTORE DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA8 PUSH2 0x1489 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1018 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1021 DUP2 PUSH2 0x1510 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x10BE DUP4 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1130 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1127 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1186 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1196 DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D7 JUMPI PUSH2 0x11D6 DUP2 DUP5 DUP7 PUSH2 0x1C40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1262 JUMPI PUSH2 0x1216 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12E1 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1406 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1412 DUP4 DUP4 PUSH0 PUSH2 0x118B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1484 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1491 PUSH2 0x1172 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14AF PUSH2 0xB69 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150E JUMPI PUSH2 0x14D2 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1643 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163A SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x172F SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x18E8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x177F PUSH2 0x1172 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17DC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x185D JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x180A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x180F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1855 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184C SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x18E6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DD SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x18FD SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1929 SWAP1 PUSH2 0x269B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1974 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x194B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1974 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1957 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x198C DUP5 PUSH2 0x1D03 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19DC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A3D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x19E9 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1AB9 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1BEB JUMPI PUSH0 PUSH2 0x1AC8 DUP5 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B32 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B45 JUMPI POP PUSH2 0x1B43 DUP2 DUP5 PUSH2 0xF12 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1B87 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7E SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1BE9 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C4B DUP4 DUP4 DUP4 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x1CFE JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CBF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB6 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF5 SWAP3 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1D5F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1D55 JUMPI PUSH2 0x1D54 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1D9C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1DCB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1DC1 JUMPI PUSH2 0x1DC0 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1DF4 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1DEA JUMPI PUSH2 0x1DE9 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E19 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E0F JUMPI PUSH2 0x1E0E PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1E3C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1E4B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F0B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1ECC JUMPI POP PUSH2 0x1ECB DUP5 DUP5 PUSH2 0xF12 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1F0A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EF2 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F59 DUP2 PUSH2 0x1F25 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F74 DUP2 PUSH2 0x1F50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8F JUMPI PUSH2 0x1F8E PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9C DUP5 DUP3 DUP6 ADD PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB9 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x200F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FF4 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2034 DUP3 PUSH2 0x1FD8 JUMP JUMPDEST PUSH2 0x203E DUP2 DUP6 PUSH2 0x1FE2 JUMP JUMPDEST SWAP4 POP PUSH2 0x204E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2057 DUP2 PUSH2 0x201A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 DUP5 PUSH2 0x202A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2094 DUP2 PUSH2 0x2082 JUMP JUMPDEST DUP2 EQ PUSH2 0x209E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20AF DUP2 PUSH2 0x208B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D7 DUP5 DUP3 DUP6 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2109 DUP3 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2119 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2132 PUSH0 DUP4 ADD DUP5 PUSH2 0x2110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2141 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP2 EQ PUSH2 0x214B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x215C DUP2 PUSH2 0x2138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2185 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2196 DUP6 DUP3 DUP7 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21B7 JUMPI PUSH2 0x21B6 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C4 DUP7 DUP3 DUP8 ADD PUSH2 0x214E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21D5 DUP7 DUP3 DUP8 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21E6 DUP7 DUP3 DUP8 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x21F9 DUP2 PUSH2 0x2082 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2212 PUSH0 DUP4 ADD DUP5 PUSH2 0x21F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2221 DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP2 EQ PUSH2 0x222B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223C DUP2 PUSH2 0x2218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2264 DUP5 DUP3 DUP6 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2282 JUMPI PUSH2 0x2281 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x228F DUP5 DUP3 DUP6 ADD PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CA DUP2 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22DB DUP4 DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22FD DUP3 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x2307 DUP2 DUP6 PUSH2 0x22A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2312 DUP4 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2342 JUMPI DUP2 MLOAD PUSH2 0x2329 DUP9 DUP3 PUSH2 0x22D0 JUMP JUMPDEST SWAP8 POP PUSH2 0x2334 DUP4 PUSH2 0x22E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2315 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2367 DUP2 DUP5 PUSH2 0x22F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2385 JUMPI PUSH2 0x2384 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2392 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23A3 DUP6 DUP3 DUP7 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x23EB DUP3 PUSH2 0x201A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x240A JUMPI PUSH2 0x2409 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x241C PUSH2 0x1F14 JUMP JUMPDEST SWAP1 POP PUSH2 0x2428 DUP3 DUP3 PUSH2 0x23E2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2447 JUMPI PUSH2 0x2446 PUSH2 0x23B5 JUMP JUMPDEST JUMPDEST PUSH2 0x2450 DUP3 PUSH2 0x201A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x247D PUSH2 0x2478 DUP5 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2413 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2499 JUMPI PUSH2 0x2498 PUSH2 0x23B1 JUMP JUMPDEST JUMPDEST PUSH2 0x24A4 DUP5 DUP3 DUP6 PUSH2 0x245D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24C0 JUMPI PUSH2 0x24BF PUSH2 0x23AD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x246B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH2 0x24F0 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24FE DUP8 DUP3 DUP9 ADD PUSH2 0x214E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x250F DUP8 DUP3 DUP9 ADD PUSH2 0x214E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2520 DUP8 DUP3 DUP9 ADD PUSH2 0x20A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2541 JUMPI PUSH2 0x2540 PUSH2 0x1F21 JUMP JUMPDEST JUMPDEST PUSH2 0x254D DUP8 DUP3 DUP9 ADD PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258B DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x259C DUP4 DUP4 PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25BE DUP3 PUSH2 0x2559 JUMP JUMPDEST PUSH2 0x25C8 DUP2 DUP6 PUSH2 0x2563 JUMP JUMPDEST SWAP4 POP PUSH2 0x25D3 DUP4 PUSH2 0x2573 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2603 JUMPI DUP2 MLOAD PUSH2 0x25EA DUP9 DUP3 PUSH2 0x2591 JUMP JUMPDEST SWAP8 POP PUSH2 0x25F5 DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25D6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2628 DUP2 DUP5 PUSH2 0x25B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH2 0x2645 PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2653 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2664 DUP6 DUP3 DUP7 ADD PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26C5 JUMPI PUSH2 0x26C4 PUSH2 0x266E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26DE PUSH0 DUP4 ADD DUP7 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x26EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21F0 JUMP JUMPDEST PUSH2 0x26F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2110 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2737 DUP3 PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP PUSH2 0x2742 DUP4 PUSH2 0x2082 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x275A JUMPI PUSH2 0x2759 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4164647265737320616C72656164792065786973747300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27C1 PUSH1 0x16 DUP4 PUSH2 0x1FE2 JUMP JUMPDEST SWAP2 POP PUSH2 0x27CC DUP3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27EE DUP2 PUSH2 0x27B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27FF DUP3 PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2831 JUMPI PUSH2 0x2830 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2850 DUP3 PUSH2 0x1FD8 JUMP JUMPDEST PUSH2 0x285A DUP2 DUP6 PUSH2 0x283C JUMP JUMPDEST SWAP4 POP PUSH2 0x286A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2881 DUP3 DUP6 PUSH2 0x2846 JUMP JUMPDEST SWAP2 POP PUSH2 0x288D DUP3 DUP5 PUSH2 0x2846 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28BD DUP3 PUSH2 0x2899 JUMP JUMPDEST PUSH2 0x28C7 DUP2 DUP6 PUSH2 0x28A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x28D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x28E0 DUP2 PUSH2 0x201A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x28FE PUSH0 DUP4 ADD DUP8 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x290B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x2918 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x292A DUP2 DUP5 PUSH2 0x28B3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2943 DUP2 PUSH2 0x1F50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295E JUMPI PUSH2 0x295D PUSH2 0x1F1D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x296B DUP5 DUP3 DUP6 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29B4 PUSH0 DUP4 ADD DUP6 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x29C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xAA 0xB8 PUSH13 0x192230581F8D7664AD57EFC2BA SGT SAR 0xC6 SWAP12 0x22 SUB 0xC6 BLOCKHASH PUSH6 0xF43206C58F5A PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "170:2804:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;518:28:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1343:418:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;848:489:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:208:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1875:383:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;340:45:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4985:208:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2264:708:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;454:58:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300:2;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;518:28:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1343:418:12:-;1393:34;1430:27;1450:6;1430:19;:27::i;:::-;1393:64;;1473:9;1468:234;1492:17;:24;1488:1;:28;1468:234;;;1537:15;1572:1;1555:14;;:18;;;;:::i;:::-;1537:36;;1587;1593:17;1611:1;1593:20;;;;;;;;:::i;:::-;;;;;;;;1615:7;1587:5;:36::i;:::-;1664:17;1682:1;1664:20;;;;;;;;:::i;:::-;;;;;;;;1642:49;;1655:7;1642:49;1686:4;1642:49;;;;;;:::i;:::-;;;;;;;;1523:179;1518:3;;;;;;;1468:234;;;;1730:17;:24;1712:14;;:42;;;;;;;:::i;:::-;;;;;;;;1383:378;1343:418;:::o;2185:118:2:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;848:489:12:-;913:13;:25;927:10;913:25;;;;;;;;;;;;;;;;;;;;;;;;;912:26;904:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;976:15;994:14;;976:32;;1046:4;1018:13;:25;1032:10;1018:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1060:11;1077:7;1060:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:33;1132:22;;;;;;;;1144:9;1132:22;;;;;1096:58;;1230:14;1165:9;:52;;1198:19;1165:52;;;1177:18;1165:52;1164:63;1219:7;1164:63;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:14;;:16;;;;;;;;;:::i;:::-;;;;;;1308:10;1286:44;;1299:7;1286:44;1320:9;1286:44;;;;;;:::i;:::-;;;;;;;;894:443;;848:489;:::o;1920:208:2:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1875:383:12:-;1925:13;1950:26;1990:14;;1979:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:55;;2015:51;2069:18;2015:72;;2103:9;2098:125;2122:14;;2118:1;:18;2098:125;;;2175:11;:27;2187:11;2199:1;2187:14;;;;;;;;:::i;:::-;;;;;;;;;;2175:27;;;;;;;;;;;:37;;;;;;;;;;;;2157:12;2170:1;2157:15;;;;;;;;:::i;:::-;;;;;;;:55;;;;;;;;;;;2138:3;;;;;;;2098:125;;;;2239:12;2232:19;;;;1875:383;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;340:45:12:-;;;;;;;;;;;;;;;;;;;;;;:::o;391:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4985:208:2:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;2264:708:12:-;2333:16;2361:34;2412:14;;2398:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2361:66;;2437:21;2473:51;2528:12;:55;;2564:19;2528:55;;;2543:18;2528:55;2473:111;;2600:9;2595:253;2619:14;;2615:1;:18;2595:253;;;2654:15;2672:11;2684:1;2672:14;;;;;;;;:::i;:::-;;;;;;;;;;2654:32;;2738:12;2704:46;;:11;:20;2716:7;2704:20;;;;;;;;;;;:30;;;;;;;;;;;;:46;;;2700:138;;2807:16;2815:7;2807;:16::i;:::-;2770:17;2788:15;;;;;:::i;:::-;;;2770:34;;;;;;;;:::i;:::-;;;;;;;:53;;;;;;;;;;;2700:138;2640:208;2635:3;;;;;;;2595:253;;;;2907:13;2888:17;2881:40;2948:17;2941:24;;;;;2264:708;;;:::o;221:33::-;;;;:::o;3928:153:2:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;454:58:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:2:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;14418:120:2:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:2:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1767:102:12:-;1827:13;1859:3;1852:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:102;:::o;637:698:7:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:2:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:10:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:2:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:118::-;5602:24;5620:5;5602:24;:::i;:::-;5597:3;5590:37;5515:118;;:::o;5639:222::-;5732:4;5770:2;5759:9;5755:18;5747:26;;5783:71;5851:1;5840:9;5836:17;5827:6;5783:71;:::i;:::-;5639:222;;;;:::o;5867:116::-;5937:21;5952:5;5937:21;:::i;:::-;5930:5;5927:32;5917:60;;5973:1;5970;5963:12;5917:60;5867:116;:::o;5989:133::-;6032:5;6070:6;6057:20;6048:29;;6086:30;6110:5;6086:30;:::i;:::-;5989:133;;;;:::o;6128:323::-;6184:6;6233:2;6221:9;6212:7;6208:23;6204:32;6201:119;;;6239:79;;:::i;:::-;6201:119;6359:1;6384:50;6426:7;6417:6;6406:9;6402:22;6384:50;:::i;:::-;6374:60;;6330:114;6128:323;;;;:::o;6457:329::-;6516:6;6565:2;6553:9;6544:7;6540:23;6536:32;6533:119;;;6571:79;;:::i;:::-;6533:119;6691:1;6716:53;6761:7;6752:6;6741:9;6737:22;6716:53;:::i;:::-;6706:63;;6662:117;6457:329;;;;:::o;6792:111::-;6856:6;6890:5;6884:12;6874:22;;6792:111;;;:::o;6909:181::-;7005:11;7039:6;7034:3;7027:19;7079:4;7074:3;7070:14;7055:29;;6909:181;;;;:::o;7096:129::-;7160:4;7183:3;7175:11;;7213:4;7208:3;7204:14;7196:22;;7096:129;;;:::o;7231:99::-;7302:21;7317:5;7302:21;:::i;:::-;7297:3;7290:34;7231:99;;:::o;7336:167::-;7399:10;7420:40;7456:3;7448:6;7420:40;:::i;:::-;7492:4;7487:3;7483:14;7469:28;;7336:167;;;;:::o;7509:110::-;7576:4;7608;7603:3;7599:14;7591:22;;7509:110;;;:::o;7649:708::-;7762:3;7791:51;7836:5;7791:51;:::i;:::-;7858:83;7934:6;7929:3;7858:83;:::i;:::-;7851:90;;7965:53;8012:5;7965:53;:::i;:::-;8041:7;8072:1;8057:275;8082:6;8079:1;8076:13;8057:275;;;8158:6;8152:13;8185:57;8238:3;8223:13;8185:57;:::i;:::-;8178:64;;8265:57;8315:6;8265:57;:::i;:::-;8255:67;;8117:215;8104:1;8101;8097:9;8092:14;;8057:275;;;8061:14;8348:3;8341:10;;7767:590;;;7649:708;;;;:::o;8363:361::-;8500:4;8538:2;8527:9;8523:18;8515:26;;8587:9;8581:4;8577:20;8573:1;8562:9;8558:17;8551:47;8615:102;8712:4;8703:6;8615:102;:::i;:::-;8607:110;;8363:361;;;;:::o;8730:468::-;8795:6;8803;8852:2;8840:9;8831:7;8827:23;8823:32;8820:119;;;8858:79;;:::i;:::-;8820:119;8978:1;9003:53;9048:7;9039:6;9028:9;9024:22;9003:53;:::i;:::-;8993:63;;8949:117;9105:2;9131:50;9173:7;9164:6;9153:9;9149:22;9131:50;:::i;:::-;9121:60;;9076:115;8730:468;;;;;:::o;9204:117::-;9313:1;9310;9303:12;9327:117;9436:1;9433;9426:12;9450:180;9498:77;9495:1;9488:88;9595:4;9592:1;9585:15;9619:4;9616:1;9609:15;9636:281;9719:27;9741:4;9719:27;:::i;:::-;9711:6;9707:40;9849:6;9837:10;9834:22;9813:18;9801:10;9798:34;9795:62;9792:88;;;9860:18;;:::i;:::-;9792:88;9900:10;9896:2;9889:22;9679:238;9636:281;;:::o;9923:129::-;9957:6;9984:20;;:::i;:::-;9974:30;;10013:33;10041:4;10033:6;10013:33;:::i;:::-;9923:129;;;:::o;10058:307::-;10119:4;10209:18;10201:6;10198:30;10195:56;;;10231:18;;:::i;:::-;10195:56;10269:29;10291:6;10269:29;:::i;:::-;10261:37;;10353:4;10347;10343:15;10335:23;;10058:307;;;:::o;10371:146::-;10468:6;10463:3;10458;10445:30;10509:1;10500:6;10495:3;10491:16;10484:27;10371:146;;;:::o;10523:423::-;10600:5;10625:65;10641:48;10682:6;10641:48;:::i;:::-;10625:65;:::i;:::-;10616:74;;10713:6;10706:5;10699:21;10751:4;10744:5;10740:16;10789:3;10780:6;10775:3;10771:16;10768:25;10765:112;;;10796:79;;:::i;:::-;10765:112;10886:54;10933:6;10928:3;10923;10886:54;:::i;:::-;10606:340;10523:423;;;;;:::o;10965:338::-;11020:5;11069:3;11062:4;11054:6;11050:17;11046:27;11036:122;;11077:79;;:::i;:::-;11036:122;11194:6;11181:20;11219:78;11293:3;11285:6;11278:4;11270:6;11266:17;11219:78;:::i;:::-;11210:87;;11026:277;10965:338;;;;:::o;11309:943::-;11404:6;11412;11420;11428;11477:3;11465:9;11456:7;11452:23;11448:33;11445:120;;;11484:79;;:::i;:::-;11445:120;11604:1;11629:53;11674:7;11665:6;11654:9;11650:22;11629:53;:::i;:::-;11619:63;;11575:117;11731:2;11757:53;11802:7;11793:6;11782:9;11778:22;11757:53;:::i;:::-;11747:63;;11702:118;11859:2;11885:53;11930:7;11921:6;11910:9;11906:22;11885:53;:::i;:::-;11875:63;;11830:118;12015:2;12004:9;12000:18;11987:32;12046:18;12038:6;12035:30;12032:117;;;12068:79;;:::i;:::-;12032:117;12173:62;12227:7;12218:6;12207:9;12203:22;12173:62;:::i;:::-;12163:72;;11958:287;11309:943;;;;;;;:::o;12258:114::-;12325:6;12359:5;12353:12;12343:22;;12258:114;;;:::o;12378:184::-;12477:11;12511:6;12506:3;12499:19;12551:4;12546:3;12542:14;12527:29;;12378:184;;;;:::o;12568:132::-;12635:4;12658:3;12650:11;;12688:4;12683:3;12679:14;12671:22;;12568:132;;;:::o;12706:108::-;12783:24;12801:5;12783:24;:::i;:::-;12778:3;12771:37;12706:108;;:::o;12820:179::-;12889:10;12910:46;12952:3;12944:6;12910:46;:::i;:::-;12988:4;12983:3;12979:14;12965:28;;12820:179;;;;:::o;13005:113::-;13075:4;13107;13102:3;13098:14;13090:22;;13005:113;;;:::o;13154:732::-;13273:3;13302:54;13350:5;13302:54;:::i;:::-;13372:86;13451:6;13446:3;13372:86;:::i;:::-;13365:93;;13482:56;13532:5;13482:56;:::i;:::-;13561:7;13592:1;13577:284;13602:6;13599:1;13596:13;13577:284;;;13678:6;13672:13;13705:63;13764:3;13749:13;13705:63;:::i;:::-;13698:70;;13791:60;13844:6;13791:60;:::i;:::-;13781:70;;13637:224;13624:1;13621;13617:9;13612:14;;13577:284;;;13581:14;13877:3;13870:10;;13278:608;;;13154:732;;;;:::o;13892:373::-;14035:4;14073:2;14062:9;14058:18;14050:26;;14122:9;14116:4;14112:20;14108:1;14097:9;14093:17;14086:47;14150:108;14253:4;14244:6;14150:108;:::i;:::-;14142:116;;13892:373;;;;:::o;14271:474::-;14339:6;14347;14396:2;14384:9;14375:7;14371:23;14367:32;14364:119;;;14402:79;;:::i;:::-;14364:119;14522:1;14547:53;14592:7;14583:6;14572:9;14568:22;14547:53;:::i;:::-;14537:63;;14493:117;14649:2;14675:53;14720:7;14711:6;14700:9;14696:22;14675:53;:::i;:::-;14665:63;;14620:118;14271:474;;;;;:::o;14751:180::-;14799:77;14796:1;14789:88;14896:4;14893:1;14886:15;14920:4;14917:1;14910:15;14937:320;14981:6;15018:1;15012:4;15008:12;14998:22;;15065:1;15059:4;15055:12;15086:18;15076:81;;15142:4;15134:6;15130:17;15120:27;;15076:81;15204:2;15196:6;15193:14;15173:18;15170:38;15167:84;;15223:18;;:::i;:::-;15167:84;14988:269;14937:320;;;:::o;15263:442::-;15412:4;15450:2;15439:9;15435:18;15427:26;;15463:71;15531:1;15520:9;15516:17;15507:6;15463:71;:::i;:::-;15544:72;15612:2;15601:9;15597:18;15588:6;15544:72;:::i;:::-;15626;15694:2;15683:9;15679:18;15670:6;15626:72;:::i;:::-;15263:442;;;;;;:::o;15711:180::-;15759:77;15756:1;15749:88;15856:4;15853:1;15846:15;15880:4;15877:1;15870:15;15897:191;15937:3;15956:20;15974:1;15956:20;:::i;:::-;15951:25;;15990:20;16008:1;15990:20;:::i;:::-;15985:25;;16033:1;16030;16026:9;16019:16;;16054:3;16051:1;16048:10;16045:36;;;16061:18;;:::i;:::-;16045:36;15897:191;;;;:::o;16094:180::-;16142:77;16139:1;16132:88;16239:4;16236:1;16229:15;16263:4;16260:1;16253:15;16280:172;16420:24;16416:1;16408:6;16404:14;16397:48;16280:172;:::o;16458:366::-;16600:3;16621:67;16685:2;16680:3;16621:67;:::i;:::-;16614:74;;16697:93;16786:3;16697:93;:::i;:::-;16815:2;16810:3;16806:12;16799:19;;16458:366;;;:::o;16830:419::-;16996:4;17034:2;17023:9;17019:18;17011:26;;17083:9;17077:4;17073:20;17069:1;17058:9;17054:17;17047:47;17111:131;17237:4;17111:131;:::i;:::-;17103:139;;16830:419;;;:::o;17255:233::-;17294:3;17317:24;17335:5;17317:24;:::i;:::-;17308:33;;17363:66;17356:5;17353:77;17350:103;;17433:18;;:::i;:::-;17350:103;17480:1;17473:5;17469:13;17462:20;;17255:233;;;:::o;17494:148::-;17596:11;17633:3;17618:18;;17494:148;;;;:::o;17648:390::-;17754:3;17782:39;17815:5;17782:39;:::i;:::-;17837:89;17919:6;17914:3;17837:89;:::i;:::-;17830:96;;17935:65;17993:6;17988:3;17981:4;17974:5;17970:16;17935:65;:::i;:::-;18025:6;18020:3;18016:16;18009:23;;17758:280;17648:390;;;;:::o;18044:435::-;18224:3;18246:95;18337:3;18328:6;18246:95;:::i;:::-;18239:102;;18358:95;18449:3;18440:6;18358:95;:::i;:::-;18351:102;;18470:3;18463:10;;18044:435;;;;;:::o;18485:98::-;18536:6;18570:5;18564:12;18554:22;;18485:98;;;:::o;18589:168::-;18672:11;18706:6;18701:3;18694:19;18746:4;18741:3;18737:14;18722:29;;18589:168;;;;:::o;18763:373::-;18849:3;18877:38;18909:5;18877:38;:::i;:::-;18931:70;18994:6;18989:3;18931:70;:::i;:::-;18924:77;;19010:65;19068:6;19063:3;19056:4;19049:5;19045:16;19010:65;:::i;:::-;19100:29;19122:6;19100:29;:::i;:::-;19095:3;19091:39;19084:46;;18853:283;18763:373;;;;:::o;19142:640::-;19337:4;19375:3;19364:9;19360:19;19352:27;;19389:71;19457:1;19446:9;19442:17;19433:6;19389:71;:::i;:::-;19470:72;19538:2;19527:9;19523:18;19514:6;19470:72;:::i;:::-;19552;19620:2;19609:9;19605:18;19596:6;19552:72;:::i;:::-;19671:9;19665:4;19661:20;19656:2;19645:9;19641:18;19634:48;19699:76;19770:4;19761:6;19699:76;:::i;:::-;19691:84;;19142:640;;;;;;;:::o;19788:141::-;19844:5;19875:6;19869:13;19860:22;;19891:32;19917:5;19891:32;:::i;:::-;19788:141;;;;:::o;19935:349::-;20004:6;20053:2;20041:9;20032:7;20028:23;20024:32;20021:119;;;20059:79;;:::i;:::-;20021:119;20179:1;20204:63;20259:7;20250:6;20239:9;20235:22;20204:63;:::i;:::-;20194:73;;20150:127;19935:349;;;;:::o;20290:180::-;20338:77;20335:1;20328:88;20435:4;20432:1;20425:15;20459:4;20456:1;20449:15;20476:332;20597:4;20635:2;20624:9;20620:18;20612:26;;20648:71;20716:1;20705:9;20701:17;20692:6;20648:71;:::i;:::-;20729:72;20797:2;20786:9;20782:18;20773:6;20729:72;:::i;:::-;20476:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2150000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressExists(address)": "2944",
								"addressInfoMapFalse(uint256)": "2918",
								"addressInfoMapTrue(uint256)": "2941",
								"addressKeys(uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getAddressesByValue(bool)": "infinite",
								"getAllAddresses()": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFTs(bool)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"ownerOf(uint256)": "infinite",
								"pushAddress(bool)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalAddresses()": "2469",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 253,
									"end": 254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 254,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 221,
									"end": 254,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 648,
									"end": 842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 648,
									"end": 842,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 794,
									"end": 806,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 769,
									"end": 776,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 827,
									"end": 831,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 822,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 822,
									"end": 831,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 822,
									"end": 831,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 842,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2202,
									"end": 2203,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2223,
									"end": 2224,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2220,
									"end": 2233,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2311,
									"end": 2312,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2302,
									"end": 2313,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2296,
									"end": 2314,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2287,
									"end": 2290,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2283,
									"end": 2294,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2276,
									"end": 2315,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2248,
									"end": 2250,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2245,
									"end": 2246,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2241,
									"end": 2251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2359,
									"end": 2360,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2356,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2345,
									"end": 2348,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2341,
									"end": 2357,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2334,
									"end": 2361,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2183,
									"end": 2367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2121,
									"end": 2367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2545,
									"end": 2551,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2503,
									"end": 2552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2487,
									"end": 2553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2478,
									"end": 2553,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2478,
									"end": 2553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2576,
									"end": 2582,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2569,
									"end": 2574,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2583,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2614,
									"end": 2618,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2607,
									"end": 2612,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2652,
									"end": 2655,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2638,
									"end": 2641,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2631,
									"end": 2656,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2659,
									"end": 2738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2794,
									"end": 2800,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2789,
									"end": 2792,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2749,
									"end": 2801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2807,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2894,
									"end": 2899,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2943,
									"end": 2946,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2936,
									"end": 2940,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2928,
									"end": 2934,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2924,
									"end": 2941,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2951,
									"end": 3030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3068,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3172,
									"end": 3175,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3157,
									"end": 3161,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3149,
									"end": 3155,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3145,
									"end": 3162,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3086,
									"end": 3176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3077,
									"end": 3176,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3077,
									"end": 3176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2900,
									"end": 3182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2827,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3315,
									"end": 3321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3323,
									"end": 3329,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3331,
									"end": 3337,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3339,
									"end": 3345,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3388,
									"end": 3391,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3376,
									"end": 3385,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3367,
									"end": 3374,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3363,
									"end": 3386,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3392,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3356,
									"end": 3476,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3356,
									"end": 3476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3356,
									"end": 3476,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3395,
									"end": 3474,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 3395,
									"end": 3474,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3395,
									"end": 3474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3395,
									"end": 3474,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 3395,
									"end": 3474,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3356,
									"end": 3476,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3356,
									"end": 3476,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3515,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3540,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 3596,
									"end": 3603,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3587,
									"end": 3593,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3576,
									"end": 3585,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3594,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3540,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 3540,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3540,
									"end": 3604,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 3540,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3530,
									"end": 3604,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3530,
									"end": 3604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3486,
									"end": 3614,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3674,
									"end": 3676,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3663,
									"end": 3672,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3659,
									"end": 3677,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3653,
									"end": 3678,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3705,
									"end": 3723,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3697,
									"end": 3703,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3694,
									"end": 3724,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3691,
									"end": 3808,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3691,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 3691,
									"end": 3808,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3727,
									"end": 3806,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 3727,
									"end": 3806,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 3727,
									"end": 3806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3727,
									"end": 3806,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 3727,
									"end": 3806,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3691,
									"end": 3808,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 3691,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3832,
									"end": 3906,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3898,
									"end": 3905,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3889,
									"end": 3895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3878,
									"end": 3887,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3832,
									"end": 3906,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3832,
									"end": 3906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3832,
									"end": 3906,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3832,
									"end": 3906,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3906,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3624,
									"end": 3916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3976,
									"end": 3978,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3965,
									"end": 3974,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3961,
									"end": 3979,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 3980,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4007,
									"end": 4025,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3999,
									"end": 4005,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3996,
									"end": 4026,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3993,
									"end": 4110,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3993,
									"end": 4110,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 3993,
									"end": 4110,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4029,
									"end": 4108,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4029,
									"end": 4108,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 4029,
									"end": 4108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4029,
									"end": 4108,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4029,
									"end": 4108,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3993,
									"end": 4110,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 3993,
									"end": 4110,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4134,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4200,
									"end": 4207,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4191,
									"end": 4197,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4180,
									"end": 4189,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4176,
									"end": 4198,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4134,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4134,
									"end": 4208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4134,
									"end": 4208,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4134,
									"end": 4208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4124,
									"end": 4208,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4124,
									"end": 4208,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3926,
									"end": 4218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4278,
									"end": 4280,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 4267,
									"end": 4276,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4257,
									"end": 4282,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4309,
									"end": 4327,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4301,
									"end": 4307,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4298,
									"end": 4328,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4295,
									"end": 4412,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4295,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4295,
									"end": 4412,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4331,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 4331,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 4331,
									"end": 4410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4331,
									"end": 4410,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 4331,
									"end": 4410,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4295,
									"end": 4412,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4295,
									"end": 4412,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4436,
									"end": 4510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 4502,
									"end": 4509,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4493,
									"end": 4499,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4482,
									"end": 4491,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4478,
									"end": 4500,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4436,
									"end": 4510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4436,
									"end": 4510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4436,
									"end": 4510,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 4436,
									"end": 4510,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4426,
									"end": 4510,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4426,
									"end": 4510,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4228,
									"end": 4520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 4527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4533,
									"end": 4632,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4533,
									"end": 4632,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4585,
									"end": 4591,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4613,
									"end": 4625,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4603,
									"end": 4625,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4603,
									"end": 4625,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4533,
									"end": 4632,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4533,
									"end": 4632,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4533,
									"end": 4632,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4533,
									"end": 4632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4638,
									"end": 4818,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4638,
									"end": 4818,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4686,
									"end": 4763,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4683,
									"end": 4684,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4676,
									"end": 4764,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4787,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 4780,
									"end": 4781,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4773,
									"end": 4788,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4807,
									"end": 4811,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4804,
									"end": 4805,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4797,
									"end": 4812,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4824,
									"end": 5144,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4824,
									"end": 5144,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4868,
									"end": 4874,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4905,
									"end": 4906,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4899,
									"end": 4903,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4895,
									"end": 4907,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4885,
									"end": 4907,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4885,
									"end": 4907,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4953,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 4950,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4954,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4963,
									"end": 5044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 4963,
									"end": 5044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5029,
									"end": 5033,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 5021,
									"end": 5027,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5017,
									"end": 5034,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5007,
									"end": 5034,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5007,
									"end": 5034,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4963,
									"end": 5044,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 4963,
									"end": 5044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5091,
									"end": 5093,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5083,
									"end": 5089,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5078,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5057,
									"end": 5095,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5138,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5054,
									"end": 5138,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5128,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5110,
									"end": 5128,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5110,
									"end": 5128,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5128,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5110,
									"end": 5128,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5138,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5054,
									"end": 5138,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4875,
									"end": 5144,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4824,
									"end": 5144,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4824,
									"end": 5144,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4824,
									"end": 5144,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4824,
									"end": 5144,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5150,
									"end": 5291,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5150,
									"end": 5291,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5199,
									"end": 5203,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5222,
									"end": 5225,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5214,
									"end": 5225,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5214,
									"end": 5225,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5245,
									"end": 5248,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5242,
									"end": 5243,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5235,
									"end": 5249,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5279,
									"end": 5283,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5276,
									"end": 5277,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5266,
									"end": 5284,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 5258,
									"end": 5284,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5258,
									"end": 5284,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5150,
									"end": 5291,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5150,
									"end": 5291,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5150,
									"end": 5291,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5150,
									"end": 5291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5297,
									"end": 5390,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5297,
									"end": 5390,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5340,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5381,
									"end": 5383,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5376,
									"end": 5378,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5369,
									"end": 5374,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5365,
									"end": 5379,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5361,
									"end": 5384,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 5351,
									"end": 5384,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5351,
									"end": 5384,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5297,
									"end": 5390,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5297,
									"end": 5390,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5297,
									"end": 5390,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5297,
									"end": 5390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5396,
									"end": 5503,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5396,
									"end": 5503,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5440,
									"end": 5448,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5490,
									"end": 5495,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5484,
									"end": 5488,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5480,
									"end": 5496,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 5459,
									"end": 5496,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5459,
									"end": 5496,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5396,
									"end": 5503,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5396,
									"end": 5503,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5396,
									"end": 5503,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5396,
									"end": 5503,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5396,
									"end": 5503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5578,
									"end": 5584,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5628,
									"end": 5629,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5616,
									"end": 5626,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5612,
									"end": 5630,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5651,
									"end": 5748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5681,
									"end": 5747,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5651,
									"end": 5748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5651,
									"end": 5748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5651,
									"end": 5748,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5651,
									"end": 5748,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5769,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5799,
									"end": 5807,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5788,
									"end": 5797,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5769,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5769,
									"end": 5808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5769,
									"end": 5808,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5769,
									"end": 5808,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5757,
									"end": 5808,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 5757,
									"end": 5808,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5845,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5837,
									"end": 5846,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5830,
									"end": 5835,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5826,
									"end": 5847,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5817,
									"end": 5847,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5817,
									"end": 5847,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5890,
									"end": 5894,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5880,
									"end": 5888,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5876,
									"end": 5895,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5869,
									"end": 5874,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5866,
									"end": 5896,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5896,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5896,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5902,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5985,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 5908,
									"end": 5985,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 5952,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5974,
									"end": 5979,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 5979,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 5979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5985,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5985,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5985,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5985,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6040,
									"end": 6045,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6045,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6033,
									"end": 6045,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5991,
									"end": 6051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6107,
									"end": 6116,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6185,
									"end": 6190,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6167,
									"end": 6191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6158,
									"end": 6192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6140,
									"end": 6193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6127,
									"end": 6193,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6127,
									"end": 6193,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6248,
									"end": 6251,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6269,
									"end": 6274,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6262,
									"end": 6274,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6262,
									"end": 6274,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6280,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 6427,
									"end": 6434,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6396,
									"end": 6435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 6530,
									"end": 6546,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6506,
									"end": 6547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6498,
									"end": 6504,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6485,
									"end": 6496,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 6457,
									"end": 6548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6444,
									"end": 6549,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6362,
									"end": 6555,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6286,
									"end": 6555,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6561,
									"end": 6634,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 6561,
									"end": 6634,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6606,
									"end": 6609,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6561,
									"end": 6634,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6561,
									"end": 6634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 6717,
									"end": 6749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6816,
									"end": 6822,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6808,
									"end": 6814,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 6758,
									"end": 6823,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6693,
									"end": 6829,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6640,
									"end": 6829,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6912,
									"end": 6915,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6905,
									"end": 6910,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6902,
									"end": 6916,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 7003,
									"end": 7004,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6996,
									"end": 7001,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 6966,
									"end": 7005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6932,
									"end": 6937,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6928,
									"end": 6941,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6919,
									"end": 6941,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6919,
									"end": 6941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6835,
									"end": 7021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7128,
									"end": 7130,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7120,
									"end": 7131,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 7194,
									"end": 7199,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 7162,
									"end": 7200,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 7246,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7236,
									"end": 7244,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7232,
									"end": 7276,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7429,
									"end": 7431,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7417,
									"end": 7427,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7414,
									"end": 7432,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7450,
									"end": 7458,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7435,
									"end": 7458,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7435,
									"end": 7458,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7547,
									"end": 7550,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 7529,
									"end": 7551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7519,
									"end": 7527,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7515,
									"end": 7552,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7502,
									"end": 7513,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 7473,
									"end": 7553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7132,
									"end": 7563,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7132,
									"end": 7563,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7027,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7630,
									"end": 7638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7680,
									"end": 7685,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7674,
									"end": 7678,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7670,
									"end": 7686,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7649,
									"end": 7686,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7649,
									"end": 7686,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7576,
									"end": 7693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7743,
									"end": 7749,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 7824,
									"end": 7825,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7812,
									"end": 7817,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7809,
									"end": 7810,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7805,
									"end": 7818,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 7776,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "tag",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7772,
									"end": 7828,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7857,
									"end": 7861,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7851,
									"end": 7855,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7847,
									"end": 7862,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7837,
									"end": 7862,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7837,
									"end": 7862,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7750,
									"end": 7868,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7699,
									"end": 7868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7949,
									"end": 7953,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 8120,
									"end": 8123,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8114,
									"end": 8118,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 8095,
									"end": 8124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8124,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8124,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8157,
									"end": 8160,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8150,
									"end": 8161,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8144,
									"end": 8148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8162,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 8133,
									"end": 8162,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8133,
									"end": 8162,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7873,
									"end": 8168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 8323,
									"end": 8326,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 8290,
									"end": 8327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8392,
									"end": 8410,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8384,
									"end": 8390,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8381,
									"end": 8411,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 8414,
									"end": 8432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "tag",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 8490,
									"end": 8494,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8484,
									"end": 8495,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8458,
									"end": 8496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 8603,
									"end": 8609,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8595,
									"end": 8601,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8589,
									"end": 8593,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 8543,
									"end": 8610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8661,
									"end": 8665,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8648,
									"end": 8665,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8648,
									"end": 8665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8693,
									"end": 8695,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8685,
									"end": 8691,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8682,
									"end": 8696,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8710,
									"end": 8711,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9367,
									"end": 9368,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9384,
									"end": 9390,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9433,
									"end": 9442,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9428,
									"end": 9431,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 9424,
									"end": 9443,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9418,
									"end": 9444,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9409,
									"end": 9444,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9409,
									"end": 9444,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 9544,
									"end": 9550,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9537,
									"end": 9542,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 9484,
									"end": 9551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9478,
									"end": 9482,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 9471,
									"end": 9552,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 9340,
									"end": 9562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8757,
									"end": 8761,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8753,
									"end": 8762,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 8745,
									"end": 8751,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8741,
									"end": 8763,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 8823,
									"end": 8827,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 8791,
									"end": 8828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8850,
									"end": 8851,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8878,
									"end": 8885,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8875,
									"end": 8876,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8872,
									"end": 8886,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8957,
									"end": 8966,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8952,
									"end": 8955,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8948,
									"end": 8967,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8942,
									"end": 8968,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8934,
									"end": 8940,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8927,
									"end": 8969,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9009,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9000,
									"end": 9006,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8996,
									"end": 9010,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8986,
									"end": 9010,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8986,
									"end": 9010,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9055,
									"end": 9057,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9044,
									"end": 9053,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9040,
									"end": 9058,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9027,
									"end": 9058,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 9027,
									"end": 9058,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8901,
									"end": 8905,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8898,
									"end": 8899,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8894,
									"end": 8906,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8889,
									"end": 8906,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8889,
									"end": 8906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "tag",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9106,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 9091,
									"end": 9098,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9088,
									"end": 9107,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9158,
									"end": 9167,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9153,
									"end": 9156,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 9149,
									"end": 9168,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9143,
									"end": 9169,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 9243,
									"end": 9247,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 9235,
									"end": 9241,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 9231,
									"end": 9248,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9220,
									"end": 9229,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 9201,
									"end": 9249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9193,
									"end": 9199,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9186,
									"end": 9250,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 9264,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9310,
									"end": 9311,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9306,
									"end": 9307,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9298,
									"end": 9304,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 9294,
									"end": 9308,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9284,
									"end": 9288,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 9277,
									"end": 9313,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8712,
									"end": 9323,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8712,
									"end": 9323,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8712,
									"end": 9323,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8265,
									"end": 9568,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8265,
									"end": 9568,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8265,
									"end": 9568,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8173,
									"end": 9568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9574,
									"end": 9692,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 9574,
									"end": 9692,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9661,
									"end": 9685,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 9679,
									"end": 9684,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9661,
									"end": 9685,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 9661,
									"end": 9685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9661,
									"end": 9685,
									"name": "tag",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 9661,
									"end": 9685,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9656,
									"end": 9659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9649,
									"end": 9686,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9574,
									"end": 9692,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9574,
									"end": 9692,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9574,
									"end": 9692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9698,
									"end": 9920,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 9698,
									"end": 9920,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9791,
									"end": 9795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9829,
									"end": 9831,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9818,
									"end": 9827,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9814,
									"end": 9832,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9806,
									"end": 9832,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9806,
									"end": 9832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9842,
									"end": 9913,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 9910,
									"end": 9911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9899,
									"end": 9908,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9895,
									"end": 9912,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9886,
									"end": 9892,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9842,
									"end": 9913,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 9842,
									"end": 9913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9842,
									"end": 9913,
									"name": "tag",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 9842,
									"end": 9913,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9698,
									"end": 9920,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9698,
									"end": 9920,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9698,
									"end": 9920,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9698,
									"end": 9920,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9698,
									"end": 9920,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2974,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6aab86c192230581f8d7664ad57efc2ba131dc69b2203c64065f43206c58f5a64736f6c63430008160033",
									".code": [
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "CFAD5277"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "CFAD5277"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "FEC2B9EE"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "CF5F19D3"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "9516A104"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "A5025222"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "B0141B14"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "60E564F6"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "6EA2351A"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "2F233B73"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 2974,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 546,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 518,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 518,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 518,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1343,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1343,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 848,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 848,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1875,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1875,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 340,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 340,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 340,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 391,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 391,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 391,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2264,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2264,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2264,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 221,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 221,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 454,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 454,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 546,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1393,
											"end": 1427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1430,
											"end": 1457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1393,
											"end": 1457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1393,
											"end": 1457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1516,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1552,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1569,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1555,
											"end": 1569,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1555,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1593,
											"end": 1610,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1593,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1587,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1587,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1664,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1684,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1655,
											"end": 1662,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "CC45E233B2A26479F10617BAB0F82A2B918C69827943F81CB847BD970A6D3400"
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1642,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1691,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1523,
											"end": 1702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1730,
											"end": 1747,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1730,
											"end": 1754,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1712,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1712,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 913,
											"end": 926,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 937,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 913,
											"end": 938,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 913,
											"end": 938,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 912,
											"end": 938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 904,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 904,
											"end": 965,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 904,
											"end": 965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 976,
											"end": 991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1008,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 994,
											"end": 1008,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 976,
											"end": 1008,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 976,
											"end": 1008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1031,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1042,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1085,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1227,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1255,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 1271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "CC45E233B2A26479F10617BAB0F82A2B918C69827943F81CB847BD970A6D3400"
										},
										{
											"begin": 1320,
											"end": 1329,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1286,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1330,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 894,
											"end": 1337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 894,
											"end": 1337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 848,
											"end": 1337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 1979,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2015,
											"end": 2087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2198,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2187,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2201,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2202,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2175,
											"end": 2212,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2157,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 2258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 340,
											"end": 385,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 340,
											"end": 385,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 391,
											"end": 448,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 391,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2361,
											"end": 2395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2398,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2524,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2540,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2564,
											"end": 2583,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 2528,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2473,
											"end": 2584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2473,
											"end": 2584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2600,
											"end": 2609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2633,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2619,
											"end": 2633,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2683,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2672,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2750,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2750,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2715,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2724,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2750,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2750,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2750,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2700,
											"end": 2838,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2807,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 2788,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2770,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2838,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2700,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2905,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2881,
											"end": 2921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2965,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 221,
											"end": 254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 454,
											"end": 512,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 454,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1869,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 1767,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1840,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 1852,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 1852,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5620,
											"end": 5625,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 5602,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5590,
											"end": 5627,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5732,
											"end": 5736,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5755,
											"end": 5773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5853,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5783,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5983,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5867,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5952,
											"end": 5957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 5937,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5937,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5959,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 5917,
											"end": 5977,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5975,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5977,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 5917,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6122,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 5989,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6032,
											"end": 6037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 6110,
											"end": 6115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 6086,
											"end": 6116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 6086,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6122,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6451,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6128,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6235,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6221,
											"end": 6230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6219,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6208,
											"end": 6231,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6204,
											"end": 6236,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 6239,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 6426,
											"end": 6433,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 6384,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 6384,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6374,
											"end": 6434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6451,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6786,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 6457,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6553,
											"end": 6562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6536,
											"end": 6568,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6652,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 6533,
											"end": 6652,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 6571,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 6571,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6650,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 6571,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6652,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 6533,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 6761,
											"end": 6768,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6758,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6750,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 6716,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6769,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 6716,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 6769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 6769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6786,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6786,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6903,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 6792,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6856,
											"end": 6862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6884,
											"end": 6896,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6874,
											"end": 6896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6874,
											"end": 6896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 7090,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 6909,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7046,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7074,
											"end": 7077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7070,
											"end": 7084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7084,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 7090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 7090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 7090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 7090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 7090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7225,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 7096,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7183,
											"end": 7186,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7225,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7225,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7330,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7231,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 7317,
											"end": 7322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 7302,
											"end": 7323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7297,
											"end": 7300,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7290,
											"end": 7324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7503,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 7336,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7399,
											"end": 7409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7448,
											"end": 7454,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7420,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7487,
											"end": 7490,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7497,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7469,
											"end": 7497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7469,
											"end": 7497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7503,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7503,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7619,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 7509,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7603,
											"end": 7606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7591,
											"end": 7613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7591,
											"end": 7613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7619,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 8357,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 7649,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 7836,
											"end": 7841,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 7791,
											"end": 7842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 7842,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 7791,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 7858,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7941,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 7858,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7851,
											"end": 7941,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7851,
											"end": 7941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 8012,
											"end": 8017,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 7965,
											"end": 8018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8072,
											"end": 8073,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8088,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8089,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8158,
											"end": 8164,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8152,
											"end": 8165,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 8238,
											"end": 8241,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 8185,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8242,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 8185,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8242,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8265,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 8315,
											"end": 8321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8265,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 8265,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8265,
											"end": 8322,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 8265,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8117,
											"end": 8332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8101,
											"end": 8102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 8057,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8061,
											"end": 8075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8351,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8351,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 8357,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 8357,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 8357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8724,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 8363,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8500,
											"end": 8504,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8515,
											"end": 8541,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8515,
											"end": 8541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8587,
											"end": 8596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8581,
											"end": 8585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8577,
											"end": 8597,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8574,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8558,
											"end": 8575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8615,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 8712,
											"end": 8716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8703,
											"end": 8709,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8615,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 8615,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8615,
											"end": 8717,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 8615,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8607,
											"end": 8717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8607,
											"end": 8717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8724,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8724,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8852,
											"end": 8854,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8840,
											"end": 8849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 8838,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8827,
											"end": 8850,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8823,
											"end": 8855,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8939,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 8820,
											"end": 8939,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 8858,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8939,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 8820,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 9048,
											"end": 9055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9039,
											"end": 9045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9028,
											"end": 9037,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9024,
											"end": 9046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9003,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 9003,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9003,
											"end": 9056,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 9003,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9056,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8949,
											"end": 9066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9105,
											"end": 9107,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9131,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 9173,
											"end": 9180,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9164,
											"end": 9170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9162,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9149,
											"end": 9171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 9131,
											"end": 9181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9181,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 9131,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9076,
											"end": 9191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9321,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 9204,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9313,
											"end": 9314,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9303,
											"end": 9315,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9444,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 9327,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9434,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9426,
											"end": 9438,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9450,
											"end": 9630,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 9450,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9498,
											"end": 9575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9576,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9595,
											"end": 9599,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 9592,
											"end": 9593,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9585,
											"end": 9600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9623,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9624,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9636,
											"end": 9917,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 9636,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9719,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 9741,
											"end": 9745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9719,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 9719,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9719,
											"end": 9746,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 9719,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9717,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9707,
											"end": 9747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9855,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 9847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9834,
											"end": 9856,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9813,
											"end": 9831,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9801,
											"end": 9811,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9798,
											"end": 9832,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9795,
											"end": 9857,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9880,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 9792,
											"end": 9880,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 9860,
											"end": 9878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9880,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 9792,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9900,
											"end": 9910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9889,
											"end": 9911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9636,
											"end": 9917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9636,
											"end": 9917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9636,
											"end": 9917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9923,
											"end": 10052,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 9923,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9957,
											"end": 9963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 9984,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 9984,
											"end": 10004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9984,
											"end": 10004,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 9984,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9974,
											"end": 10004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9974,
											"end": 10004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 10041,
											"end": 10045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10033,
											"end": 10039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 10013,
											"end": 10046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9923,
											"end": 10052,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9923,
											"end": 10052,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9923,
											"end": 10052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9923,
											"end": 10052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10365,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 10058,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10119,
											"end": 10123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10227,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10198,
											"end": 10228,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10195,
											"end": 10251,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10195,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 10195,
											"end": 10251,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 10231,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10195,
											"end": 10251,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 10195,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10269,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 10291,
											"end": 10297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10269,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 10269,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10269,
											"end": 10298,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 10269,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10261,
											"end": 10298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10261,
											"end": 10298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10353,
											"end": 10357,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10343,
											"end": 10358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10335,
											"end": 10358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10335,
											"end": 10358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10365,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10517,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10371,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10468,
											"end": 10474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10463,
											"end": 10466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10475,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10506,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10491,
											"end": 10507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10484,
											"end": 10511,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10600,
											"end": 10605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10625,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 10641,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 10682,
											"end": 10688,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 10641,
											"end": 10689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10689,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 10641,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10625,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 10625,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10625,
											"end": 10690,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 10625,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10706,
											"end": 10711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10699,
											"end": 10720,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10751,
											"end": 10755,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10744,
											"end": 10749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10740,
											"end": 10756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10789,
											"end": 10792,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10780,
											"end": 10786,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10793,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10765,
											"end": 10877,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10765,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 10765,
											"end": 10877,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 10796,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10765,
											"end": 10877,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 10765,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 10933,
											"end": 10939,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10928,
											"end": 10931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10886,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10940,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 10886,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10606,
											"end": 10946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11303,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 10965,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11020,
											"end": 11025,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11072,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11062,
											"end": 11066,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11054,
											"end": 11060,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11050,
											"end": 11067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11046,
											"end": 11073,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11036,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 11036,
											"end": 11158,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11077,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 11077,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 11077,
											"end": 11156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11077,
											"end": 11156,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 11077,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11036,
											"end": 11158,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 11036,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11181,
											"end": 11201,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11219,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 11293,
											"end": 11296,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11282,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11270,
											"end": 11276,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11219,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 11219,
											"end": 11297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11219,
											"end": 11297,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 11219,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11210,
											"end": 11297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11210,
											"end": 11297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11026,
											"end": 11303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11303,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11404,
											"end": 11410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11418,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11420,
											"end": 11426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11434,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11465,
											"end": 11474,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11463,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11452,
											"end": 11475,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11481,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11565,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 11445,
											"end": 11565,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11484,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 11484,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 11484,
											"end": 11563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11484,
											"end": 11563,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 11484,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11565,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 11445,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11604,
											"end": 11605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11629,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 11674,
											"end": 11681,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11665,
											"end": 11671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11654,
											"end": 11663,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11650,
											"end": 11672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11629,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 11629,
											"end": 11682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11629,
											"end": 11682,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 11629,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11619,
											"end": 11682,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11619,
											"end": 11682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11575,
											"end": 11692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11731,
											"end": 11733,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11757,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 11802,
											"end": 11809,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11791,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 11757,
											"end": 11810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 11810,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 11757,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11747,
											"end": 11810,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11747,
											"end": 11810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11702,
											"end": 11820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11859,
											"end": 11861,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11885,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 11930,
											"end": 11937,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 11927,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11910,
											"end": 11919,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11906,
											"end": 11928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11885,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 11885,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11885,
											"end": 11938,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 11885,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11875,
											"end": 11938,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11875,
											"end": 11938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11830,
											"end": 11948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11987,
											"end": 12019,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12064,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12038,
											"end": 12044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12035,
											"end": 12065,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12149,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 12032,
											"end": 12149,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12068,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 12068,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 12068,
											"end": 12147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12068,
											"end": 12147,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 12068,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12149,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 12032,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 12227,
											"end": 12234,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12218,
											"end": 12224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12203,
											"end": 12225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 12173,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12235,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 12173,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12163,
											"end": 12235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12163,
											"end": 12235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11958,
											"end": 12245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 12252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12372,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 12258,
											"end": 12372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12325,
											"end": 12331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12359,
											"end": 12364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12353,
											"end": 12365,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12372,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12562,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 12378,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12477,
											"end": 12488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12506,
											"end": 12509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12499,
											"end": 12518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12542,
											"end": 12556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12527,
											"end": 12556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12527,
											"end": 12556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12700,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 12568,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12650,
											"end": 12661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12650,
											"end": 12661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12692,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12683,
											"end": 12686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12679,
											"end": 12693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12671,
											"end": 12693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12671,
											"end": 12693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12706,
											"end": 12814,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 12706,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12783,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 12801,
											"end": 12806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12783,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 12783,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12783,
											"end": 12807,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 12783,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12778,
											"end": 12781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12771,
											"end": 12808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12706,
											"end": 12814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12706,
											"end": 12814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12706,
											"end": 12814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12820,
											"end": 12999,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 12820,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12889,
											"end": 12899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 12952,
											"end": 12955,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 12950,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12910,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 12910,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12910,
											"end": 12956,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 12910,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 12992,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12983,
											"end": 12986,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12965,
											"end": 12993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12965,
											"end": 12993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12820,
											"end": 12999,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12820,
											"end": 12999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12820,
											"end": 12999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12820,
											"end": 12999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12820,
											"end": 12999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13118,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 13005,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13107,
											"end": 13111,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13102,
											"end": 13105,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13098,
											"end": 13112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13118,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13118,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13886,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 13154,
											"end": 13886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13273,
											"end": 13276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13302,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 13350,
											"end": 13355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 13302,
											"end": 13356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13356,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 13302,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 13451,
											"end": 13457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13449,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 13372,
											"end": 13458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13458,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 13372,
											"end": 13458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13365,
											"end": 13458,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13365,
											"end": 13458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 13532,
											"end": 13537,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 13482,
											"end": 13538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13538,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 13482,
											"end": 13538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13561,
											"end": 13568,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13592,
											"end": 13593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13602,
											"end": 13608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13599,
											"end": 13600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13596,
											"end": 13609,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13678,
											"end": 13684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13685,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13705,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 13764,
											"end": 13767,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13749,
											"end": 13762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13705,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 13705,
											"end": 13768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13705,
											"end": 13768,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 13705,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13698,
											"end": 13768,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 13698,
											"end": 13768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13791,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 13844,
											"end": 13850,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13791,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 13791,
											"end": 13851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13791,
											"end": 13851,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 13791,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13781,
											"end": 13851,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13781,
											"end": 13851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13637,
											"end": 13861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13625,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13621,
											"end": 13622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13617,
											"end": 13626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13612,
											"end": 13626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13612,
											"end": 13626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 13577,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13877,
											"end": 13880,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13870,
											"end": 13880,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13870,
											"end": 13880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13886,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13892,
											"end": 14265,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 13892,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14035,
											"end": 14039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14075,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14062,
											"end": 14071,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14058,
											"end": 14076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14116,
											"end": 14120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14112,
											"end": 14132,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14097,
											"end": 14106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14093,
											"end": 14110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14086,
											"end": 14133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14150,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 14253,
											"end": 14257,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14244,
											"end": 14250,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14150,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14150,
											"end": 14258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14150,
											"end": 14258,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 14150,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13892,
											"end": 14265,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13892,
											"end": 14265,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13892,
											"end": 14265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13892,
											"end": 14265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13892,
											"end": 14265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14339,
											"end": 14345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14347,
											"end": 14353,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14396,
											"end": 14398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14384,
											"end": 14393,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14375,
											"end": 14382,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14371,
											"end": 14394,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14367,
											"end": 14399,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14483,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 14364,
											"end": 14483,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14402,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 14402,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 14402,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14402,
											"end": 14481,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 14402,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14483,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 14364,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14522,
											"end": 14523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14547,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 14592,
											"end": 14599,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14583,
											"end": 14589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14572,
											"end": 14581,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14568,
											"end": 14590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14547,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 14547,
											"end": 14600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14547,
											"end": 14600,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 14547,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14537,
											"end": 14600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14537,
											"end": 14600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14493,
											"end": 14610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14649,
											"end": 14651,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 14720,
											"end": 14727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14711,
											"end": 14717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14700,
											"end": 14709,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14696,
											"end": 14718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 14675,
											"end": 14728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 14675,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14665,
											"end": 14728,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14665,
											"end": 14728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14620,
											"end": 14738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14931,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 14751,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14799,
											"end": 14876,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14796,
											"end": 14797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14789,
											"end": 14877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 14893,
											"end": 14894,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14886,
											"end": 14901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14917,
											"end": 14918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14910,
											"end": 14925,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14937,
											"end": 15257,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 14937,
											"end": 15257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14981,
											"end": 14987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15018,
											"end": 15019,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 15012,
											"end": 15016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15008,
											"end": 15020,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14998,
											"end": 15020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14998,
											"end": 15020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15066,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15059,
											"end": 15063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15067,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 15076,
											"end": 15157,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15142,
											"end": 15146,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 15134,
											"end": 15140,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15130,
											"end": 15147,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15120,
											"end": 15147,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15120,
											"end": 15147,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15157,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 15076,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15204,
											"end": 15206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15193,
											"end": 15207,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15170,
											"end": 15208,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15167,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 15167,
											"end": 15251,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15223,
											"end": 15241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 15223,
											"end": 15241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 15223,
											"end": 15241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15223,
											"end": 15241,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 15223,
											"end": 15241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15167,
											"end": 15251,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 15167,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14988,
											"end": 15257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14937,
											"end": 15257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14937,
											"end": 15257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14937,
											"end": 15257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14937,
											"end": 15257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15412,
											"end": 15416,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15450,
											"end": 15452,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15439,
											"end": 15448,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15435,
											"end": 15453,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15427,
											"end": 15453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15427,
											"end": 15453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 15531,
											"end": 15532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15520,
											"end": 15529,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15516,
											"end": 15533,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15507,
											"end": 15513,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 15463,
											"end": 15534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15534,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 15463,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15544,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 15612,
											"end": 15614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15601,
											"end": 15610,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15597,
											"end": 15615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15544,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 15544,
											"end": 15616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15544,
											"end": 15616,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 15544,
											"end": 15616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 15694,
											"end": 15696,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15683,
											"end": 15692,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15670,
											"end": 15676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 15626,
											"end": 15698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15698,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 15626,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15263,
											"end": 15705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15711,
											"end": 15891,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 15711,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15759,
											"end": 15836,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15756,
											"end": 15757,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15749,
											"end": 15837,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15860,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 15853,
											"end": 15854,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15846,
											"end": 15861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15880,
											"end": 15884,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15877,
											"end": 15878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15885,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 16088,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 15897,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15937,
											"end": 15940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15956,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 15974,
											"end": 15975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15956,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 15956,
											"end": 15976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15956,
											"end": 15976,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 15956,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15951,
											"end": 15976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15951,
											"end": 15976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15990,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 16008,
											"end": 16009,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15990,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 15990,
											"end": 16010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15990,
											"end": 16010,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 15990,
											"end": 16010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15985,
											"end": 16010,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15985,
											"end": 16010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16030,
											"end": 16031,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16026,
											"end": 16035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16019,
											"end": 16035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16019,
											"end": 16035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16054,
											"end": 16057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16051,
											"end": 16052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16058,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16045,
											"end": 16081,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16045,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 16045,
											"end": 16081,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16061,
											"end": 16079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 16061,
											"end": 16079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 16061,
											"end": 16079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16061,
											"end": 16079,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 16061,
											"end": 16079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16045,
											"end": 16081,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 16045,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 16088,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 16088,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 16088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 16088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 16088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16094,
											"end": 16274,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 16094,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16142,
											"end": 16219,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16139,
											"end": 16140,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16220,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16239,
											"end": 16243,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 16236,
											"end": 16237,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16229,
											"end": 16244,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16263,
											"end": 16267,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16260,
											"end": 16261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16253,
											"end": 16268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16280,
											"end": 16452,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 16280,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16420,
											"end": 16444,
											"name": "PUSH",
											"source": 13,
											"value": "4164647265737320616C72656164792065786973747300000000000000000000"
										},
										{
											"begin": 16416,
											"end": 16417,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16408,
											"end": 16414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16404,
											"end": 16418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16397,
											"end": 16445,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16280,
											"end": 16452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16280,
											"end": 16452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16824,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 16458,
											"end": 16824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16600,
											"end": 16603,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 16685,
											"end": 16687,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 16680,
											"end": 16683,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16621,
											"end": 16688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 16621,
											"end": 16688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16621,
											"end": 16688,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 16621,
											"end": 16688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16614,
											"end": 16688,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16614,
											"end": 16688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16697,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 16786,
											"end": 16789,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16697,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 16697,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16697,
											"end": 16790,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 16697,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16815,
											"end": 16817,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16810,
											"end": 16813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16806,
											"end": 16818,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16799,
											"end": 16818,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16799,
											"end": 16818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16824,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16830,
											"end": 17249,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 16830,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16996,
											"end": 17000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17023,
											"end": 17032,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17019,
											"end": 17037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17011,
											"end": 17037,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17011,
											"end": 17037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17081,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17073,
											"end": 17093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17069,
											"end": 17070,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17058,
											"end": 17067,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17054,
											"end": 17071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17047,
											"end": 17094,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17111,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 17237,
											"end": 17241,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17111,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 17111,
											"end": 17242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17111,
											"end": 17242,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 17111,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17103,
											"end": 17242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17103,
											"end": 17242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16830,
											"end": 17249,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16830,
											"end": 17249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16830,
											"end": 17249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16830,
											"end": 17249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17488,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 17255,
											"end": 17488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17294,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17317,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 17335,
											"end": 17340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17317,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 17317,
											"end": 17341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17317,
											"end": 17341,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 17317,
											"end": 17341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17308,
											"end": 17341,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17308,
											"end": 17341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17363,
											"end": 17429,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17356,
											"end": 17361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17353,
											"end": 17430,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 17350,
											"end": 17453,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 17433,
											"end": 17451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17453,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 17350,
											"end": 17453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17480,
											"end": 17481,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17473,
											"end": 17478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17469,
											"end": 17482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17462,
											"end": 17482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17462,
											"end": 17482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17642,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 17494,
											"end": 17642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17633,
											"end": 17636,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17618,
											"end": 17636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17618,
											"end": 17636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17642,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17642,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 18038,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 17648,
											"end": 18038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17754,
											"end": 17757,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17782,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 17815,
											"end": 17820,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17782,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 17782,
											"end": 17821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17782,
											"end": 17821,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 17782,
											"end": 17821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 17919,
											"end": 17925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17914,
											"end": 17917,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 17837,
											"end": 17926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17926,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 17837,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17830,
											"end": 17926,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17830,
											"end": 17926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17935,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 17993,
											"end": 17999,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17988,
											"end": 17991,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17981,
											"end": 17985,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17974,
											"end": 17979,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17970,
											"end": 17986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17935,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 17935,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17935,
											"end": 18000,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 17935,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18025,
											"end": 18031,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18023,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18016,
											"end": 18032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18009,
											"end": 18032,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18009,
											"end": 18032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17758,
											"end": 18038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 18038,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 18038,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 18038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 18038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 18038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18224,
											"end": 18227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 18337,
											"end": 18340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18328,
											"end": 18334,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18246,
											"end": 18341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 18246,
											"end": 18341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18246,
											"end": 18341,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 18246,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18239,
											"end": 18341,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18239,
											"end": 18341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18358,
											"end": 18453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 18449,
											"end": 18452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18440,
											"end": 18446,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18358,
											"end": 18453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 18358,
											"end": 18453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18358,
											"end": 18453,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 18358,
											"end": 18453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18351,
											"end": 18453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18351,
											"end": 18453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18470,
											"end": 18473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18463,
											"end": 18473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18463,
											"end": 18473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18044,
											"end": 18479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18583,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 18485,
											"end": 18583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18536,
											"end": 18542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18570,
											"end": 18575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18564,
											"end": 18576,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18554,
											"end": 18576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18554,
											"end": 18576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18583,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18583,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18485,
											"end": 18583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18757,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 18589,
											"end": 18757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 18683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18706,
											"end": 18712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18701,
											"end": 18704,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18694,
											"end": 18713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18746,
											"end": 18750,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18741,
											"end": 18744,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18737,
											"end": 18751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18757,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18757,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 19136,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 18763,
											"end": 19136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18849,
											"end": 18852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18877,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 18909,
											"end": 18914,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18877,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 18877,
											"end": 18915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18877,
											"end": 18915,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 18877,
											"end": 18915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18931,
											"end": 19001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 18994,
											"end": 19000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 18992,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18931,
											"end": 19001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 18931,
											"end": 19001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18931,
											"end": 19001,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 18931,
											"end": 19001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18924,
											"end": 19001,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18924,
											"end": 19001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19010,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 19068,
											"end": 19074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19063,
											"end": 19066,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19056,
											"end": 19060,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19049,
											"end": 19054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19045,
											"end": 19061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19010,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 19010,
											"end": 19075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19010,
											"end": 19075,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 19010,
											"end": 19075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 19122,
											"end": 19128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 19100,
											"end": 19129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19129,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 19100,
											"end": 19129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19095,
											"end": 19098,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19091,
											"end": 19130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19084,
											"end": 19130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19084,
											"end": 19130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18853,
											"end": 19136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 19136,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 19136,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 19136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 19136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 19136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19337,
											"end": 19341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19375,
											"end": 19378,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 19364,
											"end": 19373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19360,
											"end": 19379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19352,
											"end": 19379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19352,
											"end": 19379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19389,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 19457,
											"end": 19458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19446,
											"end": 19455,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19442,
											"end": 19459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19433,
											"end": 19439,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19389,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 19389,
											"end": 19460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19389,
											"end": 19460,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 19389,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19470,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 19538,
											"end": 19540,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19527,
											"end": 19536,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19523,
											"end": 19541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19514,
											"end": 19520,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19470,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 19470,
											"end": 19542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19470,
											"end": 19542,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 19470,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19552,
											"end": 19624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 19620,
											"end": 19622,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19609,
											"end": 19618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19605,
											"end": 19623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19596,
											"end": 19602,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19552,
											"end": 19624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 19552,
											"end": 19624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19552,
											"end": 19624,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 19552,
											"end": 19624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19671,
											"end": 19680,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19665,
											"end": 19669,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19661,
											"end": 19681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19656,
											"end": 19658,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 19645,
											"end": 19654,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19634,
											"end": 19682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19699,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 19770,
											"end": 19774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19761,
											"end": 19767,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19699,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 19699,
											"end": 19775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19699,
											"end": 19775,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 19699,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19691,
											"end": 19775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19691,
											"end": 19775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19929,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 19788,
											"end": 19929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 19849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19875,
											"end": 19881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19869,
											"end": 19882,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19860,
											"end": 19882,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19860,
											"end": 19882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19891,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 19917,
											"end": 19922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19891,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 19891,
											"end": 19923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19891,
											"end": 19923,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 19891,
											"end": 19923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19929,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19929,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 20284,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 19935,
											"end": 20284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20004,
											"end": 20010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20053,
											"end": 20055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20041,
											"end": 20050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20032,
											"end": 20039,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20028,
											"end": 20051,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20024,
											"end": 20056,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 20021,
											"end": 20140,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20021,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 20021,
											"end": 20140,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 20059,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 20059,
											"end": 20138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20138,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 20059,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20021,
											"end": 20140,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 20021,
											"end": 20140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20179,
											"end": 20180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20204,
											"end": 20267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 20259,
											"end": 20266,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20250,
											"end": 20256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20239,
											"end": 20248,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20235,
											"end": 20257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 20204,
											"end": 20267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20267,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 20204,
											"end": 20267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20267,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20150,
											"end": 20277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 20284,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 20284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 20284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 20284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 20284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20290,
											"end": 20470,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 20290,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20338,
											"end": 20415,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20335,
											"end": 20336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20328,
											"end": 20416,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20435,
											"end": 20439,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 20432,
											"end": 20433,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20425,
											"end": 20440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20459,
											"end": 20463,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20456,
											"end": 20457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20449,
											"end": 20464,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20597,
											"end": 20601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20635,
											"end": 20637,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20624,
											"end": 20633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20620,
											"end": 20638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20612,
											"end": 20638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20612,
											"end": 20638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20648,
											"end": 20719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 20716,
											"end": 20717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20714,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20701,
											"end": 20718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20692,
											"end": 20698,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20648,
											"end": 20719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 20648,
											"end": 20719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20648,
											"end": 20719,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 20648,
											"end": 20719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20729,
											"end": 20801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 20797,
											"end": 20799,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20786,
											"end": 20795,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20782,
											"end": 20800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20773,
											"end": 20779,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20729,
											"end": 20801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 20729,
											"end": 20801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20729,
											"end": 20801,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 20729,
											"end": 20801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventQuestGame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addressExists(address)": "a5025222",
							"addressInfoMapFalse(uint256)": "fec2b9ee",
							"addressInfoMapTrue(uint256)": "b0141b14",
							"addressKeys(uint256)": "2f233b73",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getAddressesByValue(bool)": "cf5f19d3",
							"getAllAddresses()": "9516a104",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFTs(bool)": "60e564f6",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pushAddress(bool)": "6ea2351a",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalAddresses()": "cfad5277",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"someValue\",\"type\":\"bool\"}],\"name\":\"AddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressInfoMapFalse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"someValue\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressInfoMapTrue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"someValue\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"desiredValue\",\"type\":\"bool\"}],\"name\":\"getAddressesByValue\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAddresses\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"answer\",\"type\":\"bool\"}],\"name\":\"mintNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"someValue\",\"type\":\"bool\"}],\"name\":\"pushAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTEventQuestGame.sol\":\"NFTEventVoteGame\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTEventQuestGame.sol\":{\"keccak256\":\"0xc2b6af177b9351f0976fa2f4ced5c7fcc83b823a0ee77d8b934f72c4942d1fad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a677446dda586b3cad48cbe6588d94872b252ee15796ffe7e540898138c7007\",\"dweb:/ipfs/QmPxmjGCc6WF1uqpr2aiCiNZb5c8Xf1Y6mrUjffsfvzg9Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2939,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "totalAddresses",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2941,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "uri",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 2948,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "addressExists",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2953,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "addressInfoMapTrue",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(AddressInfo)2944_storage)"
							},
							{
								"astId": 2958,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "addressInfoMapFalse",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_struct(AddressInfo)2944_storage)"
							},
							{
								"astId": 2961,
								"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
								"label": "addressKeys",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(AddressInfo)2944_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressInfo)2944_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressInfo)2944_storage": {
								"encoding": "inplace",
								"label": "struct NFTEventVoteGame.AddressInfo",
								"members": [
									{
										"astId": 2943,
										"contract": "contracts/NFTEventQuestGame.sol:NFTEventVoteGame",
										"label": "someValue",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1478
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1479,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1478,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1478,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1478
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1478
						],
						"ERC165": [
							1757
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1769
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1733
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1457,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1479,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1478,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1734,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1733,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1758,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1769,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1757,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1478,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1757,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1456,
								1410,
								1757,
								1769,
								1478
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1733,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1756,
										1768
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1456",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1756,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1757,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1769,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1546,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10008:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10022:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10018:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10040:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10054:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10114:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10146:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10138:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10184:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10180:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10213:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10227:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9970:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:2"
									},
									"scope": 1293,
									"src": "9955:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10690:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10710:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10700:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10652:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:2"
									},
									"scope": 1293,
									"src": "10633:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11038:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11115:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11124:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11076:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:2"
									},
									"scope": 1293,
									"src": "10954:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11503:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11513:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11587:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11620:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11664:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11634:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:2"
									},
									"scope": 1293,
									"src": "11462:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12084:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12098:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12094:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12116:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12130:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12190:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12222:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12260:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12362:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12358:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12385:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12427:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12433:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12442:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12399:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12256:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12289:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12333:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12303:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1293,
									"src": "12013:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13481:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13491:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13443:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:2"
									},
									"scope": 1293,
									"src": "13406:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13873:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13899:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13883:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13808:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:2"
									},
									"scope": 1293,
									"src": "13771:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14488:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14498:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:2"
									},
									"scope": 1293,
									"src": "14418:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14814:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14880:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14876:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14913:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14927:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14957:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14943:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15093:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15115:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15124:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15150:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15157:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15133:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15089:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15164:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15211:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15245:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15260:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15292:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15299:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15303:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15283:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15373:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14738:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:2"
									},
									"scope": 1293,
									"src": "14720:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15684:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15694:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15722:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15765:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15736:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15794:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15813:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15820:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15832:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15877:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15855:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15850:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15634:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:2"
									},
									"scope": 1293,
									"src": "15591:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16210:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16220:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16245:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16267:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16263:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16288:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16302:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16367:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16360:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16161:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16201:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:2"
									},
									"scope": 1293,
									"src": "16138:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17020:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17030:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17054:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17168:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17190:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17200:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17200:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17186:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17243:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17294:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17153:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:2"
																	},
																	"src": "17144:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17359:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17381:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17480:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:2",
																								"nodeType": "YulBlock",
																								"src": "17566:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:2"
																													},
																													"nativeSrc": "17599:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:2"
																													},
																													"nativeSrc": "17616:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:2"
																											},
																											"nativeSrc": "17592:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:2"
																										},
																										"nativeSrc": "17592:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17377:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17401:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17452:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17338:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:2"
																	},
																	"src": "17331:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "17109:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17123:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17129:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17138:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17088:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17072:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17072:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17068:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16964:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16976:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16993:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:2"
									},
									"scope": 1293,
									"src": "16918:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16926:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17596:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1769
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 1770,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1769,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1769,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								1769
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1411,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1434,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:5"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1410,
								1769
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1456,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1456,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1456,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1478
						]
					},
					"id": 1479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1478,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1478,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1479,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2823
						],
						"SignedMath": [
							2928
						],
						"Strings": [
							1733
						]
					},
					"id": 1734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1734,
							"sourceUnit": 2824,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1481,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2823,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1734,
							"sourceUnit": 2929,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1483,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2928,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1485,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1733,
							"linearizedBaseContracts": [
								1733
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1488,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1733,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1486,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1491,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1733,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1489,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1490,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1498,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1507
														],
														"declarations": [
															{
																"constant": false,
																"id": 1507,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1544,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1510,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1508,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2823,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2823_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2643,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1516
														],
														"declarations": [
															{
																"constant": false,
																"id": 1516,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1544,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1515,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1521,
														"initialValue": {
															"arguments": [
																{
																	"id": 1519,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1517,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1523
														],
														"declarations": [
															{
																"constant": false,
																"id": 1523,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1544,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1524,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "930:67:7",
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nativeSrc": "948:35:7",
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:7",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nativeSrc": "967:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1523,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1525,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1540,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1527,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1523,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1529,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:7",
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nativeSrc": "1164:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nativeSrc": "1159:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nativeSrc": "1146:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nativeSrc": "1146:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1488,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1523,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1501,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1530,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1534,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1539,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1538,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1541,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1542,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1505,
														"id": 1543,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1733,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1549,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1564,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2928,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2928_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2927,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1563,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1554,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1553,
												"id": 1570,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1548,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1733,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1590,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1575,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1584,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1575,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1582,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2823,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2823_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2765,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1580,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1592,
																	1675,
																	1695
																],
																"referencedDeclaration": 1675,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1579,
														"id": 1589,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1733,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"id": 1604,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1595,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1606,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1611,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1608,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1617,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1619,
														"indexExpression": {
															"hexValue": "30",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1623,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1625,
														"indexExpression": {
															"hexValue": "31",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1657,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1643,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1645,
																	"indexExpression": {
																		"id": 1644,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1646,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1488,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1650,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1647,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1652,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1653,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1656,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1637,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1658,
												"initializationExpression": {
													"assignments": [
														1630
													],
													"declarations": [
														{
															"constant": false,
															"id": 1630,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1658,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1629,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1636,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1632,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1640,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1642,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1659,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1668,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1667,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1663,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1664,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1662,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1666,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1671,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1669,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1601,
												"id": 1673,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1599,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1733,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1688,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1678,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1686,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1684,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1691,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1683,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1592,
															1675,
															1695
														],
														"referencedDeclaration": 1675,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1693,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1733,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1707,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1705,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1712,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1710,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1719,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1717,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1716,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1725,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1700,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1723,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1722,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1704,
												"id": 1730,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1697,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1699,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1733,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1734,
							"src": "251:2847:7",
							"usedErrors": [
								1498
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1757
						],
						"IERC165": [
							1769
						]
					},
					"id": 1758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1758,
							"sourceUnit": 1770,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1736,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1769,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1739,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1769,
										"src": "687:7:8"
									},
									"id": 1740,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1738,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1757,
							"linearizedBaseContracts": [
								1757,
								1769
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1768
									],
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1748,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1750,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1769_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1769_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1749,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1769",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1747,
												"id": 1754,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1757,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1758,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1769
						]
					},
					"id": 1770,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1759,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1760,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1769,
							"linearizedBaseContracts": [
								1769
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1762,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1769,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1770,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2823
						]
					},
					"id": 2824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1771,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1772,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2823,
							"linearizedBaseContracts": [
								2823
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1775,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1780,
									"members": [
										{
											"id": 1776,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1777,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1778,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1779,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1810,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1793
														],
														"declarations": [
															{
																"constant": false,
																"id": 1793,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1810,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1792,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1797,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1795,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1799,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1805,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1803,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1791,
															"id": 1804,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1807,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1793,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1808,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1791,
														"id": 1809,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2823,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1831,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1829,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1823,
															"id": 1830,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1833,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1834,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1836,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1823,
														"id": 1837,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2823,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1880,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1843,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1851,
															"id": 1858,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1861
														],
														"declarations": [
															{
																"constant": false,
																"id": 1861,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1880,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1860,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1865,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1862,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1843,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1863,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1866,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1867,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1869,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1875,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1873,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1851,
															"id": 1874,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1877,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1851,
														"id": 1879,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2823,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1908,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1894,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1901,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1899,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1893,
															"id": 1900,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1903,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1904,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1906,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1893,
														"id": 1907,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2823,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1936,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1922,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1921,
															"id": 1928,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1931,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1932,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1934,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1921,
														"id": 1935,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1917,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2823,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1948,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1949,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1952,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1951,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1947,
												"id": 1954,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2823,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1966,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1967,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1970,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1969,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1972,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2823,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1984,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1985,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1987,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1988,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1989,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1979,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1991,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1995,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2823,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2015,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 2014,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2010,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2011,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2006,
															"id": 2013,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2016,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2020,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2000,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2023,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2024,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2006,
												"id": 2029,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2823,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2155,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2044
														],
														"declarations": [
															{
																"constant": false,
																"id": 2044,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2155,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2043,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2048,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2045,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2046,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2050
														],
														"declarations": [
															{
																"constant": false,
																"id": 2050,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2155,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2049,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2051,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2050,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2034,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2036,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2052,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2061,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2060,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2056,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2057,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2038,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2042,
																	"id": 2059,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2062,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2063,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2068,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2065,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1775,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2067,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2071
														],
														"declarations": [
															{
																"constant": false,
																"id": 2071,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2155,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2070,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2072,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2050,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2050,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2034,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2036,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2073,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2075
														],
														"declarations": [
															{
																"constant": false,
																"id": 2075,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2155,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2082,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2076,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2078,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2038,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2080,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2083,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2084,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2085,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2086,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2089,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2091
														],
														"declarations": [
															{
																"constant": false,
																"id": 2091,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2155,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2090,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2098,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2093,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2038,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2099,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2101,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2102,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2106,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2110,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2148,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2149,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2152,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2153,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2042,
														"id": 2154,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2823,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2173
												],
												"declarations": [
													{
														"constant": false,
														"id": 2173,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2179,
												"initialValue": {
													"arguments": [
														{
															"id": 2175,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2176,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2177,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2174,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2157,
															2200
														],
														"referencedDeclaration": 2157,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2181,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1780",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1780",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2180,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2822,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2184,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2185,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2186,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2183,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2191,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2197,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2173,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2171,
												"id": 2198,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1780",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2165,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1780,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1780",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2823,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2208,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2214,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2207,
															"id": 2212,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2311,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2225,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2219,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2218,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2479,
																			2514
																		],
																		"referencedDeclaration": 2479,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2310,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2226,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2227,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2228,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2229,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2232,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2236,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2237,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2238,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2239,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2240,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2243,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2247,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2248,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2249,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2250,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2251,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2254,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2258,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2259,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2260,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2261,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2262,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2265,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2269,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2270,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2271,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2272,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2273,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2276,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2281,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2282,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2283,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2284,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2287,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2291,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2292,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2293,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2294,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2295,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2298,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2302,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2304,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2305,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2306,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2303,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2207,
														"id": 2309,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2823,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2345,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2324
														],
														"declarations": [
															{
																"constant": false,
																"id": 2324,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2345,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2323,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2328,
														"initialValue": {
															"arguments": [
																{
																	"id": 2326,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2325,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2312,
																	2347
																],
																"referencedDeclaration": 2312,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2329,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2324,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2331,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2318,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2330,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2822,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2335,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2333,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2324,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2334,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2324,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2336,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2315,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2322,
														"id": 2344,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1780",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2317,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2316,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1780,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1780",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2823,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2478,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2356
												],
												"declarations": [
													{
														"constant": false,
														"id": 2356,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2478,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2358,
												"initialValue": {
													"hexValue": "30",
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2475,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2359,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2373,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2372,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2367,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2368,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2371,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2374,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2388,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2387,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2379,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2382,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2383,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2386,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2389,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2403,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2402,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2394,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2397,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2398,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2401,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2418,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2417,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2409,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2412,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2413,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2416,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2419,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2433,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2432,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2424,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2427,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2428,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2431,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2448,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2447,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2439,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2442,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2443,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2446,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2463,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2462,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2454,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2457,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2458,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2461,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2474,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2473,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2469,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2472,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2476,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2356,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2354,
												"id": 2477,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2823,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2512,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2491
														],
														"declarations": [
															{
																"constant": false,
																"id": 2491,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2512,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2495,
														"initialValue": {
															"arguments": [
																{
																	"id": 2493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2492,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2479,
																	2514
																],
																"referencedDeclaration": 2479,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2496,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2491,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2498,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2485,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2497,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2822,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2500,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2501,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2491,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2503,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2482,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2489,
														"id": 2511,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1780",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2483,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1780,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1780",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2823,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2523
												],
												"declarations": [
													{
														"constant": false,
														"id": 2523,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2642,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2525,
												"initialValue": {
													"hexValue": "30",
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2639,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2526,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2542,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2541,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2536,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2537,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2543,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2548,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2560,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2576,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2575,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2571,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2577,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2593,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2592,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2582,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2587,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2588,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2591,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2610,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2609,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2599,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2604,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2605,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2608,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2611,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2627,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2626,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2616,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2517,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2621,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2622,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2625,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2628,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2638,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2637,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2633,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2636,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2640,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2523,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2521,
												"id": 2641,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2823,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2676,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2655
														],
														"declarations": [
															{
																"constant": false,
																"id": 2655,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2676,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2654,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2659,
														"initialValue": {
															"arguments": [
																{
																	"id": 2657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2646,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2656,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2643,
																	2678
																],
																"referencedDeclaration": 2643,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2662,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2649,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2661,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2822,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2664,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2665,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2655,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2667,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2646,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2673,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2653,
														"id": 2675,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2644,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1780",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2647,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1780,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1780",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2823,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2687
												],
												"declarations": [
													{
														"constant": false,
														"id": 2687,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2689,
												"initialValue": {
													"hexValue": "30",
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2761,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2703,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2687,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2719,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2718,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2687,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2734,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2733,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2687,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2749,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2748,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2687,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2750,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2760,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2759,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2755,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2687,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2758,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2762,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2687,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2685,
												"id": 2763,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2823,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2802,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2801,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2777
														],
														"declarations": [
															{
																"constant": false,
																"id": 2777,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2801,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2781,
														"initialValue": {
															"arguments": [
																{
																	"id": 2779,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2778,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2765,
																	2803
																],
																"referencedDeclaration": 2765,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2782,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2777,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2784,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2771,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1780",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2783,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2822,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1780_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2791,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2786,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2789,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2787,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2777,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2788,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2790,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2792,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2768,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2798,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2775,
														"id": 2800,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1780",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2769,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1780,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1780",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2823,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2821,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2814,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1780",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1780",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2812,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2811,
												"id": 2820,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2804,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1780",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2805,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1780,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1780,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1780",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2823,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2824,
							"src": "203:14914:10",
							"usedErrors": [
								1775
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2928
						]
					},
					"id": 2929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2826,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2928,
							"linearizedBaseContracts": [
								2928
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2843,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2836,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2829,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2837,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2831,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2840,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2831,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2839,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2835,
												"id": 2842,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2828,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2830,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2833,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 2928,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2854,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2855,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2857,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2860,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2846,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2848,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2851,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 2928,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													2873
												],
												"declarations": [
													{
														"constant": false,
														"id": 2873,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2905,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2872,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2886,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2874,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2865,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2875,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2877,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2878,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2865,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2879,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2867,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2881,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2884,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2887,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2873,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2892,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2873,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2891,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2890,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2888,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2897,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2865,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2898,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2867,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2900,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2902,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2904,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2869,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 2928,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 2925,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2916,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 2920,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2909,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 2919,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2909,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2914,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2913,
														"id": 2924,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2907,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2908,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 2928,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2929,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			},
			"contracts/NFTEventQuestGame.sol": {
				"ast": {
					"absolutePath": "contracts/NFTEventQuestGame.sol",
					"exportedSymbols": {
						"Context": [
							1478
						],
						"ERC165": [
							1757
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1769
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"NFTEventVoteGame": [
							3238
						],
						"Ownable": [
							147
						],
						"Strings": [
							1733
						]
					},
					"id": 3239,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3239,
							"sourceUnit": 1294,
							"src": "58:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3239,
							"sourceUnit": 148,
							"src": "116:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2933,
										"name": "ERC721",
										"nameLocations": [
											"199:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "199:6:12"
									},
									"id": 2934,
									"nodeType": "InheritanceSpecifier",
									"src": "199:6:12"
								},
								{
									"baseName": {
										"id": 2935,
										"name": "Ownable",
										"nameLocations": [
											"207:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "207:7:12"
									},
									"id": 2936,
									"nodeType": "InheritanceSpecifier",
									"src": "207:7:12"
								}
							],
							"canonicalName": "NFTEventVoteGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3238,
							"linearizedBaseContracts": [
								3238,
								147,
								1293,
								237,
								1456,
								1410,
								1757,
								1769,
								1478
							],
							"name": "NFTEventVoteGame",
							"nameLocation": "179:16:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cfad5277",
									"id": 2939,
									"mutability": "mutable",
									"name": "totalAddresses",
									"nameLocation": "236:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3238,
									"src": "221:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "253:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2941,
									"mutability": "mutable",
									"name": "uri",
									"nameLocation": "275:3:12",
									"nodeType": "VariableDeclaration",
									"scope": 3238,
									"src": "260:18:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2940,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "260:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "NFTEventVoteGame.AddressInfo",
									"id": 2944,
									"members": [
										{
											"constant": false,
											"id": 2943,
											"mutability": "mutable",
											"name": "someValue",
											"nameLocation": "318:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2944,
											"src": "313:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2942,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "313:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressInfo",
									"nameLocation": "291:11:12",
									"nodeType": "StructDefinition",
									"scope": 3238,
									"src": "284:50:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5025222",
									"id": 2948,
									"mutability": "mutable",
									"name": "addressExists",
									"nameLocation": "372:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 3238,
									"src": "340:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2947,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2945,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "348:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "340:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2946,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "359:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0141b14",
									"id": 2953,
									"mutability": "mutable",
									"name": "addressInfoMapTrue",
									"nameLocation": "430:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 3238,
									"src": "391:57:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
										"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
									},
									"typeName": {
										"id": 2952,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2949,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "399:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "391:31:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
											"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2951,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2950,
												"name": "AddressInfo",
												"nameLocations": [
													"410:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2944,
												"src": "410:11:12"
											},
											"referencedDeclaration": 2944,
											"src": "410:11:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressInfo_$2944_storage_ptr",
												"typeString": "struct NFTEventVoteGame.AddressInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fec2b9ee",
									"id": 2958,
									"mutability": "mutable",
									"name": "addressInfoMapFalse",
									"nameLocation": "493:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 3238,
									"src": "454:58:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
										"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
									},
									"typeName": {
										"id": 2957,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2954,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "462:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "454:31:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
											"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2956,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2955,
												"name": "AddressInfo",
												"nameLocations": [
													"473:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2944,
												"src": "473:11:12"
											},
											"referencedDeclaration": 2944,
											"src": "473:11:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressInfo_$2944_storage_ptr",
												"typeString": "struct NFTEventVoteGame.AddressInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f233b73",
									"id": 2961,
									"mutability": "mutable",
									"name": "addressKeys",
									"nameLocation": "535:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3238,
									"src": "518:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2959,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "518:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2960,
										"nodeType": "ArrayTypeName",
										"src": "518:9:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc45e233b2a26479f10617bab0f82a2b918c69827943f81cb847bd970a6d3400",
									"id": 2969,
									"name": "AddressAdded",
									"nameLocation": "559:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "588:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "572:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2965,
												"indexed": true,
												"mutability": "mutable",
												"name": "addressUser",
												"nameLocation": "613:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "597:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"indexed": false,
												"mutability": "mutable",
												"name": "someValue",
												"nameLocation": "631:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "626:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "626:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:70:12"
									},
									"src": "553:89:12"
								},
								{
									"body": {
										"id": 2991,
										"nodeType": "Block",
										"src": "808:34:12",
										"statements": [
											{
												"expression": {
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2987,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "822:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2988,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2977,
														"src": "827:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "822:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2990,
												"nodeType": "ExpressionStatement",
												"src": "822:9:12"
											}
										]
									},
									"id": 2992,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2980,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2973,
													"src": "762:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2981,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2975,
													"src": "769:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2982,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2979,
												"name": "ERC721",
												"nameLocations": [
													"755:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "755:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "755:22:12"
										},
										{
											"arguments": [
												{
													"id": 2984,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2971,
													"src": "794:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2985,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2983,
												"name": "Ownable",
												"nameLocations": [
													"786:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "786:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "786:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "668:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "660:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "696:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "682:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2972,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "682:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "717:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "703:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "740:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "726:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:86:12"
									},
									"returnParameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:12"
									},
									"scope": 3238,
									"src": "648:194:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "894:443:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "912:26:12",
															"subExpression": {
																"baseExpression": {
																	"id": 2998,
																	"name": "addressExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2948,
																	"src": "913:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3001,
																"indexExpression": {
																	"expression": {
																		"id": 2999,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "927:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "931:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "927:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "913:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c726561647920657869737473",
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "940:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0",
																"typeString": "literal_string \"Address already exists\""
															},
															"value": "Address already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e965fdb7b16a3f4f14198070d028fb3bb36e98eebe579c3925cf405ea3f22f0",
																"typeString": "literal_string \"Address already exists\""
															}
														],
														"id": 2997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "904:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3005,
												"nodeType": "ExpressionStatement",
												"src": "904:61:12"
											},
											{
												"assignments": [
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "984:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 3050,
														"src": "976:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3006,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "976:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3009,
												"initialValue": {
													"id": 3008,
													"name": "totalAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2939,
													"src": "994:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "976:32:12"
											},
											{
												"expression": {
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3010,
															"name": "addressExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "1018:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3013,
														"indexExpression": {
															"expression": {
																"id": 3011,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1032:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1036:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1032:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1018:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1046:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1018:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3016,
												"nodeType": "ExpressionStatement",
												"src": "1018:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "1077:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3017,
															"name": "addressKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "1060:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1072:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1060:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3022,
												"nodeType": "ExpressionStatement",
												"src": "1060:25:12"
											},
											{
												"assignments": [
													3025
												],
												"declarations": [
													{
														"constant": false,
														"id": 3025,
														"mutability": "mutable",
														"name": "newAddressInfo",
														"nameLocation": "1115:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 3050,
														"src": "1096:33:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressInfo_$2944_memory_ptr",
															"typeString": "struct NFTEventVoteGame.AddressInfo"
														},
														"typeName": {
															"id": 3024,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3023,
																"name": "AddressInfo",
																"nameLocations": [
																	"1096:11:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2944,
																"src": "1096:11:12"
															},
															"referencedDeclaration": 2944,
															"src": "1096:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressInfo_$2944_storage_ptr",
																"typeString": "struct NFTEventVoteGame.AddressInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3029,
												"initialValue": {
													"arguments": [
														{
															"id": 3027,
															"name": "someValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2994,
															"src": "1144:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3026,
														"name": "AddressInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "1132:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_AddressInfo_$2944_storage_ptr_$",
															"typeString": "type(struct NFTEventVoteGame.AddressInfo storage pointer)"
														}
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressInfo_$2944_memory_ptr",
														"typeString": "struct NFTEventVoteGame.AddressInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1096:58:12"
											},
											{
												"expression": {
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"components": [
																{
																	"condition": {
																		"id": 3030,
																		"name": "someValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "1165:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3032,
																		"name": "addressInfoMapFalse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2958,
																		"src": "1198:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																			"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																		}
																	},
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1165:52:12",
																	"trueExpression": {
																		"id": 3031,
																		"name": "addressInfoMapTrue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2953,
																		"src": "1177:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																			"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																		"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																	}
																}
															],
															"id": 3034,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1164:54:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
															}
														},
														"id": 3036,
														"indexExpression": {
															"id": 3035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "1219:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1164:63:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressInfo_$2944_storage",
															"typeString": "struct NFTEventVoteGame.AddressInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3037,
														"name": "newAddressInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "1230:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressInfo_$2944_memory_ptr",
															"typeString": "struct NFTEventVoteGame.AddressInfo memory"
														}
													},
													"src": "1164:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressInfo_$2944_storage",
														"typeString": "struct NFTEventVoteGame.AddressInfo storage ref"
													}
												},
												"id": 3039,
												"nodeType": "ExpressionStatement",
												"src": "1164:80:12"
											},
											{
												"expression": {
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1255:16:12",
													"subExpression": {
														"id": 3040,
														"name": "totalAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "1255:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3042,
												"nodeType": "ExpressionStatement",
												"src": "1255:16:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3044,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "1299:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3045,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1308:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1312:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1308:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3047,
															"name": "someValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2994,
															"src": "1320:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3043,
														"name": "AddressAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2969,
														"src": "1286:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,bool)"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "EmitStatement",
												"src": "1281:49:12"
											}
										]
									},
									"functionSelector": "6ea2351a",
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pushAddress",
									"nameLocation": "857:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "someValue",
												"nameLocation": "874:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "869:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:16:12"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:0:12"
									},
									"scope": 3238,
									"src": "848:489:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3104,
										"nodeType": "Block",
										"src": "1383:378:12",
										"statements": [
											{
												"assignments": [
													3060
												],
												"declarations": [
													{
														"constant": false,
														"id": 3060,
														"mutability": "mutable",
														"name": "matchingAddresses",
														"nameLocation": "1410:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 3104,
														"src": "1393:34:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3058,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1393:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3059,
															"nodeType": "ArrayTypeName",
															"src": "1393:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3064,
												"initialValue": {
													"arguments": [
														{
															"id": 3062,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3053,
															"src": "1450:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3061,
														"name": "getAddressesByValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "1430:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (bool) view returns (address[] memory)"
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1393:64:12"
											},
											{
												"body": {
													"id": 3097,
													"nodeType": "Block",
													"src": "1523:179:12",
													"statements": [
														{
															"assignments": [
																3077
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3077,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "1545:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3097,
																	"src": "1537:15:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3076,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1537:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3081,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3078,
																	"name": "totalAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2939,
																	"src": "1555:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3079,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3066,
																	"src": "1572:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1555:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1537:36:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3083,
																			"name": "matchingAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3060,
																			"src": "1593:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3085,
																		"indexExpression": {
																			"id": 3084,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3066,
																			"src": "1611:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1593:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3086,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3077,
																		"src": "1615:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3082,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "1587:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1587:36:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3088,
															"nodeType": "ExpressionStatement",
															"src": "1587:36:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3090,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3077,
																		"src": "1655:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3091,
																			"name": "matchingAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3060,
																			"src": "1664:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3093,
																		"indexExpression": {
																			"id": 3092,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3066,
																			"src": "1682:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1664:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1686:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3089,
																	"name": "AddressAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "1642:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,address,bool)"
																	}
																},
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1642:49:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3096,
															"nodeType": "EmitStatement",
															"src": "1637:54:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3069,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "1488:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3070,
															"name": "matchingAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3060,
															"src": "1492:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1510:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1492:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1488:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3098,
												"initializationExpression": {
													"assignments": [
														3066
													],
													"declarations": [
														{
															"constant": false,
															"id": 3066,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1481:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3098,
															"src": "1473:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3065,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1473:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3068,
													"initialValue": {
														"hexValue": "30",
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1485:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1473:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1518:3:12",
														"subExpression": {
															"id": 3073,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "1518:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3075,
													"nodeType": "ExpressionStatement",
													"src": "1518:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1468:234:12"
											},
											{
												"expression": {
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3099,
														"name": "totalAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "1712:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 3100,
															"name": "matchingAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3060,
															"src": "1730:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1748:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1730:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1712:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3103,
												"nodeType": "ExpressionStatement",
												"src": "1712:42:12"
											}
										]
									},
									"functionSelector": "60e564f6",
									"id": 3105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFTs",
									"nameLocation": "1352:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "1366:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "1361:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1361:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:13:12"
									},
									"returnParameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:0:12"
									},
									"scope": 3238,
									"src": "1343:418:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 3113,
										"nodeType": "Block",
										"src": "1842:27:12",
										"statements": [
											{
												"expression": {
													"id": 3111,
													"name": "uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2941,
													"src": "1859:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3110,
												"id": 3112,
												"nodeType": "Return",
												"src": "1852:10:12"
											}
										]
									},
									"id": 3114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1776:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3107,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1809:8:12"
									},
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1784:2:12"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "1827:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1827:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:15:12"
									},
									"scope": 3238,
									"src": "1767:102:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3163,
										"nodeType": "Block",
										"src": "1940:318:12",
										"statements": [
											{
												"assignments": [
													3124
												],
												"declarations": [
													{
														"constant": false,
														"id": 3124,
														"mutability": "mutable",
														"name": "allAddresses",
														"nameLocation": "1964:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 3163,
														"src": "1950:26:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[]"
														},
														"typeName": {
															"baseType": {
																"id": 3122,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "1950:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3123,
															"nodeType": "ArrayTypeName",
															"src": "1950:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3130,
												"initialValue": {
													"arguments": [
														{
															"id": 3128,
															"name": "totalAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "1990:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1979:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bool[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3125,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "1983:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3126,
															"nodeType": "ArrayTypeName",
															"src": "1983:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														}
													},
													"id": 3129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1950:55:12"
											},
											{
												"assignments": [
													3135
												],
												"declarations": [
													{
														"constant": false,
														"id": 3135,
														"mutability": "mutable",
														"name": "selectedMap",
														"nameLocation": "2055:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 3163,
														"src": "2015:51:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
															"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
														},
														"typeName": {
															"id": 3134,
															"keyName": "",
															"keyNameLocation": "-1:-1:-1",
															"keyType": {
																"id": 3131,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2023:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "2015:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
															},
															"valueName": "",
															"valueNameLocation": "-1:-1:-1",
															"valueType": {
																"id": 3133,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3132,
																	"name": "AddressInfo",
																	"nameLocations": [
																		"2034:11:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2944,
																	"src": "2034:11:12"
																},
																"referencedDeclaration": 2944,
																"src": "2034:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressInfo_$2944_storage_ptr",
																	"typeString": "struct NFTEventVoteGame.AddressInfo"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3137,
												"initialValue": {
													"id": 3136,
													"name": "addressInfoMapTrue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2953,
													"src": "2069:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
														"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2015:72:12"
											},
											{
												"body": {
													"id": 3159,
													"nodeType": "Block",
													"src": "2143:80:12",
													"statements": [
														{
															"expression": {
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3148,
																		"name": "allAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "2157:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																			"typeString": "bool[] memory"
																		}
																	},
																	"id": 3150,
																	"indexExpression": {
																		"id": 3149,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3139,
																		"src": "2170:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2157:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3151,
																			"name": "selectedMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3135,
																			"src": "2175:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																				"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																			}
																		},
																		"id": 3155,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 3152,
																				"name": "addressKeys",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2961,
																				"src": "2187:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 3154,
																			"indexExpression": {
																				"id": 3153,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "2199:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2187:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2175:27:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressInfo_$2944_storage",
																			"typeString": "struct NFTEventVoteGame.AddressInfo storage ref"
																		}
																	},
																	"id": 3156,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2203:9:12",
																	"memberName": "someValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2943,
																	"src": "2175:37:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2157:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3158,
															"nodeType": "ExpressionStatement",
															"src": "2157:55:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3142,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "2118:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3143,
														"name": "totalAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "2122:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2118:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3160,
												"initializationExpression": {
													"assignments": [
														3139
													],
													"declarations": [
														{
															"constant": false,
															"id": 3139,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2111:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3160,
															"src": "2103:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3138,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2103:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3141,
													"initialValue": {
														"hexValue": "30",
														"id": 3140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2103:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2138:3:12",
														"subExpression": {
															"id": 3145,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "2138:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3147,
													"nodeType": "ExpressionStatement",
													"src": "2138:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2098:125:12"
											},
											{
												"expression": {
													"id": 3161,
													"name": "allAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3124,
													"src": "2239:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"functionReturnParameters": 3119,
												"id": 3162,
												"nodeType": "Return",
												"src": "2232:19:12"
											}
										]
									},
									"functionSelector": "9516a104",
									"id": 3164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllAddresses",
									"nameLocation": "1884:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:2:12"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3164,
												"src": "1925:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 3116,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "1925:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3117,
													"nodeType": "ArrayTypeName",
													"src": "1925:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:15:12"
									},
									"scope": 3238,
									"src": "1875:383:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3236,
										"nodeType": "Block",
										"src": "2351:621:12",
										"statements": [
											{
												"assignments": [
													3176
												],
												"declarations": [
													{
														"constant": false,
														"id": 3176,
														"mutability": "mutable",
														"name": "matchingAddresses",
														"nameLocation": "2378:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "2361:34:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3174,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2361:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3175,
															"nodeType": "ArrayTypeName",
															"src": "2361:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3182,
												"initialValue": {
													"arguments": [
														{
															"id": 3180,
															"name": "totalAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "2412:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2398:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2402:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3178,
															"nodeType": "ArrayTypeName",
															"src": "2402:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 3181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2361:66:12"
											},
											{
												"assignments": [
													3184
												],
												"declarations": [
													{
														"constant": false,
														"id": 3184,
														"mutability": "mutable",
														"name": "matchingCount",
														"nameLocation": "2445:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "2437:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3183,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2437:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3186,
												"initialValue": {
													"hexValue": "30",
													"id": 3185,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2461:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2437:25:12"
											},
											{
												"assignments": [
													3191
												],
												"declarations": [
													{
														"constant": false,
														"id": 3191,
														"mutability": "mutable",
														"name": "selectedMap",
														"nameLocation": "2513:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "2473:51:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
															"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
														},
														"typeName": {
															"id": 3190,
															"keyName": "",
															"keyNameLocation": "-1:-1:-1",
															"keyType": {
																"id": 3187,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2481:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "2473:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo)"
															},
															"valueName": "",
															"valueNameLocation": "-1:-1:-1",
															"valueType": {
																"id": 3189,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3188,
																	"name": "AddressInfo",
																	"nameLocations": [
																		"2492:11:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2944,
																	"src": "2492:11:12"
																},
																"referencedDeclaration": 2944,
																"src": "2492:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressInfo_$2944_storage_ptr",
																	"typeString": "struct NFTEventVoteGame.AddressInfo"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3197,
												"initialValue": {
													"components": [
														{
															"condition": {
																"id": 3192,
																"name": "desiredValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3166,
																"src": "2528:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 3194,
																"name": "addressInfoMapFalse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2958,
																"src": "2564:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																	"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																}
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2528:55:12",
															"trueExpression": {
																"id": 3193,
																"name": "addressInfoMapTrue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2953,
																"src": "2543:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																	"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
															}
														}
													],
													"id": 3196,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2527:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
														"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2473:111:12"
											},
											{
												"body": {
													"id": 3231,
													"nodeType": "Block",
													"src": "2640:208:12",
													"statements": [
														{
															"assignments": [
																3209
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3209,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "2662:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3231,
																	"src": "2654:15:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3208,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2654:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3213,
															"initialValue": {
																"baseExpression": {
																	"id": 3210,
																	"name": "addressKeys",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "2672:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 3212,
																"indexExpression": {
																	"id": 3211,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3199,
																	"src": "2684:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2672:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2654:32:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3214,
																			"name": "selectedMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3191,
																			"src": "2704:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AddressInfo_$2944_storage_$",
																				"typeString": "mapping(uint256 => struct NFTEventVoteGame.AddressInfo storage ref)"
																			}
																		},
																		"id": 3216,
																		"indexExpression": {
																			"id": 3215,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3209,
																			"src": "2716:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2704:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressInfo_$2944_storage",
																			"typeString": "struct NFTEventVoteGame.AddressInfo storage ref"
																		}
																	},
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2725:9:12",
																	"memberName": "someValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2943,
																	"src": "2704:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3218,
																	"name": "desiredValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3166,
																	"src": "2738:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2704:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3230,
															"nodeType": "IfStatement",
															"src": "2700:138:12",
															"trueBody": {
																"id": 3229,
																"nodeType": "Block",
																"src": "2752:86:12",
																"statements": [
																	{
																		"expression": {
																			"id": 3227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3220,
																					"name": "matchingAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3176,
																					"src": "2770:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 3223,
																				"indexExpression": {
																					"id": 3222,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "2788:15:12",
																					"subExpression": {
																						"id": 3221,
																						"name": "matchingCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3184,
																						"src": "2788:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2770:34:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 3225,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3209,
																						"src": "2815:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3224,
																					"name": "ownerOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 426,
																					"src": "2807:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 3226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2807:16:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2770:53:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 3228,
																		"nodeType": "ExpressionStatement",
																		"src": "2770:53:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3202,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3199,
														"src": "2615:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3203,
														"name": "totalAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "2619:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2615:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3232,
												"initializationExpression": {
													"assignments": [
														3199
													],
													"declarations": [
														{
															"constant": false,
															"id": 3199,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2608:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3232,
															"src": "2600:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3198,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2600:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3201,
													"initialValue": {
														"hexValue": "30",
														"id": 3200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2612:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2600:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2635:3:12",
														"subExpression": {
															"id": 3205,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3199,
															"src": "2635:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3207,
													"nodeType": "ExpressionStatement",
													"src": "2635:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2595:253:12"
											},
											{
												"AST": {
													"nativeSrc": "2867:64:12",
													"nodeType": "YulBlock",
													"src": "2867:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "matchingAddresses",
																		"nativeSrc": "2888:17:12",
																		"nodeType": "YulIdentifier",
																		"src": "2888:17:12"
																	},
																	{
																		"name": "matchingCount",
																		"nativeSrc": "2907:13:12",
																		"nodeType": "YulIdentifier",
																		"src": "2907:13:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:12"
																},
																"nativeSrc": "2881:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2881:40:12"
															},
															"nativeSrc": "2881:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "2881:40:12"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3176,
														"isOffset": false,
														"isSlot": false,
														"src": "2888:17:12",
														"valueSize": 1
													},
													{
														"declaration": 3184,
														"isOffset": false,
														"isSlot": false,
														"src": "2907:13:12",
														"valueSize": 1
													}
												],
												"id": 3233,
												"nodeType": "InlineAssembly",
												"src": "2858:73:12"
											},
											{
												"expression": {
													"id": 3234,
													"name": "matchingAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3176,
													"src": "2948:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 3171,
												"id": 3235,
												"nodeType": "Return",
												"src": "2941:24:12"
											}
										]
									},
									"functionSelector": "cf5f19d3",
									"id": 3237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesByValue",
									"nameLocation": "2273:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "desiredValue",
												"nameLocation": "2298:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "2293:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2293:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2292:19:12"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "2333:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3168,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2333:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3169,
													"nodeType": "ArrayTypeName",
													"src": "2333:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:18:12"
									},
									"scope": 3238,
									"src": "2264:708:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3239,
							"src": "170:2804:12",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327,
								2969
							]
						}
					],
					"src": "32:2943:12"
				},
				"id": 12
			}
		}
	}
}