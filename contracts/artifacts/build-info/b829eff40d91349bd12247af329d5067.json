{
	"id": "b829eff40d91349bd12247af329d5067",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTEventMusic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NFTEventConcert is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {\n    uint256 private _nextTokenId;\n    bool private _mintingApproved;\n    uint256 private _maxMintPerAddress; // Added to store the maximum mint limit\n\n    mapping(address => MintRequest) public mintRequests;\n\n    struct MintRequest {\n        string uri;\n        bool approved;\n    }\n\n    constructor(address initialOwner, string memory _name, string memory _symbol)\n        ERC721(_name, _symbol)\n        Ownable(initialOwner)\n    {\n        _mintingApproved = false;\n    }\n\n    event MintRequested(address indexed to, string indexed uri, uint256 indexed tokenId);\n\n    function requestMint(string memory uri) public onlyOwner {\n        require(_mintingApproved, \"Minting not approved yet\");\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(owner(), tokenId);\n        _setTokenURI(tokenId, uri);\n        \n        mintRequests[owner()] = MintRequest({\n            uri: uri,\n            approved: false\n        });\n\n        emit MintRequested(owner(), uri, tokenId);\n    }\n\n    function approveMintingAll() public onlyOwner {\n        _mintingApproved = true;\n    }\n\n    function approveMintingOne(address to) public onlyOwner {\n        require(mintRequests[to].approved == false, \"Request already approved\");\n        mintRequests[to].approved = true;\n    }\n\n    function getMintRequest(address to) public view returns (string memory, bool) {\n        MintRequest storage request = mintRequests[to];\n        return (request.uri, request.approved);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1517,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE4 GAS 0xD6 0xB0 PC PUSH23 0x8C0FAADDCDB1DF35A0C4FBA39F9095558B8A388FC01EAE INVALID 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE4 GAS 0xD6 0xB0 PC PUSH23 0x8C0FAADDCDB1DF35A0C4FBA39F9095558B8A388FC01EAE INVALID 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventMusic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH10 0x264D6DB9985D5F8E54F6 0xB6 DUP9 SWAP6 RETURN CALLER ISZERO 0xC5 DUP15 0x4C PUSH27 0x24643283A4C61CBE239B64736F6C63430008170033000000000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH10 0x264D6DB9985D5F8E54F6 0xB6 DUP9 SWAP6 RETURN CALLER ISZERO 0xC5 DUP15 0x4C PUSH27 0x24643283A4C61CBE239B64736F6C63430008170033000000000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventMusic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xE8 MUL 0xC2 0x4A 0xAC 0xF9 LOG2 0x2E GASLIMIT 0xD7 MSTORE DUP13 0x4E DIV PUSH0 0xF7 ADDRESS 0xD PUSH26 0x1D524B1B1554485C399858164736F6C63430008170033000000 ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xE8 MUL 0xC2 0x4A 0xAC 0xF9 LOG2 0x2E GASLIMIT 0xD7 MSTORE DUP13 0x4E DIV PUSH0 0xF7 ADDRESS 0xD PUSH26 0x1D524B1B1554485C399858164736F6C63430008170033000000 ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventMusic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTEventMusic.sol": {
				"NFTEventConcert": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "MintRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "approveMintingAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "approveMintingOne",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "getMintRequest",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mintRequests",
							"outputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "requestMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTEventMusic.sol\":326:2341  contract NFTEventConcert is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTEventMusic.sol\":694:878  constructor(address initialOwner, string memory _name, string memory _symbol)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTEventMusic.sol\":819:831  initialOwner */\n  dup3\n    /* \"contracts/NFTEventMusic.sol\":787:792  _name */\n  dup3\n    /* \"contracts/NFTEventMusic.sol\":794:801  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NFTEventMusic.sol\":866:871  false */\n  0x00\n    /* \"contracts/NFTEventMusic.sol\":847:863  _mintingApproved */\n  0x09\n  0x00\n    /* \"contracts/NFTEventMusic.sol\":847:871  _mintingApproved = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTEventMusic.sol\":694:878  constructor(address initialOwner, string memory _name, string memory _symbol)... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTEventMusic.sol\":326:2341  contract NFTEventConcert is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_20:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_22:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_63\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_65\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_66:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_68\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_28:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_29:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_30:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_31:\n    /* \"#utility.yul\":1468:1495   */\n  tag_74\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_29\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_76\n  tag_30\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1541:1629   */\ntag_75:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_32:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_78\n  tag_20\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_79\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_31\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_33:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_82\n  tag_30\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1945:2001   */\ntag_81:\n    /* \"#utility.yul\":2019:2048   */\n  tag_83\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_29\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2367   */\ntag_34:\n    /* \"#utility.yul\":2202:2203   */\n  0x00\n    /* \"#utility.yul\":2212:2325   */\ntag_85:\n    /* \"#utility.yul\":2226:2232   */\n  dup4\n    /* \"#utility.yul\":2223:2224   */\n  dup2\n    /* \"#utility.yul\":2220:2233   */\n  lt\n    /* \"#utility.yul\":2212:2325   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2311:2312   */\n  dup1\n    /* \"#utility.yul\":2306:2309   */\n  dup3\n    /* \"#utility.yul\":2302:2313   */\n  add\n    /* \"#utility.yul\":2296:2314   */\n  mload\n    /* \"#utility.yul\":2292:2293   */\n  dup2\n    /* \"#utility.yul\":2287:2290   */\n  dup5\n    /* \"#utility.yul\":2283:2294   */\n  add\n    /* \"#utility.yul\":2276:2315   */\n  mstore\n    /* \"#utility.yul\":2248:2250   */\n  0x20\n    /* \"#utility.yul\":2245:2246   */\n  dup2\n    /* \"#utility.yul\":2241:2251   */\n  add\n    /* \"#utility.yul\":2236:2251   */\n  swap1\n  pop\n    /* \"#utility.yul\":2212:2325   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":2359:2360   */\n  0x00\n    /* \"#utility.yul\":2350:2356   */\n  dup5\n    /* \"#utility.yul\":2345:2348   */\n  dup5\n    /* \"#utility.yul\":2341:2357   */\n  add\n    /* \"#utility.yul\":2334:2361   */\n  mstore\n    /* \"#utility.yul\":2183:2367   */\n  pop\n    /* \"#utility.yul\":2121:2367   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2373:2807   */\ntag_35:\n    /* \"#utility.yul\":2462:2467   */\n  0x00\n    /* \"#utility.yul\":2487:2553   */\n  tag_89\n    /* \"#utility.yul\":2503:2552   */\n  tag_90\n    /* \"#utility.yul\":2545:2551   */\n  dup5\n    /* \"#utility.yul\":2503:2552   */\n  tag_33\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2487:2553   */\n  tag_32\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2478:2553   */\n  swap1\n  pop\n    /* \"#utility.yul\":2576:2582   */\n  dup3\n    /* \"#utility.yul\":2569:2574   */\n  dup2\n    /* \"#utility.yul\":2562:2583   */\n  mstore\n    /* \"#utility.yul\":2614:2618   */\n  0x20\n    /* \"#utility.yul\":2607:2612   */\n  dup2\n    /* \"#utility.yul\":2603:2619   */\n  add\n    /* \"#utility.yul\":2652:2655   */\n  dup5\n    /* \"#utility.yul\":2643:2649   */\n  dup5\n    /* \"#utility.yul\":2638:2641   */\n  dup5\n    /* \"#utility.yul\":2634:2650   */\n  add\n    /* \"#utility.yul\":2631:2656   */\n  gt\n    /* \"#utility.yul\":2628:2740   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2659:2738   */\n  tag_92\n  tag_28\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2628:2740   */\ntag_91:\n    /* \"#utility.yul\":2749:2801   */\n  tag_93\n    /* \"#utility.yul\":2794:2800   */\n  dup5\n    /* \"#utility.yul\":2789:2792   */\n  dup3\n    /* \"#utility.yul\":2784:2787   */\n  dup6\n    /* \"#utility.yul\":2749:2801   */\n  tag_34\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2468:2807   */\n  pop\n    /* \"#utility.yul\":2373:2807   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2827:3182   */\ntag_36:\n    /* \"#utility.yul\":2894:2899   */\n  0x00\n    /* \"#utility.yul\":2943:2946   */\n  dup3\n    /* \"#utility.yul\":2936:2940   */\n  0x1f\n    /* \"#utility.yul\":2928:2934   */\n  dup4\n    /* \"#utility.yul\":2924:2941   */\n  add\n    /* \"#utility.yul\":2920:2947   */\n  slt\n    /* \"#utility.yul\":2910:3032   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2951:3030   */\n  tag_96\n  tag_27\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2910:3032   */\ntag_95:\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3055:3068   */\n  mload\n    /* \"#utility.yul\":3086:3176   */\n  tag_97\n    /* \"#utility.yul\":3172:3175   */\n  dup5\n    /* \"#utility.yul\":3164:3170   */\n  dup3\n    /* \"#utility.yul\":3157:3161   */\n  0x20\n    /* \"#utility.yul\":3149:3155   */\n  dup7\n    /* \"#utility.yul\":3145:3162   */\n  add\n    /* \"#utility.yul\":3086:3176   */\n  tag_35\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3077:3176   */\n  swap2\n  pop\n    /* \"#utility.yul\":2900:3182   */\n  pop\n    /* \"#utility.yul\":2827:3182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:4197   */\ntag_3:\n    /* \"#utility.yul\":3296:3302   */\n  0x00\n    /* \"#utility.yul\":3304:3310   */\n  dup1\n    /* \"#utility.yul\":3312:3318   */\n  0x00\n    /* \"#utility.yul\":3361:3363   */\n  0x60\n    /* \"#utility.yul\":3349:3358   */\n  dup5\n    /* \"#utility.yul\":3340:3347   */\n  dup7\n    /* \"#utility.yul\":3336:3359   */\n  sub\n    /* \"#utility.yul\":3332:3364   */\n  slt\n    /* \"#utility.yul\":3329:3448   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3367:3446   */\n  tag_100\n  tag_21\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3329:3448   */\ntag_99:\n    /* \"#utility.yul\":3487:3488   */\n  0x00\n    /* \"#utility.yul\":3512:3576   */\n  tag_101\n    /* \"#utility.yul\":3568:3575   */\n  dup7\n    /* \"#utility.yul\":3559:3565   */\n  dup3\n    /* \"#utility.yul\":3548:3557   */\n  dup8\n    /* \"#utility.yul\":3544:3566   */\n  add\n    /* \"#utility.yul\":3512:3576   */\n  tag_26\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3502:3576   */\n  swap4\n  pop\n    /* \"#utility.yul\":3458:3586   */\n  pop\n    /* \"#utility.yul\":3646:3648   */\n  0x20\n    /* \"#utility.yul\":3635:3644   */\n  dup5\n    /* \"#utility.yul\":3631:3649   */\n  add\n    /* \"#utility.yul\":3625:3650   */\n  mload\n    /* \"#utility.yul\":3677:3695   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3669:3675   */\n  dup2\n    /* \"#utility.yul\":3666:3696   */\n  gt\n    /* \"#utility.yul\":3663:3780   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3699:3778   */\n  tag_103\n  tag_22\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3663:3780   */\ntag_102:\n    /* \"#utility.yul\":3804:3878   */\n  tag_104\n    /* \"#utility.yul\":3870:3877   */\n  dup7\n    /* \"#utility.yul\":3861:3867   */\n  dup3\n    /* \"#utility.yul\":3850:3859   */\n  dup8\n    /* \"#utility.yul\":3846:3868   */\n  add\n    /* \"#utility.yul\":3804:3878   */\n  tag_36\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3794:3878   */\n  swap3\n  pop\n    /* \"#utility.yul\":3596:3888   */\n  pop\n    /* \"#utility.yul\":3948:3950   */\n  0x40\n    /* \"#utility.yul\":3937:3946   */\n  dup5\n    /* \"#utility.yul\":3933:3951   */\n  add\n    /* \"#utility.yul\":3927:3952   */\n  mload\n    /* \"#utility.yul\":3979:3997   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3971:3977   */\n  dup2\n    /* \"#utility.yul\":3968:3998   */\n  gt\n    /* \"#utility.yul\":3965:4082   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4001:4080   */\n  tag_106\n  tag_22\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3965:4082   */\ntag_105:\n    /* \"#utility.yul\":4106:4180   */\n  tag_107\n    /* \"#utility.yul\":4172:4179   */\n  dup7\n    /* \"#utility.yul\":4163:4169   */\n  dup3\n    /* \"#utility.yul\":4152:4161   */\n  dup8\n    /* \"#utility.yul\":4148:4170   */\n  add\n    /* \"#utility.yul\":4106:4180   */\n  tag_36\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4096:4180   */\n  swap2\n  pop\n    /* \"#utility.yul\":3898:4190   */\n  pop\n    /* \"#utility.yul\":3188:4197   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4203:4302   */\ntag_37:\n    /* \"#utility.yul\":4255:4261   */\n  0x00\n    /* \"#utility.yul\":4289:4294   */\n  dup2\n    /* \"#utility.yul\":4283:4295   */\n  mload\n    /* \"#utility.yul\":4273:4295   */\n  swap1\n  pop\n    /* \"#utility.yul\":4203:4302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4308:4488   */\ntag_38:\n    /* \"#utility.yul\":4356:4433   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4353:4354   */\n  0x00\n    /* \"#utility.yul\":4346:4434   */\n  mstore\n    /* \"#utility.yul\":4453:4457   */\n  0x22\n    /* \"#utility.yul\":4450:4451   */\n  0x04\n    /* \"#utility.yul\":4443:4458   */\n  mstore\n    /* \"#utility.yul\":4477:4481   */\n  0x24\n    /* \"#utility.yul\":4474:4475   */\n  0x00\n    /* \"#utility.yul\":4467:4482   */\n  revert\n    /* \"#utility.yul\":4494:4814   */\ntag_39:\n    /* \"#utility.yul\":4538:4544   */\n  0x00\n    /* \"#utility.yul\":4575:4576   */\n  0x02\n    /* \"#utility.yul\":4569:4573   */\n  dup3\n    /* \"#utility.yul\":4565:4577   */\n  div\n    /* \"#utility.yul\":4555:4577   */\n  swap1\n  pop\n    /* \"#utility.yul\":4622:4623   */\n  0x01\n    /* \"#utility.yul\":4616:4620   */\n  dup3\n    /* \"#utility.yul\":4612:4624   */\n  and\n    /* \"#utility.yul\":4643:4661   */\n  dup1\n    /* \"#utility.yul\":4633:4714   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":4699:4703   */\n  0x7f\n    /* \"#utility.yul\":4691:4697   */\n  dup3\n    /* \"#utility.yul\":4687:4704   */\n  and\n    /* \"#utility.yul\":4677:4704   */\n  swap2\n  pop\n    /* \"#utility.yul\":4633:4714   */\ntag_111:\n    /* \"#utility.yul\":4761:4763   */\n  0x20\n    /* \"#utility.yul\":4753:4759   */\n  dup3\n    /* \"#utility.yul\":4750:4764   */\n  lt\n    /* \"#utility.yul\":4730:4748   */\n  dup2\n    /* \"#utility.yul\":4727:4765   */\n  sub\n    /* \"#utility.yul\":4724:4808   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4780:4798   */\n  tag_113\n  tag_38\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4724:4808   */\ntag_112:\n    /* \"#utility.yul\":4545:4814   */\n  pop\n    /* \"#utility.yul\":4494:4814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4820:4961   */\ntag_40:\n    /* \"#utility.yul\":4869:4873   */\n  0x00\n    /* \"#utility.yul\":4892:4895   */\n  dup2\n    /* \"#utility.yul\":4884:4895   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:4918   */\n  dup2\n    /* \"#utility.yul\":4912:4913   */\n  0x00\n    /* \"#utility.yul\":4905:4919   */\n  mstore\n    /* \"#utility.yul\":4949:4953   */\n  0x20\n    /* \"#utility.yul\":4946:4947   */\n  0x00\n    /* \"#utility.yul\":4936:4954   */\n  keccak256\n    /* \"#utility.yul\":4928:4954   */\n  swap1\n  pop\n    /* \"#utility.yul\":4820:4961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4967:5060   */\ntag_41:\n    /* \"#utility.yul\":5004:5010   */\n  0x00\n    /* \"#utility.yul\":5051:5053   */\n  0x20\n    /* \"#utility.yul\":5046:5048   */\n  0x1f\n    /* \"#utility.yul\":5039:5044   */\n  dup4\n    /* \"#utility.yul\":5035:5049   */\n  add\n    /* \"#utility.yul\":5031:5054   */\n  div\n    /* \"#utility.yul\":5021:5054   */\n  swap1\n  pop\n    /* \"#utility.yul\":4967:5060   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5066:5173   */\ntag_42:\n    /* \"#utility.yul\":5110:5118   */\n  0x00\n    /* \"#utility.yul\":5160:5165   */\n  dup3\n    /* \"#utility.yul\":5154:5158   */\n  dup3\n    /* \"#utility.yul\":5150:5166   */\n  shl\n    /* \"#utility.yul\":5129:5166   */\n  swap1\n  pop\n    /* \"#utility.yul\":5066:5173   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5179:5572   */\ntag_43:\n    /* \"#utility.yul\":5248:5254   */\n  0x00\n    /* \"#utility.yul\":5298:5299   */\n  0x08\n    /* \"#utility.yul\":5286:5296   */\n  dup4\n    /* \"#utility.yul\":5282:5300   */\n  mul\n    /* \"#utility.yul\":5321:5418   */\n  tag_118\n    /* \"#utility.yul\":5351:5417   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5340:5349   */\n  dup3\n    /* \"#utility.yul\":5321:5418   */\n  tag_42\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5439:5478   */\n  tag_119\n    /* \"#utility.yul\":5469:5477   */\n  dup7\n    /* \"#utility.yul\":5458:5467   */\n  dup4\n    /* \"#utility.yul\":5439:5478   */\n  tag_42\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5427:5478   */\n  swap6\n  pop\n    /* \"#utility.yul\":5511:5515   */\n  dup1\n    /* \"#utility.yul\":5507:5516   */\n  not\n    /* \"#utility.yul\":5500:5505   */\n  dup5\n    /* \"#utility.yul\":5496:5517   */\n  and\n    /* \"#utility.yul\":5487:5517   */\n  swap4\n  pop\n    /* \"#utility.yul\":5560:5564   */\n  dup1\n    /* \"#utility.yul\":5550:5558   */\n  dup7\n    /* \"#utility.yul\":5546:5565   */\n  and\n    /* \"#utility.yul\":5539:5544   */\n  dup5\n    /* \"#utility.yul\":5536:5566   */\n  or\n    /* \"#utility.yul\":5526:5566   */\n  swap3\n  pop\n    /* \"#utility.yul\":5255:5572   */\n  pop\n  pop\n    /* \"#utility.yul\":5179:5572   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5578:5655   */\ntag_44:\n    /* \"#utility.yul\":5615:5622   */\n  0x00\n    /* \"#utility.yul\":5644:5649   */\n  dup2\n    /* \"#utility.yul\":5633:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5578:5655   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5661:5721   */\ntag_45:\n    /* \"#utility.yul\":5689:5692   */\n  0x00\n    /* \"#utility.yul\":5710:5715   */\n  dup2\n    /* \"#utility.yul\":5703:5715   */\n  swap1\n  pop\n    /* \"#utility.yul\":5661:5721   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5727:5869   */\ntag_46:\n    /* \"#utility.yul\":5777:5786   */\n  0x00\n    /* \"#utility.yul\":5810:5863   */\n  tag_123\n    /* \"#utility.yul\":5828:5862   */\n  tag_124\n    /* \"#utility.yul\":5837:5861   */\n  tag_125\n    /* \"#utility.yul\":5855:5860   */\n  dup5\n    /* \"#utility.yul\":5837:5861   */\n  tag_44\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5828:5862   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5810:5863   */\n  tag_44\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5797:5863   */\n  swap1\n  pop\n    /* \"#utility.yul\":5727:5869   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:5950   */\ntag_47:\n    /* \"#utility.yul\":5918:5921   */\n  0x00\n    /* \"#utility.yul\":5939:5944   */\n  dup2\n    /* \"#utility.yul\":5932:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:5950   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5956:6225   */\ntag_48:\n    /* \"#utility.yul\":6066:6105   */\n  tag_128\n    /* \"#utility.yul\":6097:6104   */\n  dup4\n    /* \"#utility.yul\":6066:6105   */\n  tag_46\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6127:6218   */\n  tag_129\n    /* \"#utility.yul\":6176:6217   */\n  tag_130\n    /* \"#utility.yul\":6200:6216   */\n  dup3\n    /* \"#utility.yul\":6176:6217   */\n  tag_47\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6168:6174   */\n  dup5\n    /* \"#utility.yul\":6161:6165   */\n  dup5\n    /* \"#utility.yul\":6155:6166   */\n  sload\n    /* \"#utility.yul\":6127:6218   */\n  tag_43\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6121:6125   */\n  dup3\n    /* \"#utility.yul\":6114:6219   */\n  sstore\n    /* \"#utility.yul\":6032:6225   */\n  pop\n    /* \"#utility.yul\":5956:6225   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6231:6304   */\ntag_49:\n    /* \"#utility.yul\":6276:6279   */\n  0x00\n    /* \"#utility.yul\":6231:6304   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6310:6499   */\ntag_50:\n    /* \"#utility.yul\":6387:6419   */\n  tag_133\n  tag_49\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6428:6493   */\n  tag_134\n    /* \"#utility.yul\":6486:6492   */\n  dup2\n    /* \"#utility.yul\":6478:6484   */\n  dup5\n    /* \"#utility.yul\":6472:6476   */\n  dup5\n    /* \"#utility.yul\":6428:6493   */\n  tag_48\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6363:6499   */\n  pop\n    /* \"#utility.yul\":6310:6499   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6505:6691   */\ntag_51:\n    /* \"#utility.yul\":6565:6685   */\ntag_136:\n    /* \"#utility.yul\":6582:6585   */\n  dup2\n    /* \"#utility.yul\":6575:6580   */\n  dup2\n    /* \"#utility.yul\":6572:6586   */\n  lt\n    /* \"#utility.yul\":6565:6685   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6636:6675   */\n  tag_139\n    /* \"#utility.yul\":6673:6674   */\n  0x00\n    /* \"#utility.yul\":6666:6671   */\n  dup3\n    /* \"#utility.yul\":6636:6675   */\n  tag_50\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6609:6610   */\n  0x01\n    /* \"#utility.yul\":6602:6607   */\n  dup2\n    /* \"#utility.yul\":6598:6611   */\n  add\n    /* \"#utility.yul\":6589:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6565:6685   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":6505:6691   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6697:7240   */\ntag_52:\n    /* \"#utility.yul\":6798:6800   */\n  0x1f\n    /* \"#utility.yul\":6793:6796   */\n  dup3\n    /* \"#utility.yul\":6790:6801   */\n  gt\n    /* \"#utility.yul\":6787:7233   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6832:6870   */\n  tag_142\n    /* \"#utility.yul\":6864:6869   */\n  dup2\n    /* \"#utility.yul\":6832:6870   */\n  tag_40\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6916:6945   */\n  tag_143\n    /* \"#utility.yul\":6934:6944   */\n  dup5\n    /* \"#utility.yul\":6916:6945   */\n  tag_41\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6906:6914   */\n  dup2\n    /* \"#utility.yul\":6902:6946   */\n  add\n    /* \"#utility.yul\":7099:7101   */\n  0x20\n    /* \"#utility.yul\":7087:7097   */\n  dup6\n    /* \"#utility.yul\":7084:7102   */\n  lt\n    /* \"#utility.yul\":7081:7130   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7120:7128   */\n  dup2\n    /* \"#utility.yul\":7105:7128   */\n  swap1\n  pop\n    /* \"#utility.yul\":7081:7130   */\ntag_144:\n    /* \"#utility.yul\":7143:7223   */\n  tag_145\n    /* \"#utility.yul\":7199:7221   */\n  tag_146\n    /* \"#utility.yul\":7217:7220   */\n  dup6\n    /* \"#utility.yul\":7199:7221   */\n  tag_41\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7189:7197   */\n  dup4\n    /* \"#utility.yul\":7185:7222   */\n  add\n    /* \"#utility.yul\":7172:7183   */\n  dup3\n    /* \"#utility.yul\":7143:7223   */\n  tag_51\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6802:7233   */\n  pop\n  pop\n    /* \"#utility.yul\":6787:7233   */\ntag_141:\n    /* \"#utility.yul\":6697:7240   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7246:7363   */\ntag_53:\n    /* \"#utility.yul\":7300:7308   */\n  0x00\n    /* \"#utility.yul\":7350:7355   */\n  dup3\n    /* \"#utility.yul\":7344:7348   */\n  dup3\n    /* \"#utility.yul\":7340:7356   */\n  shr\n    /* \"#utility.yul\":7319:7356   */\n  swap1\n  pop\n    /* \"#utility.yul\":7246:7363   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7369:7538   */\ntag_54:\n    /* \"#utility.yul\":7413:7419   */\n  0x00\n    /* \"#utility.yul\":7446:7497   */\n  tag_149\n    /* \"#utility.yul\":7494:7495   */\n  0x00\n    /* \"#utility.yul\":7490:7496   */\n  not\n    /* \"#utility.yul\":7482:7487   */\n  dup5\n    /* \"#utility.yul\":7479:7480   */\n  0x08\n    /* \"#utility.yul\":7475:7488   */\n  mul\n    /* \"#utility.yul\":7446:7497   */\n  tag_53\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7442:7498   */\n  not\n    /* \"#utility.yul\":7527:7531   */\n  dup1\n    /* \"#utility.yul\":7521:7525   */\n  dup4\n    /* \"#utility.yul\":7517:7532   */\n  and\n    /* \"#utility.yul\":7507:7532   */\n  swap2\n  pop\n    /* \"#utility.yul\":7420:7538   */\n  pop\n    /* \"#utility.yul\":7369:7538   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7543:7838   */\ntag_55:\n    /* \"#utility.yul\":7619:7623   */\n  0x00\n    /* \"#utility.yul\":7765:7794   */\n  tag_151\n    /* \"#utility.yul\":7790:7793   */\n  dup4\n    /* \"#utility.yul\":7784:7788   */\n  dup4\n    /* \"#utility.yul\":7765:7794   */\n  tag_54\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7757:7794   */\n  swap2\n  pop\n    /* \"#utility.yul\":7827:7830   */\n  dup3\n    /* \"#utility.yul\":7824:7825   */\n  0x02\n    /* \"#utility.yul\":7820:7831   */\n  mul\n    /* \"#utility.yul\":7814:7818   */\n  dup3\n    /* \"#utility.yul\":7811:7832   */\n  or\n    /* \"#utility.yul\":7803:7832   */\n  swap1\n  pop\n    /* \"#utility.yul\":7543:7838   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7843:9238   */\ntag_9:\n    /* \"#utility.yul\":7960:7997   */\n  tag_153\n    /* \"#utility.yul\":7993:7996   */\n  dup3\n    /* \"#utility.yul\":7960:7997   */\n  tag_37\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8062:8080   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8054:8060   */\n  dup2\n    /* \"#utility.yul\":8051:8081   */\n  gt\n    /* \"#utility.yul\":8048:8104   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8084:8102   */\n  tag_155\n  tag_30\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8048:8104   */\ntag_154:\n    /* \"#utility.yul\":8128:8166   */\n  tag_156\n    /* \"#utility.yul\":8160:8164   */\n  dup3\n    /* \"#utility.yul\":8154:8165   */\n  sload\n    /* \"#utility.yul\":8128:8166   */\n  tag_39\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8213:8280   */\n  tag_157\n    /* \"#utility.yul\":8273:8279   */\n  dup3\n    /* \"#utility.yul\":8265:8271   */\n  dup3\n    /* \"#utility.yul\":8259:8263   */\n  dup6\n    /* \"#utility.yul\":8213:8280   */\n  tag_52\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":8307:8308   */\n  0x00\n    /* \"#utility.yul\":8331:8335   */\n  0x20\n    /* \"#utility.yul\":8318:8335   */\n  swap1\n  pop\n    /* \"#utility.yul\":8363:8365   */\n  0x1f\n    /* \"#utility.yul\":8355:8361   */\n  dup4\n    /* \"#utility.yul\":8352:8366   */\n  gt\n    /* \"#utility.yul\":8380:8381   */\n  0x01\n    /* \"#utility.yul\":8375:8993   */\n  dup2\n  eq\n  tag_159\n  jumpi\n    /* \"#utility.yul\":9037:9038   */\n  0x00\n    /* \"#utility.yul\":9054:9060   */\n  dup5\n    /* \"#utility.yul\":9051:9128   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":9103:9112   */\n  dup3\n    /* \"#utility.yul\":9098:9101   */\n  dup8\n    /* \"#utility.yul\":9094:9113   */\n  add\n    /* \"#utility.yul\":9088:9114   */\n  mload\n    /* \"#utility.yul\":9079:9114   */\n  swap1\n  pop\n    /* \"#utility.yul\":9051:9128   */\ntag_160:\n    /* \"#utility.yul\":9154:9221   */\n  tag_161\n    /* \"#utility.yul\":9214:9220   */\n  dup6\n    /* \"#utility.yul\":9207:9212   */\n  dup3\n    /* \"#utility.yul\":9154:9221   */\n  tag_55\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":9148:9152   */\n  dup7\n    /* \"#utility.yul\":9141:9222   */\n  sstore\n    /* \"#utility.yul\":9010:9232   */\n  pop\n    /* \"#utility.yul\":8345:9232   */\n  jump(tag_158)\n    /* \"#utility.yul\":8375:8993   */\ntag_159:\n    /* \"#utility.yul\":8427:8431   */\n  0x1f\n    /* \"#utility.yul\":8423:8432   */\n  not\n    /* \"#utility.yul\":8415:8421   */\n  dup5\n    /* \"#utility.yul\":8411:8433   */\n  and\n    /* \"#utility.yul\":8461:8498   */\n  tag_162\n    /* \"#utility.yul\":8493:8497   */\n  dup7\n    /* \"#utility.yul\":8461:8498   */\n  tag_40\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8520:8521   */\n  0x00\n    /* \"#utility.yul\":8534:8742   */\ntag_163:\n    /* \"#utility.yul\":8548:8555   */\n  dup3\n    /* \"#utility.yul\":8545:8546   */\n  dup2\n    /* \"#utility.yul\":8542:8556   */\n  lt\n    /* \"#utility.yul\":8534:8742   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":8627:8636   */\n  dup5\n    /* \"#utility.yul\":8622:8625   */\n  dup10\n    /* \"#utility.yul\":8618:8637   */\n  add\n    /* \"#utility.yul\":8612:8638   */\n  mload\n    /* \"#utility.yul\":8604:8610   */\n  dup3\n    /* \"#utility.yul\":8597:8639   */\n  sstore\n    /* \"#utility.yul\":8678:8679   */\n  0x01\n    /* \"#utility.yul\":8670:8676   */\n  dup3\n    /* \"#utility.yul\":8666:8680   */\n  add\n    /* \"#utility.yul\":8656:8680   */\n  swap2\n  pop\n    /* \"#utility.yul\":8725:8727   */\n  0x20\n    /* \"#utility.yul\":8714:8723   */\n  dup6\n    /* \"#utility.yul\":8710:8728   */\n  add\n    /* \"#utility.yul\":8697:8728   */\n  swap5\n  pop\n    /* \"#utility.yul\":8571:8575   */\n  0x20\n    /* \"#utility.yul\":8568:8569   */\n  dup2\n    /* \"#utility.yul\":8564:8576   */\n  add\n    /* \"#utility.yul\":8559:8576   */\n  swap1\n  pop\n    /* \"#utility.yul\":8534:8742   */\n  jump(tag_163)\ntag_165:\n    /* \"#utility.yul\":8770:8776   */\n  dup7\n    /* \"#utility.yul\":8761:8768   */\n  dup4\n    /* \"#utility.yul\":8758:8777   */\n  lt\n    /* \"#utility.yul\":8755:8934   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8828:8837   */\n  dup5\n    /* \"#utility.yul\":8823:8826   */\n  dup10\n    /* \"#utility.yul\":8819:8838   */\n  add\n    /* \"#utility.yul\":8813:8839   */\n  mload\n    /* \"#utility.yul\":8871:8919   */\n  tag_167\n    /* \"#utility.yul\":8913:8917   */\n  0x1f\n    /* \"#utility.yul\":8905:8911   */\n  dup10\n    /* \"#utility.yul\":8901:8918   */\n  and\n    /* \"#utility.yul\":8890:8899   */\n  dup3\n    /* \"#utility.yul\":8871:8919   */\n  tag_54\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8863:8869   */\n  dup4\n    /* \"#utility.yul\":8856:8920   */\n  sstore\n    /* \"#utility.yul\":8778:8934   */\n  pop\n    /* \"#utility.yul\":8755:8934   */\ntag_166:\n    /* \"#utility.yul\":8980:8981   */\n  0x01\n    /* \"#utility.yul\":8976:8977   */\n  0x02\n    /* \"#utility.yul\":8968:8974   */\n  dup9\n    /* \"#utility.yul\":8964:8978   */\n  mul\n    /* \"#utility.yul\":8960:8982   */\n  add\n    /* \"#utility.yul\":8954:8958   */\n  dup9\n    /* \"#utility.yul\":8947:8983   */\n  sstore\n    /* \"#utility.yul\":8382:8993   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8345:9232   */\ntag_158:\n  pop\n    /* \"#utility.yul\":7935:9238   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7843:9238   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9244:9362   */\ntag_56:\n    /* \"#utility.yul\":9331:9355   */\n  tag_169\n    /* \"#utility.yul\":9349:9354   */\n  dup2\n    /* \"#utility.yul\":9331:9355   */\n  tag_24\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":9326:9329   */\n  dup3\n    /* \"#utility.yul\":9319:9356   */\n  mstore\n    /* \"#utility.yul\":9244:9362   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9368:9590   */\ntag_14:\n    /* \"#utility.yul\":9461:9465   */\n  0x00\n    /* \"#utility.yul\":9499:9501   */\n  0x20\n    /* \"#utility.yul\":9488:9497   */\n  dup3\n    /* \"#utility.yul\":9484:9502   */\n  add\n    /* \"#utility.yul\":9476:9502   */\n  swap1\n  pop\n    /* \"#utility.yul\":9512:9583   */\n  tag_171\n    /* \"#utility.yul\":9580:9581   */\n  0x00\n    /* \"#utility.yul\":9569:9578   */\n  dup4\n    /* \"#utility.yul\":9565:9582   */\n  add\n    /* \"#utility.yul\":9556:9562   */\n  dup5\n    /* \"#utility.yul\":9512:9583   */\n  tag_56\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":9368:9590   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTEventMusic.sol\":326:2341  contract NFTEventConcert is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTEventMusic.sol\":326:2341  contract NFTEventConcert is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ac5dea1\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xca5e0e88\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe973799a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xecedc680\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x8ac5dea1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x2e410e8e\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x2e410e8e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTEventMusic.sol\":2134:2339  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/NFTEventMusic.sol\":1392:1478  function approveMintingAll() public onlyOwner {... */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/NFTEventMusic.sol\":975:1386  function requestMint(string memory uri) public onlyOwner {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/NFTEventMusic.sol\":1939:2128  function tokenURI(uint256 tokenId)... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventMusic.sol\":561:612  mapping(address => MintRequest) public mintRequests */\n    tag_20:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventMusic.sol\":1484:1670  function approveMintingOne(address to) public onlyOwner {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_22:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTEventMusic.sol\":1676:1865  function getMintRequest(address to) public view returns (string memory, bool) {... */\n    tag_23:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/NFTEventMusic.sol\":2134:2339  function supportsInterface(bytes4 interfaceId)... */\n    tag_31:\n        /* \"contracts/NFTEventMusic.sol\":2269:2273  bool */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":2296:2332  super.supportsInterface(interfaceId) */\n      tag_115\n        /* \"contracts/NFTEventMusic.sol\":2320:2331  interfaceId */\n      dup3\n        /* \"contracts/NFTEventMusic.sol\":2296:2319  super.supportsInterface */\n      tag_116\n        /* \"contracts/NFTEventMusic.sol\":2296:2332  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/NFTEventMusic.sol\":2289:2332  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/NFTEventMusic.sol\":2134:2339  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_125:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventMusic.sol\":1392:1478  function approveMintingAll() public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/NFTEventMusic.sol\":1467:1471  true */\n      0x01\n        /* \"contracts/NFTEventMusic.sol\":1448:1464  _mintingApproved */\n      0x09\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1448:1471  _mintingApproved = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1392:1478  function approveMintingAll() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":842:843  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":846:853  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":855:867  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":855:865  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":855:867  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:833  _update */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTEventMusic.sol\":975:1386  function requestMint(string memory uri) public onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/NFTEventMusic.sol\":1050:1066  _mintingApproved */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTEventMusic.sol\":1042:1095  require(_mintingApproved, \"Minting not approved yet\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/NFTEventMusic.sol\":1105:1120  uint256 tokenId */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1123:1135  _nextTokenId */\n      0x08\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1123:1137  _nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/NFTEventMusic.sol\":1105:1137  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1147:1174  _safeMint(owner(), tokenId) */\n      tag_170\n        /* \"contracts/NFTEventMusic.sol\":1157:1164  owner() */\n      tag_171\n        /* \"contracts/NFTEventMusic.sol\":1157:1162  owner */\n      tag_77\n        /* \"contracts/NFTEventMusic.sol\":1157:1164  owner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/NFTEventMusic.sol\":1166:1173  tokenId */\n      dup3\n        /* \"contracts/NFTEventMusic.sol\":1147:1156  _safeMint */\n      tag_172\n        /* \"contracts/NFTEventMusic.sol\":1147:1174  _safeMint(owner(), tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/NFTEventMusic.sol\":1184:1210  _setTokenURI(tokenId, uri) */\n      tag_173\n        /* \"contracts/NFTEventMusic.sol\":1197:1204  tokenId */\n      dup2\n        /* \"contracts/NFTEventMusic.sol\":1206:1209  uri */\n      dup4\n        /* \"contracts/NFTEventMusic.sol\":1184:1196  _setTokenURI */\n      tag_174\n        /* \"contracts/NFTEventMusic.sol\":1184:1210  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/NFTEventMusic.sol\":1253:1327  MintRequest({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTEventMusic.sol\":1284:1287  uri */\n      dup4\n        /* \"contracts/NFTEventMusic.sol\":1253:1327  MintRequest({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTEventMusic.sol\":1311:1316  false */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1253:1327  MintRequest({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1229:1241  mintRequests */\n      0x0b\n        /* \"contracts/NFTEventMusic.sol\":1229:1250  mintRequests[owner()] */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1242:1249  owner() */\n      tag_175\n        /* \"contracts/NFTEventMusic.sol\":1242:1247  owner */\n      tag_77\n        /* \"contracts/NFTEventMusic.sol\":1242:1249  owner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/NFTEventMusic.sol\":1229:1250  mintRequests[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventMusic.sol\":1229:1327  mintRequests[owner()] = MintRequest({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1371:1378  tokenId */\n      dup1\n        /* \"contracts/NFTEventMusic.sol\":1366:1369  uri */\n      dup3\n        /* \"contracts/NFTEventMusic.sol\":1343:1379  MintRequested(owner(), uri, tokenId) */\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/NFTEventMusic.sol\":1357:1364  owner() */\n      tag_180\n        /* \"contracts/NFTEventMusic.sol\":1357:1362  owner */\n      tag_77\n        /* \"contracts/NFTEventMusic.sol\":1357:1364  owner() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/NFTEventMusic.sol\":1343:1379  MintRequested(owner(), uri, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5d524e0183e95410ff30df610eeef1541403d23325ff607098b786db901f87d2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/NFTEventMusic.sol\":1032:1386  {... */\n      pop\n        /* \"contracts/NFTEventMusic.sol\":975:1386  function requestMint(string memory uri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_119\n      jump\t// in\n    tag_183:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_184\n      swap1\n      tag_119\n      jump\t// in\n    tag_184:\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_186\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_185)\n    tag_186:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_187:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_187\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventMusic.sol\":1939:2128  function tokenURI(uint256 tokenId)... */\n    tag_92:\n        /* \"contracts/NFTEventMusic.sol\":2062:2075  string memory */\n      0x60\n        /* \"contracts/NFTEventMusic.sol\":2098:2121  super.tokenURI(tokenId) */\n      tag_197\n        /* \"contracts/NFTEventMusic.sol\":2113:2120  tokenId */\n      dup3\n        /* \"contracts/NFTEventMusic.sol\":2098:2112  super.tokenURI */\n      tag_198\n        /* \"contracts/NFTEventMusic.sol\":2098:2121  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/NFTEventMusic.sol\":2091:2121  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1939:2128  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventMusic.sol\":561:612  mapping(address => MintRequest) public mintRequests */\n    tag_96:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_119\n      jump\t// in\n    tag_199:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_119\n      jump\t// in\n    tag_200:\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_202\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_201)\n    tag_202:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_203:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_203\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTEventMusic.sol\":1484:1670  function approveMintingOne(address to) public onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/NFTEventMusic.sol\":1587:1592  false */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1558:1592  mintRequests[to].approved == false */\n      iszero\n      iszero\n        /* \"contracts/NFTEventMusic.sol\":1558:1570  mintRequests */\n      0x0b\n        /* \"contracts/NFTEventMusic.sol\":1558:1574  mintRequests[to] */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1571:1573  to */\n      dup4\n        /* \"contracts/NFTEventMusic.sol\":1558:1574  mintRequests[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventMusic.sol\":1558:1583  mintRequests[to].approved */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTEventMusic.sol\":1558:1592  mintRequests[to].approved == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/NFTEventMusic.sol\":1550:1621  require(mintRequests[to].approved == false, \"Request already approved\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/NFTEventMusic.sol\":1659:1663  true */\n      0x01\n        /* \"contracts/NFTEventMusic.sol\":1631:1643  mintRequests */\n      0x0b\n        /* \"contracts/NFTEventMusic.sol\":1631:1647  mintRequests[to] */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1644:1646  to */\n      dup4\n        /* \"contracts/NFTEventMusic.sol\":1631:1647  mintRequests[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventMusic.sol\":1631:1656  mintRequests[to].approved */\n      0x01\n      add\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1631:1663  mintRequests[to].approved = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1484:1670  function approveMintingOne(address to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTEventMusic.sol\":1676:1865  function getMintRequest(address to) public view returns (string memory, bool) {... */\n    tag_109:\n        /* \"contracts/NFTEventMusic.sol\":1733:1746  string memory */\n      0x60\n        /* \"contracts/NFTEventMusic.sol\":1748:1752  bool */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1764:1791  MintRequest storage request */\n      dup1\n        /* \"contracts/NFTEventMusic.sol\":1794:1806  mintRequests */\n      0x0b\n        /* \"contracts/NFTEventMusic.sol\":1794:1810  mintRequests[to] */\n      0x00\n        /* \"contracts/NFTEventMusic.sol\":1807:1809  to */\n      dup6\n        /* \"contracts/NFTEventMusic.sol\":1794:1810  mintRequests[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTEventMusic.sol\":1764:1810  MintRequest storage request = mintRequests[to] */\n      swap1\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1828:1835  request */\n      dup1\n        /* \"contracts/NFTEventMusic.sol\":1828:1839  request.uri */\n      0x00\n      add\n        /* \"contracts/NFTEventMusic.sol\":1841:1848  request */\n      dup2\n        /* \"contracts/NFTEventMusic.sol\":1841:1857  request.approved */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTEventMusic.sol\":1820:1858  return (request.uri, request.approved) */\n      dup2\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_119\n      jump\t// in\n    tag_212:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_119\n      jump\t// in\n    tag_213:\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_215\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_214)\n    tag_215:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_216:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_216\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/NFTEventMusic.sol\":1676:1865  function getMintRequest(address to) public view returns (string memory, bool) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_224\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_256\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_256:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      0x01\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_270\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_275\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_274)\n    tag_275:\n      0x60\n      swap2\n      pop\n    tag_274:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_283:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_284\n      swap1\n      tag_119\n      jump\t// in\n    tag_284:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_285\n      swap1\n      tag_119\n      jump\t// in\n    tag_285:\n      dup1\n      iszero\n      tag_286\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_287\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_286)\n    tag_287:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_288:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_288\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_282)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_293\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_282)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_282:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_298\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_299\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_304\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap3\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_328:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_330\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_331)\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_334\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_337\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_338\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_340\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_349\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_350\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_351\n      jumpi\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n    tag_351:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_354\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_354:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_357\n      jumpi\n      tag_358\n      tag_359\n      jump\t// in\n    tag_358:\n    tag_357:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_363\n      jumpi\n      tag_364\n      tag_359\n      jump\t// in\n    tag_364:\n    tag_363:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_366\n      jumpi\n      tag_367\n      tag_359\n      jump\t// in\n    tag_367:\n    tag_366:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_369\n      jumpi\n      tag_370\n      tag_359\n      jump\t// in\n    tag_370:\n    tag_369:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_372\n      jumpi\n      tag_373\n      tag_359\n      jump\t// in\n    tag_373:\n    tag_372:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_375\n      jumpi\n      tag_376\n      tag_359\n      jump\t// in\n    tag_376:\n    tag_375:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_378\n      jumpi\n      tag_379\n      tag_359\n      jump\t// in\n    tag_379:\n    tag_378:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_380\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_381:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_382:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_383:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_384:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_385:\n        /* \"#utility.yul\":561:584   */\n      tag_449\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_384\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_450:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_386:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_452\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_385\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_30:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_455\n      tag_382\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":833:952   */\n    tag_454:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_456\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_386\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_387:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_388:\n        /* \"#utility.yul\":1268:1289   */\n      tag_459\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_387\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_33:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_461\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_388\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_389:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_390:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_391:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_465:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_465)\n    tag_467:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_392:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_393:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_470\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_389\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":2329:2400   */\n      tag_471\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_390\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_472\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_391\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2499:2528   */\n      tag_473\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_392\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_37:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_475\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_393\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_394:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_395:\n        /* \"#utility.yul\":3016:3040   */\n      tag_478\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_394\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_479:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_396:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_481\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_395\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_40:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_484\n      tag_382\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3292:3411   */\n    tag_483:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_485\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_396\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_397:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_398:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_488\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_397\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_399:\n        /* \"#utility.yul\":3872:3896   */\n      tag_490\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_398\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_43:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_492\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_399\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_400:\n        /* \"#utility.yul\":4210:4234   */\n      tag_494\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_398\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_495:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_401:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_497\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_400\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_46:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_500\n      tag_382\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4503:4622   */\n    tag_499:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_501\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_401\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_502\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_396\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_50:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_505\n      tag_382\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5000:5119   */\n    tag_504:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_506\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_401\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_507\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_401\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_508\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_396\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_66:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_511\n      tag_382\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5591:5710   */\n    tag_510:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_512\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_401\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_402:\n        /* \"#utility.yul\":5937:5961   */\n      tag_514\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_394\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_69:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_516\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_402\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6319   */\n    tag_403:\n        /* \"#utility.yul\":6311:6312   */\n      0x00\n        /* \"#utility.yul\":6308:6309   */\n      dup1\n        /* \"#utility.yul\":6301:6313   */\n      revert\n        /* \"#utility.yul\":6325:6442   */\n    tag_404:\n        /* \"#utility.yul\":6434:6435   */\n      0x00\n        /* \"#utility.yul\":6431:6432   */\n      dup1\n        /* \"#utility.yul\":6424:6436   */\n      revert\n        /* \"#utility.yul\":6448:6628   */\n    tag_353:\n        /* \"#utility.yul\":6496:6573   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6493:6494   */\n      0x00\n        /* \"#utility.yul\":6486:6574   */\n      mstore\n        /* \"#utility.yul\":6593:6597   */\n      0x41\n        /* \"#utility.yul\":6590:6591   */\n      0x04\n        /* \"#utility.yul\":6583:6598   */\n      mstore\n        /* \"#utility.yul\":6617:6621   */\n      0x24\n        /* \"#utility.yul\":6614:6615   */\n      0x00\n        /* \"#utility.yul\":6607:6622   */\n      revert\n        /* \"#utility.yul\":6634:6915   */\n    tag_405:\n        /* \"#utility.yul\":6717:6744   */\n      tag_521\n        /* \"#utility.yul\":6739:6743   */\n      dup3\n        /* \"#utility.yul\":6717:6744   */\n      tag_392\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6709:6715   */\n      dup2\n        /* \"#utility.yul\":6705:6745   */\n      add\n        /* \"#utility.yul\":6847:6853   */\n      dup2\n        /* \"#utility.yul\":6835:6845   */\n      dup2\n        /* \"#utility.yul\":6832:6854   */\n      lt\n        /* \"#utility.yul\":6811:6829   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6799:6809   */\n      dup3\n        /* \"#utility.yul\":6796:6830   */\n      gt\n        /* \"#utility.yul\":6793:6855   */\n      or\n        /* \"#utility.yul\":6790:6878   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":6858:6876   */\n      tag_523\n      tag_353\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":6790:6878   */\n    tag_522:\n        /* \"#utility.yul\":6898:6908   */\n      dup1\n        /* \"#utility.yul\":6894:6896   */\n      0x40\n        /* \"#utility.yul\":6887:6909   */\n      mstore\n        /* \"#utility.yul\":6677:6915   */\n      pop\n        /* \"#utility.yul\":6634:6915   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6921:7050   */\n    tag_406:\n        /* \"#utility.yul\":6955:6961   */\n      0x00\n        /* \"#utility.yul\":6982:7002   */\n      tag_525\n      tag_381\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6972:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":7011:7044   */\n      tag_526\n        /* \"#utility.yul\":7039:7043   */\n      dup3\n        /* \"#utility.yul\":7031:7037   */\n      dup3\n        /* \"#utility.yul\":7011:7044   */\n      tag_405\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6921:7050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7056:7364   */\n    tag_407:\n        /* \"#utility.yul\":7118:7122   */\n      0x00\n        /* \"#utility.yul\":7208:7226   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7200:7206   */\n      dup3\n        /* \"#utility.yul\":7197:7227   */\n      gt\n        /* \"#utility.yul\":7194:7250   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":7230:7248   */\n      tag_529\n      tag_353\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7194:7250   */\n    tag_528:\n        /* \"#utility.yul\":7268:7297   */\n      tag_530\n        /* \"#utility.yul\":7290:7296   */\n      dup3\n        /* \"#utility.yul\":7268:7297   */\n      tag_392\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7260:7297   */\n      swap1\n      pop\n        /* \"#utility.yul\":7352:7356   */\n      0x20\n        /* \"#utility.yul\":7346:7350   */\n      dup2\n        /* \"#utility.yul\":7342:7357   */\n      add\n        /* \"#utility.yul\":7334:7357   */\n      swap1\n      pop\n        /* \"#utility.yul\":7056:7364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7370:7516   */\n    tag_408:\n        /* \"#utility.yul\":7467:7473   */\n      dup3\n        /* \"#utility.yul\":7462:7465   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup4\n        /* \"#utility.yul\":7444:7474   */\n      calldatacopy\n        /* \"#utility.yul\":7508:7509   */\n      0x00\n        /* \"#utility.yul\":7499:7505   */\n      dup4\n        /* \"#utility.yul\":7494:7497   */\n      dup4\n        /* \"#utility.yul\":7490:7506   */\n      add\n        /* \"#utility.yul\":7483:7510   */\n      mstore\n        /* \"#utility.yul\":7370:7516   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7522:7947   */\n    tag_409:\n        /* \"#utility.yul\":7600:7605   */\n      0x00\n        /* \"#utility.yul\":7625:7691   */\n      tag_533\n        /* \"#utility.yul\":7641:7690   */\n      tag_534\n        /* \"#utility.yul\":7683:7689   */\n      dup5\n        /* \"#utility.yul\":7641:7690   */\n      tag_407\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7625:7691   */\n      tag_406\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":7616:7691   */\n      swap1\n      pop\n        /* \"#utility.yul\":7714:7720   */\n      dup3\n        /* \"#utility.yul\":7707:7712   */\n      dup2\n        /* \"#utility.yul\":7700:7721   */\n      mstore\n        /* \"#utility.yul\":7752:7756   */\n      0x20\n        /* \"#utility.yul\":7745:7750   */\n      dup2\n        /* \"#utility.yul\":7741:7757   */\n      add\n        /* \"#utility.yul\":7790:7793   */\n      dup5\n        /* \"#utility.yul\":7781:7787   */\n      dup5\n        /* \"#utility.yul\":7776:7779   */\n      dup5\n        /* \"#utility.yul\":7772:7788   */\n      add\n        /* \"#utility.yul\":7769:7794   */\n      gt\n        /* \"#utility.yul\":7766:7878   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":7797:7876   */\n      tag_536\n      tag_404\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":7766:7878   */\n    tag_535:\n        /* \"#utility.yul\":7887:7941   */\n      tag_537\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7924:7927   */\n      dup6\n        /* \"#utility.yul\":7887:7941   */\n      tag_408\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7606:7947   */\n      pop\n        /* \"#utility.yul\":7522:7947   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7967:8307   */\n    tag_410:\n        /* \"#utility.yul\":8023:8028   */\n      0x00\n        /* \"#utility.yul\":8072:8075   */\n      dup3\n        /* \"#utility.yul\":8065:8069   */\n      0x1f\n        /* \"#utility.yul\":8057:8063   */\n      dup4\n        /* \"#utility.yul\":8053:8070   */\n      add\n        /* \"#utility.yul\":8049:8076   */\n      slt\n        /* \"#utility.yul\":8039:8161   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":8080:8159   */\n      tag_540\n      tag_403\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8039:8161   */\n    tag_539:\n        /* \"#utility.yul\":8197:8203   */\n      dup2\n        /* \"#utility.yul\":8184:8204   */\n      calldataload\n        /* \"#utility.yul\":8222:8301   */\n      tag_541\n        /* \"#utility.yul\":8297:8300   */\n      dup5\n        /* \"#utility.yul\":8289:8295   */\n      dup3\n        /* \"#utility.yul\":8282:8286   */\n      0x20\n        /* \"#utility.yul\":8274:8280   */\n      dup7\n        /* \"#utility.yul\":8270:8287   */\n      add\n        /* \"#utility.yul\":8222:8301   */\n      tag_409\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8213:8301   */\n      swap2\n      pop\n        /* \"#utility.yul\":8029:8307   */\n      pop\n        /* \"#utility.yul\":7967:8307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8313:8822   */\n    tag_74:\n        /* \"#utility.yul\":8382:8388   */\n      0x00\n        /* \"#utility.yul\":8431:8433   */\n      0x20\n        /* \"#utility.yul\":8419:8428   */\n      dup3\n        /* \"#utility.yul\":8410:8417   */\n      dup5\n        /* \"#utility.yul\":8406:8429   */\n      sub\n        /* \"#utility.yul\":8402:8434   */\n      slt\n        /* \"#utility.yul\":8399:8518   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":8437:8516   */\n      tag_544\n      tag_382\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":8399:8518   */\n    tag_543:\n        /* \"#utility.yul\":8585:8586   */\n      0x00\n        /* \"#utility.yul\":8574:8583   */\n      dup3\n        /* \"#utility.yul\":8570:8587   */\n      add\n        /* \"#utility.yul\":8557:8588   */\n      calldataload\n        /* \"#utility.yul\":8615:8633   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8607:8613   */\n      dup2\n        /* \"#utility.yul\":8604:8634   */\n      gt\n        /* \"#utility.yul\":8601:8718   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":8637:8716   */\n      tag_546\n      tag_383\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8601:8718   */\n    tag_545:\n        /* \"#utility.yul\":8742:8805   */\n      tag_547\n        /* \"#utility.yul\":8797:8804   */\n      dup5\n        /* \"#utility.yul\":8788:8794   */\n      dup3\n        /* \"#utility.yul\":8777:8786   */\n      dup6\n        /* \"#utility.yul\":8773:8795   */\n      add\n        /* \"#utility.yul\":8742:8805   */\n      tag_410\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8732:8805   */\n      swap2\n      pop\n        /* \"#utility.yul\":8528:8815   */\n      pop\n        /* \"#utility.yul\":8313:8822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:8944   */\n    tag_411:\n        /* \"#utility.yul\":8898:8919   */\n      tag_549\n        /* \"#utility.yul\":8913:8918   */\n      dup2\n        /* \"#utility.yul\":8898:8919   */\n      tag_387\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8891:8896   */\n      dup2\n        /* \"#utility.yul\":8888:8920   */\n      eq\n        /* \"#utility.yul\":8878:8938   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8931:8932   */\n      dup1\n        /* \"#utility.yul\":8924:8936   */\n      revert\n        /* \"#utility.yul\":8878:8938   */\n    tag_550:\n        /* \"#utility.yul\":8828:8944   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8950:9083   */\n    tag_412:\n        /* \"#utility.yul\":8993:8998   */\n      0x00\n        /* \"#utility.yul\":9031:9037   */\n      dup2\n        /* \"#utility.yul\":9018:9038   */\n      calldataload\n        /* \"#utility.yul\":9009:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":9047:9077   */\n      tag_552\n        /* \"#utility.yul\":9071:9076   */\n      dup2\n        /* \"#utility.yul\":9047:9077   */\n      tag_411\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8950:9083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9089:9557   */\n    tag_84:\n        /* \"#utility.yul\":9154:9160   */\n      0x00\n        /* \"#utility.yul\":9162:9168   */\n      dup1\n        /* \"#utility.yul\":9211:9213   */\n      0x40\n        /* \"#utility.yul\":9199:9208   */\n      dup4\n        /* \"#utility.yul\":9190:9197   */\n      dup6\n        /* \"#utility.yul\":9186:9209   */\n      sub\n        /* \"#utility.yul\":9182:9214   */\n      slt\n        /* \"#utility.yul\":9179:9298   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_555\n      tag_382\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9179:9298   */\n    tag_554:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_556\n        /* \"#utility.yul\":9407:9414   */\n      dup6\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup7\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_401\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9352:9415   */\n      swap3\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9540   */\n      tag_557\n        /* \"#utility.yul\":9532:9539   */\n      dup6\n        /* \"#utility.yul\":9523:9529   */\n      dup3\n        /* \"#utility.yul\":9512:9521   */\n      dup7\n        /* \"#utility.yul\":9508:9530   */\n      add\n        /* \"#utility.yul\":9490:9540   */\n      tag_412\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9480:9540   */\n      swap2\n      pop\n        /* \"#utility.yul\":9435:9550   */\n      pop\n        /* \"#utility.yul\":9089:9557   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9563:9870   */\n    tag_413:\n        /* \"#utility.yul\":9624:9628   */\n      0x00\n        /* \"#utility.yul\":9714:9732   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9706:9712   */\n      dup3\n        /* \"#utility.yul\":9703:9733   */\n      gt\n        /* \"#utility.yul\":9700:9756   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":9736:9754   */\n      tag_560\n      tag_353\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9700:9756   */\n    tag_559:\n        /* \"#utility.yul\":9774:9803   */\n      tag_561\n        /* \"#utility.yul\":9796:9802   */\n      dup3\n        /* \"#utility.yul\":9774:9803   */\n      tag_392\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9766:9803   */\n      swap1\n      pop\n        /* \"#utility.yul\":9858:9862   */\n      0x20\n        /* \"#utility.yul\":9852:9856   */\n      dup2\n        /* \"#utility.yul\":9848:9863   */\n      add\n        /* \"#utility.yul\":9840:9863   */\n      swap1\n      pop\n        /* \"#utility.yul\":9563:9870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9876:10299   */\n    tag_414:\n        /* \"#utility.yul\":9953:9958   */\n      0x00\n        /* \"#utility.yul\":9978:10043   */\n      tag_563\n        /* \"#utility.yul\":9994:10042   */\n      tag_564\n        /* \"#utility.yul\":10035:10041   */\n      dup5\n        /* \"#utility.yul\":9994:10042   */\n      tag_413\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":9978:10043   */\n      tag_406\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9969:10043   */\n      swap1\n      pop\n        /* \"#utility.yul\":10066:10072   */\n      dup3\n        /* \"#utility.yul\":10059:10064   */\n      dup2\n        /* \"#utility.yul\":10052:10073   */\n      mstore\n        /* \"#utility.yul\":10104:10108   */\n      0x20\n        /* \"#utility.yul\":10097:10102   */\n      dup2\n        /* \"#utility.yul\":10093:10109   */\n      add\n        /* \"#utility.yul\":10142:10145   */\n      dup5\n        /* \"#utility.yul\":10133:10139   */\n      dup5\n        /* \"#utility.yul\":10128:10131   */\n      dup5\n        /* \"#utility.yul\":10124:10140   */\n      add\n        /* \"#utility.yul\":10121:10146   */\n      gt\n        /* \"#utility.yul\":10118:10230   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":10149:10228   */\n      tag_566\n      tag_404\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10118:10230   */\n    tag_565:\n        /* \"#utility.yul\":10239:10293   */\n      tag_567\n        /* \"#utility.yul\":10286:10292   */\n      dup5\n        /* \"#utility.yul\":10281:10284   */\n      dup3\n        /* \"#utility.yul\":10276:10279   */\n      dup6\n        /* \"#utility.yul\":10239:10293   */\n      tag_408\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":9959:10299   */\n      pop\n        /* \"#utility.yul\":9876:10299   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10656   */\n    tag_415:\n        /* \"#utility.yul\":10373:10378   */\n      0x00\n        /* \"#utility.yul\":10422:10425   */\n      dup3\n        /* \"#utility.yul\":10415:10419   */\n      0x1f\n        /* \"#utility.yul\":10407:10413   */\n      dup4\n        /* \"#utility.yul\":10403:10420   */\n      add\n        /* \"#utility.yul\":10399:10426   */\n      slt\n        /* \"#utility.yul\":10389:10511   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":10430:10509   */\n      tag_570\n      tag_403\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":10389:10511   */\n    tag_569:\n        /* \"#utility.yul\":10547:10553   */\n      dup2\n        /* \"#utility.yul\":10534:10554   */\n      calldataload\n        /* \"#utility.yul\":10572:10650   */\n      tag_571\n        /* \"#utility.yul\":10646:10649   */\n      dup5\n        /* \"#utility.yul\":10638:10644   */\n      dup3\n        /* \"#utility.yul\":10631:10635   */\n      0x20\n        /* \"#utility.yul\":10623:10629   */\n      dup7\n        /* \"#utility.yul\":10619:10636   */\n      add\n        /* \"#utility.yul\":10572:10650   */\n      tag_414\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10563:10650   */\n      swap2\n      pop\n        /* \"#utility.yul\":10379:10656   */\n      pop\n        /* \"#utility.yul\":10318:10656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:11605   */\n    tag_88:\n        /* \"#utility.yul\":10757:10763   */\n      0x00\n        /* \"#utility.yul\":10765:10771   */\n      dup1\n        /* \"#utility.yul\":10773:10779   */\n      0x00\n        /* \"#utility.yul\":10781:10787   */\n      dup1\n        /* \"#utility.yul\":10830:10833   */\n      0x80\n        /* \"#utility.yul\":10818:10827   */\n      dup6\n        /* \"#utility.yul\":10809:10816   */\n      dup8\n        /* \"#utility.yul\":10805:10828   */\n      sub\n        /* \"#utility.yul\":10801:10834   */\n      slt\n        /* \"#utility.yul\":10798:10918   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":10837:10916   */\n      tag_574\n      tag_382\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":10798:10918   */\n    tag_573:\n        /* \"#utility.yul\":10957:10958   */\n      0x00\n        /* \"#utility.yul\":10982:11035   */\n      tag_575\n        /* \"#utility.yul\":11027:11034   */\n      dup8\n        /* \"#utility.yul\":11018:11024   */\n      dup3\n        /* \"#utility.yul\":11007:11016   */\n      dup9\n        /* \"#utility.yul\":11003:11025   */\n      add\n        /* \"#utility.yul\":10982:11035   */\n      tag_401\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":10972:11035   */\n      swap5\n      pop\n        /* \"#utility.yul\":10928:11045   */\n      pop\n        /* \"#utility.yul\":11084:11086   */\n      0x20\n        /* \"#utility.yul\":11110:11163   */\n      tag_576\n        /* \"#utility.yul\":11155:11162   */\n      dup8\n        /* \"#utility.yul\":11146:11152   */\n      dup3\n        /* \"#utility.yul\":11135:11144   */\n      dup9\n        /* \"#utility.yul\":11131:11153   */\n      add\n        /* \"#utility.yul\":11110:11163   */\n      tag_401\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":11100:11163   */\n      swap4\n      pop\n        /* \"#utility.yul\":11055:11173   */\n      pop\n        /* \"#utility.yul\":11212:11214   */\n      0x40\n        /* \"#utility.yul\":11238:11291   */\n      tag_577\n        /* \"#utility.yul\":11283:11290   */\n      dup8\n        /* \"#utility.yul\":11274:11280   */\n      dup3\n        /* \"#utility.yul\":11263:11272   */\n      dup9\n        /* \"#utility.yul\":11259:11281   */\n      add\n        /* \"#utility.yul\":11238:11291   */\n      tag_396\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11228:11291   */\n      swap3\n      pop\n        /* \"#utility.yul\":11183:11301   */\n      pop\n        /* \"#utility.yul\":11368:11370   */\n      0x60\n        /* \"#utility.yul\":11357:11366   */\n      dup6\n        /* \"#utility.yul\":11353:11371   */\n      add\n        /* \"#utility.yul\":11340:11372   */\n      calldataload\n        /* \"#utility.yul\":11399:11417   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11391:11397   */\n      dup2\n        /* \"#utility.yul\":11388:11418   */\n      gt\n        /* \"#utility.yul\":11385:11502   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":11421:11500   */\n      tag_579\n      tag_383\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":11385:11502   */\n    tag_578:\n        /* \"#utility.yul\":11526:11588   */\n      tag_580\n        /* \"#utility.yul\":11580:11587   */\n      dup8\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11560:11569   */\n      dup9\n        /* \"#utility.yul\":11556:11578   */\n      add\n        /* \"#utility.yul\":11526:11588   */\n      tag_415\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11516:11588   */\n      swap2\n      pop\n        /* \"#utility.yul\":11311:11598   */\n      pop\n        /* \"#utility.yul\":10662:11605   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:12022   */\n    tag_98:\n        /* \"#utility.yul\":11746:11750   */\n      0x00\n        /* \"#utility.yul\":11784:11786   */\n      0x40\n        /* \"#utility.yul\":11773:11782   */\n      dup3\n        /* \"#utility.yul\":11769:11787   */\n      add\n        /* \"#utility.yul\":11761:11787   */\n      swap1\n      pop\n        /* \"#utility.yul\":11833:11842   */\n      dup2\n        /* \"#utility.yul\":11827:11831   */\n      dup2\n        /* \"#utility.yul\":11823:11843   */\n      sub\n        /* \"#utility.yul\":11819:11820   */\n      0x00\n        /* \"#utility.yul\":11808:11817   */\n      dup4\n        /* \"#utility.yul\":11804:11821   */\n      add\n        /* \"#utility.yul\":11797:11844   */\n      mstore\n        /* \"#utility.yul\":11861:11939   */\n      tag_582\n        /* \"#utility.yul\":11934:11938   */\n      dup2\n        /* \"#utility.yul\":11925:11931   */\n      dup6\n        /* \"#utility.yul\":11861:11939   */\n      tag_393\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":11853:11939   */\n      swap1\n      pop\n        /* \"#utility.yul\":11949:12015   */\n      tag_583\n        /* \"#utility.yul\":12011:12013   */\n      0x20\n        /* \"#utility.yul\":12000:12009   */\n      dup4\n        /* \"#utility.yul\":11996:12014   */\n      add\n        /* \"#utility.yul\":11987:11993   */\n      dup5\n        /* \"#utility.yul\":11949:12015   */\n      tag_388\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":11611:12022   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12028:12502   */\n    tag_104:\n        /* \"#utility.yul\":12096:12102   */\n      0x00\n        /* \"#utility.yul\":12104:12110   */\n      dup1\n        /* \"#utility.yul\":12153:12155   */\n      0x40\n        /* \"#utility.yul\":12141:12150   */\n      dup4\n        /* \"#utility.yul\":12132:12139   */\n      dup6\n        /* \"#utility.yul\":12128:12151   */\n      sub\n        /* \"#utility.yul\":12124:12156   */\n      slt\n        /* \"#utility.yul\":12121:12240   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":12159:12238   */\n      tag_586\n      tag_382\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12121:12240   */\n    tag_585:\n        /* \"#utility.yul\":12279:12280   */\n      0x00\n        /* \"#utility.yul\":12304:12357   */\n      tag_587\n        /* \"#utility.yul\":12349:12356   */\n      dup6\n        /* \"#utility.yul\":12340:12346   */\n      dup3\n        /* \"#utility.yul\":12329:12338   */\n      dup7\n        /* \"#utility.yul\":12325:12347   */\n      add\n        /* \"#utility.yul\":12304:12357   */\n      tag_401\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":12294:12357   */\n      swap3\n      pop\n        /* \"#utility.yul\":12250:12367   */\n      pop\n        /* \"#utility.yul\":12406:12408   */\n      0x20\n        /* \"#utility.yul\":12432:12485   */\n      tag_588\n        /* \"#utility.yul\":12477:12484   */\n      dup6\n        /* \"#utility.yul\":12468:12474   */\n      dup3\n        /* \"#utility.yul\":12457:12466   */\n      dup7\n        /* \"#utility.yul\":12453:12475   */\n      add\n        /* \"#utility.yul\":12432:12485   */\n      tag_401\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":12422:12485   */\n      swap2\n      pop\n        /* \"#utility.yul\":12377:12495   */\n      pop\n        /* \"#utility.yul\":12028:12502   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12508:12688   */\n    tag_416:\n        /* \"#utility.yul\":12556:12633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12553:12554   */\n      0x00\n        /* \"#utility.yul\":12546:12634   */\n      mstore\n        /* \"#utility.yul\":12653:12657   */\n      0x22\n        /* \"#utility.yul\":12650:12651   */\n      0x04\n        /* \"#utility.yul\":12643:12658   */\n      mstore\n        /* \"#utility.yul\":12677:12681   */\n      0x24\n        /* \"#utility.yul\":12674:12675   */\n      0x00\n        /* \"#utility.yul\":12667:12682   */\n      revert\n        /* \"#utility.yul\":12694:13014   */\n    tag_119:\n        /* \"#utility.yul\":12738:12744   */\n      0x00\n        /* \"#utility.yul\":12775:12776   */\n      0x02\n        /* \"#utility.yul\":12769:12773   */\n      dup3\n        /* \"#utility.yul\":12765:12777   */\n      div\n        /* \"#utility.yul\":12755:12777   */\n      swap1\n      pop\n        /* \"#utility.yul\":12822:12823   */\n      0x01\n        /* \"#utility.yul\":12816:12820   */\n      dup3\n        /* \"#utility.yul\":12812:12824   */\n      and\n        /* \"#utility.yul\":12843:12861   */\n      dup1\n        /* \"#utility.yul\":12833:12914   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":12899:12903   */\n      0x7f\n        /* \"#utility.yul\":12891:12897   */\n      dup3\n        /* \"#utility.yul\":12887:12904   */\n      and\n        /* \"#utility.yul\":12877:12904   */\n      swap2\n      pop\n        /* \"#utility.yul\":12833:12914   */\n    tag_591:\n        /* \"#utility.yul\":12961:12963   */\n      0x20\n        /* \"#utility.yul\":12953:12959   */\n      dup3\n        /* \"#utility.yul\":12950:12964   */\n      lt\n        /* \"#utility.yul\":12930:12948   */\n      dup2\n        /* \"#utility.yul\":12927:12965   */\n      sub\n        /* \"#utility.yul\":12924:13008   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":12980:12998   */\n      tag_593\n      tag_416\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":12924:13008   */\n    tag_592:\n        /* \"#utility.yul\":12745:13014   */\n      pop\n        /* \"#utility.yul\":12694:13014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13020:13462   */\n    tag_142:\n        /* \"#utility.yul\":13169:13173   */\n      0x00\n        /* \"#utility.yul\":13207:13209   */\n      0x60\n        /* \"#utility.yul\":13196:13205   */\n      dup3\n        /* \"#utility.yul\":13192:13210   */\n      add\n        /* \"#utility.yul\":13184:13210   */\n      swap1\n      pop\n        /* \"#utility.yul\":13220:13291   */\n      tag_595\n        /* \"#utility.yul\":13288:13289   */\n      0x00\n        /* \"#utility.yul\":13277:13286   */\n      dup4\n        /* \"#utility.yul\":13273:13290   */\n      add\n        /* \"#utility.yul\":13264:13270   */\n      dup7\n        /* \"#utility.yul\":13220:13291   */\n      tag_399\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":13301:13373   */\n      tag_596\n        /* \"#utility.yul\":13369:13371   */\n      0x20\n        /* \"#utility.yul\":13358:13367   */\n      dup4\n        /* \"#utility.yul\":13354:13372   */\n      add\n        /* \"#utility.yul\":13345:13351   */\n      dup6\n        /* \"#utility.yul\":13301:13373   */\n      tag_402\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":13383:13455   */\n      tag_597\n        /* \"#utility.yul\":13451:13453   */\n      0x40\n        /* \"#utility.yul\":13440:13449   */\n      dup4\n        /* \"#utility.yul\":13436:13454   */\n      add\n        /* \"#utility.yul\":13427:13433   */\n      dup5\n        /* \"#utility.yul\":13383:13455   */\n      tag_399\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":13020:13462   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13468:13642   */\n    tag_417:\n        /* \"#utility.yul\":13608:13634   */\n      0x4d696e74696e67206e6f7420617070726f766564207965740000000000000000\n        /* \"#utility.yul\":13604:13605   */\n      0x00\n        /* \"#utility.yul\":13596:13602   */\n      dup3\n        /* \"#utility.yul\":13592:13606   */\n      add\n        /* \"#utility.yul\":13585:13635   */\n      mstore\n        /* \"#utility.yul\":13468:13642   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13648:14014   */\n    tag_418:\n        /* \"#utility.yul\":13790:13793   */\n      0x00\n        /* \"#utility.yul\":13811:13878   */\n      tag_600\n        /* \"#utility.yul\":13875:13877   */\n      0x18\n        /* \"#utility.yul\":13870:13873   */\n      dup4\n        /* \"#utility.yul\":13811:13878   */\n      tag_390\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":13804:13878   */\n      swap2\n      pop\n        /* \"#utility.yul\":13887:13980   */\n      tag_601\n        /* \"#utility.yul\":13976:13979   */\n      dup3\n        /* \"#utility.yul\":13887:13980   */\n      tag_417\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":14005:14007   */\n      0x20\n        /* \"#utility.yul\":14000:14003   */\n      dup3\n        /* \"#utility.yul\":13996:14008   */\n      add\n        /* \"#utility.yul\":13989:14008   */\n      swap1\n      pop\n        /* \"#utility.yul\":13648:14014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14020:14439   */\n    tag_167:\n        /* \"#utility.yul\":14186:14190   */\n      0x00\n        /* \"#utility.yul\":14224:14226   */\n      0x20\n        /* \"#utility.yul\":14213:14222   */\n      dup3\n        /* \"#utility.yul\":14209:14227   */\n      add\n        /* \"#utility.yul\":14201:14227   */\n      swap1\n      pop\n        /* \"#utility.yul\":14273:14282   */\n      dup2\n        /* \"#utility.yul\":14267:14271   */\n      dup2\n        /* \"#utility.yul\":14263:14283   */\n      sub\n        /* \"#utility.yul\":14259:14260   */\n      0x00\n        /* \"#utility.yul\":14248:14257   */\n      dup4\n        /* \"#utility.yul\":14244:14261   */\n      add\n        /* \"#utility.yul\":14237:14284   */\n      mstore\n        /* \"#utility.yul\":14301:14432   */\n      tag_603\n        /* \"#utility.yul\":14427:14431   */\n      dup2\n        /* \"#utility.yul\":14301:14432   */\n      tag_418\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":14293:14432   */\n      swap1\n      pop\n        /* \"#utility.yul\":14020:14439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14445:14625   */\n    tag_419:\n        /* \"#utility.yul\":14493:14570   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14490:14491   */\n      0x00\n        /* \"#utility.yul\":14483:14571   */\n      mstore\n        /* \"#utility.yul\":14590:14594   */\n      0x11\n        /* \"#utility.yul\":14587:14588   */\n      0x04\n        /* \"#utility.yul\":14580:14595   */\n      mstore\n        /* \"#utility.yul\":14614:14618   */\n      0x24\n        /* \"#utility.yul\":14611:14612   */\n      0x00\n        /* \"#utility.yul\":14604:14619   */\n      revert\n        /* \"#utility.yul\":14631:14864   */\n    tag_169:\n        /* \"#utility.yul\":14670:14673   */\n      0x00\n        /* \"#utility.yul\":14693:14717   */\n      tag_606\n        /* \"#utility.yul\":14711:14716   */\n      dup3\n        /* \"#utility.yul\":14693:14717   */\n      tag_394\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":14684:14717   */\n      swap2\n      pop\n        /* \"#utility.yul\":14739:14805   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14732:14737   */\n      dup3\n        /* \"#utility.yul\":14729:14806   */\n      sub\n        /* \"#utility.yul\":14726:14829   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":14809:14827   */\n      tag_608\n      tag_419\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":14726:14829   */\n    tag_607:\n        /* \"#utility.yul\":14856:14857   */\n      0x01\n        /* \"#utility.yul\":14849:14854   */\n      dup3\n        /* \"#utility.yul\":14845:14858   */\n      add\n        /* \"#utility.yul\":14838:14858   */\n      swap1\n      pop\n        /* \"#utility.yul\":14631:14864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14870:15011   */\n    tag_420:\n        /* \"#utility.yul\":14919:14923   */\n      0x00\n        /* \"#utility.yul\":14942:14945   */\n      dup2\n        /* \"#utility.yul\":14934:14945   */\n      swap1\n      pop\n        /* \"#utility.yul\":14965:14968   */\n      dup2\n        /* \"#utility.yul\":14962:14963   */\n      0x00\n        /* \"#utility.yul\":14955:14969   */\n      mstore\n        /* \"#utility.yul\":14999:15003   */\n      0x20\n        /* \"#utility.yul\":14996:14997   */\n      0x00\n        /* \"#utility.yul\":14986:15004   */\n      keccak256\n        /* \"#utility.yul\":14978:15004   */\n      swap1\n      pop\n        /* \"#utility.yul\":14870:15011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15017:15110   */\n    tag_421:\n        /* \"#utility.yul\":15054:15060   */\n      0x00\n        /* \"#utility.yul\":15101:15103   */\n      0x20\n        /* \"#utility.yul\":15096:15098   */\n      0x1f\n        /* \"#utility.yul\":15089:15094   */\n      dup4\n        /* \"#utility.yul\":15085:15099   */\n      add\n        /* \"#utility.yul\":15081:15104   */\n      div\n        /* \"#utility.yul\":15071:15104   */\n      swap1\n      pop\n        /* \"#utility.yul\":15017:15110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15116:15223   */\n    tag_422:\n        /* \"#utility.yul\":15160:15168   */\n      0x00\n        /* \"#utility.yul\":15210:15215   */\n      dup3\n        /* \"#utility.yul\":15204:15208   */\n      dup3\n        /* \"#utility.yul\":15200:15216   */\n      shl\n        /* \"#utility.yul\":15179:15216   */\n      swap1\n      pop\n        /* \"#utility.yul\":15116:15223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15229:15622   */\n    tag_423:\n        /* \"#utility.yul\":15298:15304   */\n      0x00\n        /* \"#utility.yul\":15348:15349   */\n      0x08\n        /* \"#utility.yul\":15336:15346   */\n      dup4\n        /* \"#utility.yul\":15332:15350   */\n      mul\n        /* \"#utility.yul\":15371:15468   */\n      tag_613\n        /* \"#utility.yul\":15401:15467   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15390:15399   */\n      dup3\n        /* \"#utility.yul\":15371:15468   */\n      tag_422\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":15489:15528   */\n      tag_614\n        /* \"#utility.yul\":15519:15527   */\n      dup7\n        /* \"#utility.yul\":15508:15517   */\n      dup4\n        /* \"#utility.yul\":15489:15528   */\n      tag_422\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":15477:15528   */\n      swap6\n      pop\n        /* \"#utility.yul\":15561:15565   */\n      dup1\n        /* \"#utility.yul\":15557:15566   */\n      not\n        /* \"#utility.yul\":15550:15555   */\n      dup5\n        /* \"#utility.yul\":15546:15567   */\n      and\n        /* \"#utility.yul\":15537:15567   */\n      swap4\n      pop\n        /* \"#utility.yul\":15610:15614   */\n      dup1\n        /* \"#utility.yul\":15600:15608   */\n      dup7\n        /* \"#utility.yul\":15596:15615   */\n      and\n        /* \"#utility.yul\":15589:15594   */\n      dup5\n        /* \"#utility.yul\":15586:15616   */\n      or\n        /* \"#utility.yul\":15576:15616   */\n      swap3\n      pop\n        /* \"#utility.yul\":15305:15622   */\n      pop\n      pop\n        /* \"#utility.yul\":15229:15622   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15628:15688   */\n    tag_424:\n        /* \"#utility.yul\":15656:15659   */\n      0x00\n        /* \"#utility.yul\":15677:15682   */\n      dup2\n        /* \"#utility.yul\":15670:15682   */\n      swap1\n      pop\n        /* \"#utility.yul\":15628:15688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15694:15836   */\n    tag_425:\n        /* \"#utility.yul\":15744:15753   */\n      0x00\n        /* \"#utility.yul\":15777:15830   */\n      tag_617\n        /* \"#utility.yul\":15795:15829   */\n      tag_618\n        /* \"#utility.yul\":15804:15828   */\n      tag_619\n        /* \"#utility.yul\":15822:15827   */\n      dup5\n        /* \"#utility.yul\":15804:15828   */\n      tag_394\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":15795:15829   */\n      tag_424\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":15777:15830   */\n      tag_394\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":15764:15830   */\n      swap1\n      pop\n        /* \"#utility.yul\":15694:15836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15842:15917   */\n    tag_426:\n        /* \"#utility.yul\":15885:15888   */\n      0x00\n        /* \"#utility.yul\":15906:15911   */\n      dup2\n        /* \"#utility.yul\":15899:15911   */\n      swap1\n      pop\n        /* \"#utility.yul\":15842:15917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15923:16192   */\n    tag_427:\n        /* \"#utility.yul\":16033:16072   */\n      tag_622\n        /* \"#utility.yul\":16064:16071   */\n      dup4\n        /* \"#utility.yul\":16033:16072   */\n      tag_425\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":16094:16185   */\n      tag_623\n        /* \"#utility.yul\":16143:16184   */\n      tag_624\n        /* \"#utility.yul\":16167:16183   */\n      dup3\n        /* \"#utility.yul\":16143:16184   */\n      tag_426\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":16135:16141   */\n      dup5\n        /* \"#utility.yul\":16128:16132   */\n      dup5\n        /* \"#utility.yul\":16122:16133   */\n      sload\n        /* \"#utility.yul\":16094:16185   */\n      tag_423\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":16088:16092   */\n      dup3\n        /* \"#utility.yul\":16081:16186   */\n      sstore\n        /* \"#utility.yul\":15999:16192   */\n      pop\n        /* \"#utility.yul\":15923:16192   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16198:16271   */\n    tag_428:\n        /* \"#utility.yul\":16243:16246   */\n      0x00\n        /* \"#utility.yul\":16198:16271   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16277:16466   */\n    tag_429:\n        /* \"#utility.yul\":16354:16386   */\n      tag_627\n      tag_428\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":16395:16460   */\n      tag_628\n        /* \"#utility.yul\":16453:16459   */\n      dup2\n        /* \"#utility.yul\":16445:16451   */\n      dup5\n        /* \"#utility.yul\":16439:16443   */\n      dup5\n        /* \"#utility.yul\":16395:16460   */\n      tag_427\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":16330:16466   */\n      pop\n        /* \"#utility.yul\":16277:16466   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16472:16658   */\n    tag_430:\n        /* \"#utility.yul\":16532:16652   */\n    tag_630:\n        /* \"#utility.yul\":16549:16552   */\n      dup2\n        /* \"#utility.yul\":16542:16547   */\n      dup2\n        /* \"#utility.yul\":16539:16553   */\n      lt\n        /* \"#utility.yul\":16532:16652   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":16603:16642   */\n      tag_633\n        /* \"#utility.yul\":16640:16641   */\n      0x00\n        /* \"#utility.yul\":16633:16638   */\n      dup3\n        /* \"#utility.yul\":16603:16642   */\n      tag_429\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":16576:16577   */\n      0x01\n        /* \"#utility.yul\":16569:16574   */\n      dup2\n        /* \"#utility.yul\":16565:16578   */\n      add\n        /* \"#utility.yul\":16556:16578   */\n      swap1\n      pop\n        /* \"#utility.yul\":16532:16652   */\n      jump(tag_630)\n    tag_632:\n        /* \"#utility.yul\":16472:16658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16664:17207   */\n    tag_431:\n        /* \"#utility.yul\":16765:16767   */\n      0x1f\n        /* \"#utility.yul\":16760:16763   */\n      dup3\n        /* \"#utility.yul\":16757:16768   */\n      gt\n        /* \"#utility.yul\":16754:17200   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":16799:16837   */\n      tag_636\n        /* \"#utility.yul\":16831:16836   */\n      dup2\n        /* \"#utility.yul\":16799:16837   */\n      tag_420\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":16883:16912   */\n      tag_637\n        /* \"#utility.yul\":16901:16911   */\n      dup5\n        /* \"#utility.yul\":16883:16912   */\n      tag_421\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":16873:16881   */\n      dup2\n        /* \"#utility.yul\":16869:16913   */\n      add\n        /* \"#utility.yul\":17066:17068   */\n      0x20\n        /* \"#utility.yul\":17054:17064   */\n      dup6\n        /* \"#utility.yul\":17051:17069   */\n      lt\n        /* \"#utility.yul\":17048:17097   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":17087:17095   */\n      dup2\n        /* \"#utility.yul\":17072:17095   */\n      swap1\n      pop\n        /* \"#utility.yul\":17048:17097   */\n    tag_638:\n        /* \"#utility.yul\":17110:17190   */\n      tag_639\n        /* \"#utility.yul\":17166:17188   */\n      tag_640\n        /* \"#utility.yul\":17184:17187   */\n      dup6\n        /* \"#utility.yul\":17166:17188   */\n      tag_421\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":17156:17164   */\n      dup4\n        /* \"#utility.yul\":17152:17189   */\n      add\n        /* \"#utility.yul\":17139:17150   */\n      dup3\n        /* \"#utility.yul\":17110:17190   */\n      tag_430\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":16769:17200   */\n      pop\n      pop\n        /* \"#utility.yul\":16754:17200   */\n    tag_635:\n        /* \"#utility.yul\":16664:17207   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17213:17330   */\n    tag_432:\n        /* \"#utility.yul\":17267:17275   */\n      0x00\n        /* \"#utility.yul\":17317:17322   */\n      dup3\n        /* \"#utility.yul\":17311:17315   */\n      dup3\n        /* \"#utility.yul\":17307:17323   */\n      shr\n        /* \"#utility.yul\":17286:17323   */\n      swap1\n      pop\n        /* \"#utility.yul\":17213:17330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17336:17505   */\n    tag_433:\n        /* \"#utility.yul\":17380:17386   */\n      0x00\n        /* \"#utility.yul\":17413:17464   */\n      tag_643\n        /* \"#utility.yul\":17461:17462   */\n      0x00\n        /* \"#utility.yul\":17457:17463   */\n      not\n        /* \"#utility.yul\":17449:17454   */\n      dup5\n        /* \"#utility.yul\":17446:17447   */\n      0x08\n        /* \"#utility.yul\":17442:17455   */\n      mul\n        /* \"#utility.yul\":17413:17464   */\n      tag_432\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":17409:17465   */\n      not\n        /* \"#utility.yul\":17494:17498   */\n      dup1\n        /* \"#utility.yul\":17488:17492   */\n      dup4\n        /* \"#utility.yul\":17484:17499   */\n      and\n        /* \"#utility.yul\":17474:17499   */\n      swap2\n      pop\n        /* \"#utility.yul\":17387:17505   */\n      pop\n        /* \"#utility.yul\":17336:17505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17510:17805   */\n    tag_434:\n        /* \"#utility.yul\":17586:17590   */\n      0x00\n        /* \"#utility.yul\":17732:17761   */\n      tag_645\n        /* \"#utility.yul\":17757:17760   */\n      dup4\n        /* \"#utility.yul\":17751:17755   */\n      dup4\n        /* \"#utility.yul\":17732:17761   */\n      tag_433\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":17724:17761   */\n      swap2\n      pop\n        /* \"#utility.yul\":17794:17797   */\n      dup3\n        /* \"#utility.yul\":17791:17792   */\n      0x02\n        /* \"#utility.yul\":17787:17798   */\n      mul\n        /* \"#utility.yul\":17781:17785   */\n      dup3\n        /* \"#utility.yul\":17778:17799   */\n      or\n        /* \"#utility.yul\":17770:17799   */\n      swap1\n      pop\n        /* \"#utility.yul\":17510:17805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17810:19205   */\n    tag_177:\n        /* \"#utility.yul\":17927:17964   */\n      tag_647\n        /* \"#utility.yul\":17960:17963   */\n      dup3\n        /* \"#utility.yul\":17927:17964   */\n      tag_389\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":18029:18047   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18021:18027   */\n      dup2\n        /* \"#utility.yul\":18018:18048   */\n      gt\n        /* \"#utility.yul\":18015:18071   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":18051:18069   */\n      tag_649\n      tag_353\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":18015:18071   */\n    tag_648:\n        /* \"#utility.yul\":18095:18133   */\n      tag_650\n        /* \"#utility.yul\":18127:18131   */\n      dup3\n        /* \"#utility.yul\":18121:18132   */\n      sload\n        /* \"#utility.yul\":18095:18133   */\n      tag_119\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":18180:18247   */\n      tag_651\n        /* \"#utility.yul\":18240:18246   */\n      dup3\n        /* \"#utility.yul\":18232:18238   */\n      dup3\n        /* \"#utility.yul\":18226:18230   */\n      dup6\n        /* \"#utility.yul\":18180:18247   */\n      tag_431\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":18274:18275   */\n      0x00\n        /* \"#utility.yul\":18298:18302   */\n      0x20\n        /* \"#utility.yul\":18285:18302   */\n      swap1\n      pop\n        /* \"#utility.yul\":18330:18332   */\n      0x1f\n        /* \"#utility.yul\":18322:18328   */\n      dup4\n        /* \"#utility.yul\":18319:18333   */\n      gt\n        /* \"#utility.yul\":18347:18348   */\n      0x01\n        /* \"#utility.yul\":18342:18960   */\n      dup2\n      eq\n      tag_653\n      jumpi\n        /* \"#utility.yul\":19004:19005   */\n      0x00\n        /* \"#utility.yul\":19021:19027   */\n      dup5\n        /* \"#utility.yul\":19018:19095   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":19070:19079   */\n      dup3\n        /* \"#utility.yul\":19065:19068   */\n      dup8\n        /* \"#utility.yul\":19061:19080   */\n      add\n        /* \"#utility.yul\":19055:19081   */\n      mload\n        /* \"#utility.yul\":19046:19081   */\n      swap1\n      pop\n        /* \"#utility.yul\":19018:19095   */\n    tag_654:\n        /* \"#utility.yul\":19121:19188   */\n      tag_655\n        /* \"#utility.yul\":19181:19187   */\n      dup6\n        /* \"#utility.yul\":19174:19179   */\n      dup3\n        /* \"#utility.yul\":19121:19188   */\n      tag_434\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":19115:19119   */\n      dup7\n        /* \"#utility.yul\":19108:19189   */\n      sstore\n        /* \"#utility.yul\":18977:19199   */\n      pop\n        /* \"#utility.yul\":18312:19199   */\n      jump(tag_652)\n        /* \"#utility.yul\":18342:18960   */\n    tag_653:\n        /* \"#utility.yul\":18394:18398   */\n      0x1f\n        /* \"#utility.yul\":18390:18399   */\n      not\n        /* \"#utility.yul\":18382:18388   */\n      dup5\n        /* \"#utility.yul\":18378:18400   */\n      and\n        /* \"#utility.yul\":18428:18465   */\n      tag_656\n        /* \"#utility.yul\":18460:18464   */\n      dup7\n        /* \"#utility.yul\":18428:18465   */\n      tag_420\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":18487:18488   */\n      0x00\n        /* \"#utility.yul\":18501:18709   */\n    tag_657:\n        /* \"#utility.yul\":18515:18522   */\n      dup3\n        /* \"#utility.yul\":18512:18513   */\n      dup2\n        /* \"#utility.yul\":18509:18523   */\n      lt\n        /* \"#utility.yul\":18501:18709   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":18594:18603   */\n      dup5\n        /* \"#utility.yul\":18589:18592   */\n      dup10\n        /* \"#utility.yul\":18585:18604   */\n      add\n        /* \"#utility.yul\":18579:18605   */\n      mload\n        /* \"#utility.yul\":18571:18577   */\n      dup3\n        /* \"#utility.yul\":18564:18606   */\n      sstore\n        /* \"#utility.yul\":18645:18646   */\n      0x01\n        /* \"#utility.yul\":18637:18643   */\n      dup3\n        /* \"#utility.yul\":18633:18647   */\n      add\n        /* \"#utility.yul\":18623:18647   */\n      swap2\n      pop\n        /* \"#utility.yul\":18692:18694   */\n      0x20\n        /* \"#utility.yul\":18681:18690   */\n      dup6\n        /* \"#utility.yul\":18677:18695   */\n      add\n        /* \"#utility.yul\":18664:18695   */\n      swap5\n      pop\n        /* \"#utility.yul\":18538:18542   */\n      0x20\n        /* \"#utility.yul\":18535:18536   */\n      dup2\n        /* \"#utility.yul\":18531:18543   */\n      add\n        /* \"#utility.yul\":18526:18543   */\n      swap1\n      pop\n        /* \"#utility.yul\":18501:18709   */\n      jump(tag_657)\n    tag_659:\n        /* \"#utility.yul\":18737:18743   */\n      dup7\n        /* \"#utility.yul\":18728:18735   */\n      dup4\n        /* \"#utility.yul\":18725:18744   */\n      lt\n        /* \"#utility.yul\":18722:18901   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":18795:18804   */\n      dup5\n        /* \"#utility.yul\":18790:18793   */\n      dup10\n        /* \"#utility.yul\":18786:18805   */\n      add\n        /* \"#utility.yul\":18780:18806   */\n      mload\n        /* \"#utility.yul\":18838:18886   */\n      tag_661\n        /* \"#utility.yul\":18880:18884   */\n      0x1f\n        /* \"#utility.yul\":18872:18878   */\n      dup10\n        /* \"#utility.yul\":18868:18885   */\n      and\n        /* \"#utility.yul\":18857:18866   */\n      dup3\n        /* \"#utility.yul\":18838:18886   */\n      tag_433\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":18830:18836   */\n      dup4\n        /* \"#utility.yul\":18823:18887   */\n      sstore\n        /* \"#utility.yul\":18745:18901   */\n      pop\n        /* \"#utility.yul\":18722:18901   */\n    tag_660:\n        /* \"#utility.yul\":18947:18948   */\n      0x01\n        /* \"#utility.yul\":18943:18944   */\n      0x02\n        /* \"#utility.yul\":18935:18941   */\n      dup9\n        /* \"#utility.yul\":18931:18945   */\n      mul\n        /* \"#utility.yul\":18927:18949   */\n      add\n        /* \"#utility.yul\":18921:18925   */\n      dup9\n        /* \"#utility.yul\":18914:18950   */\n      sstore\n        /* \"#utility.yul\":18349:18960   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18312:19199   */\n    tag_652:\n      pop\n        /* \"#utility.yul\":17902:19205   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17810:19205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19211:19359   */\n    tag_435:\n        /* \"#utility.yul\":19313:19324   */\n      0x00\n        /* \"#utility.yul\":19350:19353   */\n      dup2\n        /* \"#utility.yul\":19335:19353   */\n      swap1\n      pop\n        /* \"#utility.yul\":19211:19359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19365:19755   */\n    tag_436:\n        /* \"#utility.yul\":19471:19474   */\n      0x00\n        /* \"#utility.yul\":19499:19538   */\n      tag_664\n        /* \"#utility.yul\":19532:19537   */\n      dup3\n        /* \"#utility.yul\":19499:19538   */\n      tag_389\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":19554:19643   */\n      tag_665\n        /* \"#utility.yul\":19636:19642   */\n      dup2\n        /* \"#utility.yul\":19631:19634   */\n      dup6\n        /* \"#utility.yul\":19554:19643   */\n      tag_435\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":19547:19643   */\n      swap4\n      pop\n        /* \"#utility.yul\":19652:19717   */\n      tag_666\n        /* \"#utility.yul\":19710:19716   */\n      dup2\n        /* \"#utility.yul\":19705:19708   */\n      dup6\n        /* \"#utility.yul\":19698:19702   */\n      0x20\n        /* \"#utility.yul\":19691:19696   */\n      dup7\n        /* \"#utility.yul\":19687:19703   */\n      add\n        /* \"#utility.yul\":19652:19717   */\n      tag_391\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":19742:19748   */\n      dup1\n        /* \"#utility.yul\":19737:19740   */\n      dup5\n        /* \"#utility.yul\":19733:19749   */\n      add\n        /* \"#utility.yul\":19726:19749   */\n      swap2\n      pop\n        /* \"#utility.yul\":19475:19755   */\n      pop\n        /* \"#utility.yul\":19365:19755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19761:20036   */\n    tag_179:\n        /* \"#utility.yul\":19893:19896   */\n      0x00\n        /* \"#utility.yul\":19915:20010   */\n      tag_668\n        /* \"#utility.yul\":20006:20009   */\n      dup3\n        /* \"#utility.yul\":19997:20003   */\n      dup5\n        /* \"#utility.yul\":19915:20010   */\n      tag_436\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19908:20010   */\n      swap2\n      pop\n        /* \"#utility.yul\":20027:20030   */\n      dup2\n        /* \"#utility.yul\":20020:20030   */\n      swap1\n      pop\n        /* \"#utility.yul\":19761:20036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20042:20216   */\n    tag_437:\n        /* \"#utility.yul\":20182:20208   */\n      0x5265717565737420616c726561647920617070726f7665640000000000000000\n        /* \"#utility.yul\":20178:20179   */\n      0x00\n        /* \"#utility.yul\":20170:20176   */\n      dup3\n        /* \"#utility.yul\":20166:20180   */\n      add\n        /* \"#utility.yul\":20159:20209   */\n      mstore\n        /* \"#utility.yul\":20042:20216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20222:20588   */\n    tag_438:\n        /* \"#utility.yul\":20364:20367   */\n      0x00\n        /* \"#utility.yul\":20385:20452   */\n      tag_671\n        /* \"#utility.yul\":20449:20451   */\n      0x18\n        /* \"#utility.yul\":20444:20447   */\n      dup4\n        /* \"#utility.yul\":20385:20452   */\n      tag_390\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":20378:20452   */\n      swap2\n      pop\n        /* \"#utility.yul\":20461:20554   */\n      tag_672\n        /* \"#utility.yul\":20550:20553   */\n      dup3\n        /* \"#utility.yul\":20461:20554   */\n      tag_437\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":20579:20581   */\n      0x20\n        /* \"#utility.yul\":20574:20577   */\n      dup3\n        /* \"#utility.yul\":20570:20582   */\n      add\n        /* \"#utility.yul\":20563:20582   */\n      swap1\n      pop\n        /* \"#utility.yul\":20222:20588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20594:21013   */\n    tag_209:\n        /* \"#utility.yul\":20760:20764   */\n      0x00\n        /* \"#utility.yul\":20798:20800   */\n      0x20\n        /* \"#utility.yul\":20787:20796   */\n      dup3\n        /* \"#utility.yul\":20783:20801   */\n      add\n        /* \"#utility.yul\":20775:20801   */\n      swap1\n      pop\n        /* \"#utility.yul\":20847:20856   */\n      dup2\n        /* \"#utility.yul\":20841:20845   */\n      dup2\n        /* \"#utility.yul\":20837:20857   */\n      sub\n        /* \"#utility.yul\":20833:20834   */\n      0x00\n        /* \"#utility.yul\":20822:20831   */\n      dup4\n        /* \"#utility.yul\":20818:20835   */\n      add\n        /* \"#utility.yul\":20811:20858   */\n      mstore\n        /* \"#utility.yul\":20875:21006   */\n      tag_674\n        /* \"#utility.yul\":21001:21005   */\n      dup2\n        /* \"#utility.yul\":20875:21006   */\n      tag_438\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20867:21006   */\n      swap1\n      pop\n        /* \"#utility.yul\":20594:21013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21019:21117   */\n    tag_439:\n        /* \"#utility.yul\":21070:21076   */\n      0x00\n        /* \"#utility.yul\":21104:21109   */\n      dup2\n        /* \"#utility.yul\":21098:21110   */\n      mload\n        /* \"#utility.yul\":21088:21110   */\n      swap1\n      pop\n        /* \"#utility.yul\":21019:21117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21123:21291   */\n    tag_440:\n        /* \"#utility.yul\":21206:21217   */\n      0x00\n        /* \"#utility.yul\":21240:21246   */\n      dup3\n        /* \"#utility.yul\":21235:21238   */\n      dup3\n        /* \"#utility.yul\":21228:21247   */\n      mstore\n        /* \"#utility.yul\":21280:21284   */\n      0x20\n        /* \"#utility.yul\":21275:21278   */\n      dup3\n        /* \"#utility.yul\":21271:21285   */\n      add\n        /* \"#utility.yul\":21256:21285   */\n      swap1\n      pop\n        /* \"#utility.yul\":21123:21291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21297:21670   */\n    tag_441:\n        /* \"#utility.yul\":21383:21386   */\n      0x00\n        /* \"#utility.yul\":21411:21449   */\n      tag_678\n        /* \"#utility.yul\":21443:21448   */\n      dup3\n        /* \"#utility.yul\":21411:21449   */\n      tag_439\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":21465:21535   */\n      tag_679\n        /* \"#utility.yul\":21528:21534   */\n      dup2\n        /* \"#utility.yul\":21523:21526   */\n      dup6\n        /* \"#utility.yul\":21465:21535   */\n      tag_440\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":21458:21535   */\n      swap4\n      pop\n        /* \"#utility.yul\":21544:21609   */\n      tag_680\n        /* \"#utility.yul\":21602:21608   */\n      dup2\n        /* \"#utility.yul\":21597:21600   */\n      dup6\n        /* \"#utility.yul\":21590:21594   */\n      0x20\n        /* \"#utility.yul\":21583:21588   */\n      dup7\n        /* \"#utility.yul\":21579:21595   */\n      add\n        /* \"#utility.yul\":21544:21609   */\n      tag_391\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":21634:21663   */\n      tag_681\n        /* \"#utility.yul\":21656:21662   */\n      dup2\n        /* \"#utility.yul\":21634:21663   */\n      tag_392\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":21629:21632   */\n      dup5\n        /* \"#utility.yul\":21625:21664   */\n      add\n        /* \"#utility.yul\":21618:21664   */\n      swap2\n      pop\n        /* \"#utility.yul\":21387:21670   */\n      pop\n        /* \"#utility.yul\":21297:21670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21676:22316   */\n    tag_266:\n        /* \"#utility.yul\":21871:21875   */\n      0x00\n        /* \"#utility.yul\":21909:21912   */\n      0x80\n        /* \"#utility.yul\":21898:21907   */\n      dup3\n        /* \"#utility.yul\":21894:21913   */\n      add\n        /* \"#utility.yul\":21886:21913   */\n      swap1\n      pop\n        /* \"#utility.yul\":21923:21994   */\n      tag_683\n        /* \"#utility.yul\":21991:21992   */\n      0x00\n        /* \"#utility.yul\":21980:21989   */\n      dup4\n        /* \"#utility.yul\":21976:21993   */\n      add\n        /* \"#utility.yul\":21967:21973   */\n      dup8\n        /* \"#utility.yul\":21923:21994   */\n      tag_399\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":22004:22076   */\n      tag_684\n        /* \"#utility.yul\":22072:22074   */\n      0x20\n        /* \"#utility.yul\":22061:22070   */\n      dup4\n        /* \"#utility.yul\":22057:22075   */\n      add\n        /* \"#utility.yul\":22048:22054   */\n      dup7\n        /* \"#utility.yul\":22004:22076   */\n      tag_399\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":22086:22158   */\n      tag_685\n        /* \"#utility.yul\":22154:22156   */\n      0x40\n        /* \"#utility.yul\":22143:22152   */\n      dup4\n        /* \"#utility.yul\":22139:22157   */\n      add\n        /* \"#utility.yul\":22130:22136   */\n      dup6\n        /* \"#utility.yul\":22086:22158   */\n      tag_402\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":22205:22214   */\n      dup2\n        /* \"#utility.yul\":22199:22203   */\n      dup2\n        /* \"#utility.yul\":22195:22215   */\n      sub\n        /* \"#utility.yul\":22190:22192   */\n      0x60\n        /* \"#utility.yul\":22179:22188   */\n      dup4\n        /* \"#utility.yul\":22175:22193   */\n      add\n        /* \"#utility.yul\":22168:22216   */\n      mstore\n        /* \"#utility.yul\":22233:22309   */\n      tag_686\n        /* \"#utility.yul\":22304:22308   */\n      dup2\n        /* \"#utility.yul\":22295:22301   */\n      dup5\n        /* \"#utility.yul\":22233:22309   */\n      tag_441\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":22225:22309   */\n      swap1\n      pop\n        /* \"#utility.yul\":21676:22316   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22322:22463   */\n    tag_442:\n        /* \"#utility.yul\":22378:22383   */\n      0x00\n        /* \"#utility.yul\":22409:22415   */\n      dup2\n        /* \"#utility.yul\":22403:22416   */\n      mload\n        /* \"#utility.yul\":22394:22416   */\n      swap1\n      pop\n        /* \"#utility.yul\":22425:22457   */\n      tag_688\n        /* \"#utility.yul\":22451:22456   */\n      dup2\n        /* \"#utility.yul\":22425:22457   */\n      tag_385\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":22322:22463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22469:22818   */\n    tag_269:\n        /* \"#utility.yul\":22538:22544   */\n      0x00\n        /* \"#utility.yul\":22587:22589   */\n      0x20\n        /* \"#utility.yul\":22575:22584   */\n      dup3\n        /* \"#utility.yul\":22566:22573   */\n      dup5\n        /* \"#utility.yul\":22562:22585   */\n      sub\n        /* \"#utility.yul\":22558:22590   */\n      slt\n        /* \"#utility.yul\":22555:22674   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":22593:22672   */\n      tag_691\n      tag_382\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":22555:22674   */\n    tag_690:\n        /* \"#utility.yul\":22713:22714   */\n      0x00\n        /* \"#utility.yul\":22738:22801   */\n      tag_692\n        /* \"#utility.yul\":22793:22800   */\n      dup5\n        /* \"#utility.yul\":22784:22790   */\n      dup3\n        /* \"#utility.yul\":22773:22782   */\n      dup6\n        /* \"#utility.yul\":22769:22791   */\n      add\n        /* \"#utility.yul\":22738:22801   */\n      tag_442\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":22728:22801   */\n      swap2\n      pop\n        /* \"#utility.yul\":22684:22811   */\n      pop\n        /* \"#utility.yul\":22469:22818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22824:23259   */\n    tag_294:\n        /* \"#utility.yul\":23004:23007   */\n      0x00\n        /* \"#utility.yul\":23026:23121   */\n      tag_694\n        /* \"#utility.yul\":23117:23120   */\n      dup3\n        /* \"#utility.yul\":23108:23114   */\n      dup6\n        /* \"#utility.yul\":23026:23121   */\n      tag_436\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":23019:23121   */\n      swap2\n      pop\n        /* \"#utility.yul\":23138:23233   */\n      tag_695\n        /* \"#utility.yul\":23229:23232   */\n      dup3\n        /* \"#utility.yul\":23220:23226   */\n      dup5\n        /* \"#utility.yul\":23138:23233   */\n      tag_436\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":23131:23233   */\n      swap2\n      pop\n        /* \"#utility.yul\":23250:23253   */\n      dup2\n        /* \"#utility.yul\":23243:23253   */\n      swap1\n      pop\n        /* \"#utility.yul\":22824:23259   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23265:23597   */\n    tag_321:\n        /* \"#utility.yul\":23386:23390   */\n      0x00\n        /* \"#utility.yul\":23424:23426   */\n      0x40\n        /* \"#utility.yul\":23413:23422   */\n      dup3\n        /* \"#utility.yul\":23409:23427   */\n      add\n        /* \"#utility.yul\":23401:23427   */\n      swap1\n      pop\n        /* \"#utility.yul\":23437:23508   */\n      tag_697\n        /* \"#utility.yul\":23505:23506   */\n      0x00\n        /* \"#utility.yul\":23494:23503   */\n      dup4\n        /* \"#utility.yul\":23490:23507   */\n      add\n        /* \"#utility.yul\":23481:23487   */\n      dup6\n        /* \"#utility.yul\":23437:23508   */\n      tag_399\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":23518:23590   */\n      tag_698\n        /* \"#utility.yul\":23586:23588   */\n      0x20\n        /* \"#utility.yul\":23575:23584   */\n      dup4\n        /* \"#utility.yul\":23571:23589   */\n      add\n        /* \"#utility.yul\":23562:23568   */\n      dup5\n        /* \"#utility.yul\":23518:23590   */\n      tag_402\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":23265:23597   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23603:23783   */\n    tag_359:\n        /* \"#utility.yul\":23651:23728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23648:23649   */\n      0x00\n        /* \"#utility.yul\":23641:23729   */\n      mstore\n        /* \"#utility.yul\":23748:23752   */\n      0x12\n        /* \"#utility.yul\":23745:23746   */\n      0x04\n        /* \"#utility.yul\":23738:23753   */\n      mstore\n        /* \"#utility.yul\":23772:23776   */\n      0x24\n        /* \"#utility.yul\":23769:23770   */\n      0x00\n        /* \"#utility.yul\":23762:23777   */\n      revert\n\n    auxdata: 0xa26469706673582212208a18682d9a0e14e373013daa15354f76413986a0fd00ebc1ed6c1134f601838964736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3166": {
									"entryPoint": null,
									"id": 3166,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 261,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9593:18",
										"nodeType": "YulBlock",
										"src": "0:9593:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:81:18",
													"nodeType": "YulBlock",
													"src": "379:81:18",
													"statements": [
														{
															"nativeSrc": "389:65:18",
															"nodeType": "YulAssignment",
															"src": "389:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:18",
																		"nodeType": "YulLiteral",
																		"src": "411:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:18"
																},
																"nativeSrc": "400:54:18",
																"nodeType": "YulFunctionCall",
																"src": "400:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:126:18"
											},
											{
												"body": {
													"nativeSrc": "511:51:18",
													"nodeType": "YulBlock",
													"src": "511:51:18",
													"statements": [
														{
															"nativeSrc": "521:35:18",
															"nodeType": "YulAssignment",
															"src": "521:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:18"
																},
																"nativeSrc": "532:24:18",
																"nodeType": "YulFunctionCall",
																"src": "532:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:18",
														"nodeType": "YulTypedName",
														"src": "493:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:18",
														"nodeType": "YulTypedName",
														"src": "503:7:18",
														"type": ""
													}
												],
												"src": "466:96:18"
											},
											{
												"body": {
													"nativeSrc": "611:79:18",
													"nodeType": "YulBlock",
													"src": "611:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:18",
																"nodeType": "YulBlock",
																"src": "668:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:18",
																					"nodeType": "YulLiteral",
																					"src": "677:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:18",
																					"nodeType": "YulLiteral",
																					"src": "680:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:18"
																			},
																			"nativeSrc": "670:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:18"
																		},
																		"nativeSrc": "670:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:18"
																				},
																				"nativeSrc": "641:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:18"
																		},
																		"nativeSrc": "631:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:18"
																},
																"nativeSrc": "624:43:18",
																"nodeType": "YulFunctionCall",
																"src": "624:43:18"
															},
															"nativeSrc": "621:63:18",
															"nodeType": "YulIf",
															"src": "621:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:18",
														"nodeType": "YulTypedName",
														"src": "604:5:18",
														"type": ""
													}
												],
												"src": "568:122:18"
											},
											{
												"body": {
													"nativeSrc": "759:80:18",
													"nodeType": "YulBlock",
													"src": "759:80:18",
													"statements": [
														{
															"nativeSrc": "769:22:18",
															"nodeType": "YulAssignment",
															"src": "769:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:18"
																},
																"nativeSrc": "778:13:18",
																"nodeType": "YulFunctionCall",
																"src": "778:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:18"
																},
																"nativeSrc": "800:33:18",
																"nodeType": "YulFunctionCall",
																"src": "800:33:18"
															},
															"nativeSrc": "800:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:18"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:18",
														"nodeType": "YulTypedName",
														"src": "737:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:18",
														"nodeType": "YulTypedName",
														"src": "745:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:18",
														"nodeType": "YulTypedName",
														"src": "753:5:18",
														"type": ""
													}
												],
												"src": "696:143:18"
											},
											{
												"body": {
													"nativeSrc": "934:28:18",
													"nodeType": "YulBlock",
													"src": "934:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:18",
																		"nodeType": "YulLiteral",
																		"src": "951:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:18",
																		"nodeType": "YulLiteral",
																		"src": "954:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:18"
																},
																"nativeSrc": "944:12:18",
																"nodeType": "YulFunctionCall",
																"src": "944:12:18"
															},
															"nativeSrc": "944:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:18"
											},
											{
												"body": {
													"nativeSrc": "1057:28:18",
													"nodeType": "YulBlock",
													"src": "1057:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:18"
																},
																"nativeSrc": "1067:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:18"
															},
															"nativeSrc": "1067:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:18"
											},
											{
												"body": {
													"nativeSrc": "1139:54:18",
													"nodeType": "YulBlock",
													"src": "1139:54:18",
													"statements": [
														{
															"nativeSrc": "1149:38:18",
															"nodeType": "YulAssignment",
															"src": "1149:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:18"
																		},
																		"nativeSrc": "1163:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:18"
																		},
																		"nativeSrc": "1179:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:18"
																},
																"nativeSrc": "1159:28:18",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:18",
														"nodeType": "YulTypedName",
														"src": "1122:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:18",
														"nodeType": "YulTypedName",
														"src": "1132:6:18",
														"type": ""
													}
												],
												"src": "1091:102:18"
											},
											{
												"body": {
													"nativeSrc": "1227:152:18",
													"nodeType": "YulBlock",
													"src": "1227:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:18",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:18"
																},
																"nativeSrc": "1237:88:18",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:18"
															},
															"nativeSrc": "1237:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:18"
																},
																"nativeSrc": "1334:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:18"
															},
															"nativeSrc": "1334:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:18"
																},
																"nativeSrc": "1358:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:18"
															},
															"nativeSrc": "1358:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:18"
											},
											{
												"body": {
													"nativeSrc": "1428:238:18",
													"nodeType": "YulBlock",
													"src": "1428:238:18",
													"statements": [
														{
															"nativeSrc": "1438:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:18"
																		},
																		"nativeSrc": "1468:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:18"
																},
																"nativeSrc": "1456:40:18",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:18",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:18",
																"nodeType": "YulBlock",
																"src": "1607:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:18"
																			},
																			"nativeSrc": "1609:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:18"
																		},
																		"nativeSrc": "1609:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:18",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:18"
																		},
																		"nativeSrc": "1547:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:18"
																		},
																		"nativeSrc": "1583:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:18"
																},
																"nativeSrc": "1544:62:18",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:18"
															},
															"nativeSrc": "1541:88:18",
															"nodeType": "YulIf",
															"src": "1541:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:18"
																},
																"nativeSrc": "1638:22:18",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:18"
															},
															"nativeSrc": "1638:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:18",
														"nodeType": "YulTypedName",
														"src": "1414:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:18",
														"nodeType": "YulTypedName",
														"src": "1422:4:18",
														"type": ""
													}
												],
												"src": "1385:281:18"
											},
											{
												"body": {
													"nativeSrc": "1713:88:18",
													"nodeType": "YulBlock",
													"src": "1713:88:18",
													"statements": [
														{
															"nativeSrc": "1723:30:18",
															"nodeType": "YulAssignment",
															"src": "1723:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:18"
																},
																"nativeSrc": "1733:20:18",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:18"
																},
																"nativeSrc": "1762:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:18"
															},
															"nativeSrc": "1762:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:18",
														"nodeType": "YulTypedName",
														"src": "1697:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:18",
														"nodeType": "YulTypedName",
														"src": "1706:6:18",
														"type": ""
													}
												],
												"src": "1672:129:18"
											},
											{
												"body": {
													"nativeSrc": "1874:241:18",
													"nodeType": "YulBlock",
													"src": "1874:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:18",
																"nodeType": "YulBlock",
																"src": "1979:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:18"
																			},
																			"nativeSrc": "1981:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:18"
																		},
																		"nativeSrc": "1981:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:18",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:18"
																},
																"nativeSrc": "1948:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:18"
															},
															"nativeSrc": "1945:56:18",
															"nodeType": "YulIf",
															"src": "1945:56:18"
														},
														{
															"nativeSrc": "2011:37:18",
															"nodeType": "YulAssignment",
															"src": "2011:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:18"
																},
																"nativeSrc": "2019:29:18",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:18"
																}
															]
														},
														{
															"nativeSrc": "2085:23:18",
															"nodeType": "YulAssignment",
															"src": "2085:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:18"
																},
																"nativeSrc": "2093:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:18",
														"nodeType": "YulTypedName",
														"src": "1858:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:18",
														"nodeType": "YulTypedName",
														"src": "1869:4:18",
														"type": ""
													}
												],
												"src": "1807:308:18"
											},
											{
												"body": {
													"nativeSrc": "2183:184:18",
													"nodeType": "YulBlock",
													"src": "2183:184:18",
													"statements": [
														{
															"nativeSrc": "2193:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2193:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2202:1:18",
																"nodeType": "YulLiteral",
																"src": "2202:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2197:1:18",
																	"nodeType": "YulTypedName",
																	"src": "2197:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2262:63:18",
																"nodeType": "YulBlock",
																"src": "2262:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2287:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "2287:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2292:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "2292:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2283:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "2283:3:18"
																					},
																					"nativeSrc": "2283:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2283:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2306:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2311:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "2311:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:18"
																							},
																							"nativeSrc": "2302:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2296:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2296:5:18"
																					},
																					"nativeSrc": "2296:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2296:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2276:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:18"
																			},
																			"nativeSrc": "2276:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2276:39:18"
																		},
																		"nativeSrc": "2276:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2276:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2223:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "2223:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2226:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2226:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2220:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2220:2:18"
																},
																"nativeSrc": "2220:13:18",
																"nodeType": "YulFunctionCall",
																"src": "2220:13:18"
															},
															"nativeSrc": "2212:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2234:19:18",
																"nodeType": "YulBlock",
																"src": "2234:19:18",
																"statements": [
																	{
																		"nativeSrc": "2236:15:18",
																		"nodeType": "YulAssignment",
																		"src": "2236:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2245:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "2245:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2248:2:18",
																					"nodeType": "YulLiteral",
																					"src": "2248:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2241:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:18"
																			},
																			"nativeSrc": "2241:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2241:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2236:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "2236:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2216:3:18",
																"nodeType": "YulBlock",
																"src": "2216:3:18",
																"statements": []
															},
															"src": "2212:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2345:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2345:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2350:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2350:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2341:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2341:3:18"
																		},
																		"nativeSrc": "2341:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2341:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2359:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2334:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:18"
																},
																"nativeSrc": "2334:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2334:27:18"
															},
															"nativeSrc": "2334:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2334:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:18",
														"nodeType": "YulTypedName",
														"src": "2165:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:18",
														"nodeType": "YulTypedName",
														"src": "2170:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:18",
														"nodeType": "YulTypedName",
														"src": "2175:6:18",
														"type": ""
													}
												],
												"src": "2121:246:18"
											},
											{
												"body": {
													"nativeSrc": "2468:339:18",
													"nodeType": "YulBlock",
													"src": "2468:339:18",
													"statements": [
														{
															"nativeSrc": "2478:75:18",
															"nodeType": "YulAssignment",
															"src": "2478:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2545:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2503:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "2503:41:18"
																		},
																		"nativeSrc": "2503:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2487:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "2487:15:18"
																},
																"nativeSrc": "2487:66:18",
																"nodeType": "YulFunctionCall",
																"src": "2487:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2478:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2478:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2569:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2576:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2562:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:18"
																},
																"nativeSrc": "2562:21:18",
																"nodeType": "YulFunctionCall",
																"src": "2562:21:18"
															},
															"nativeSrc": "2562:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "2562:21:18"
														},
														{
															"nativeSrc": "2592:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2592:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2607:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2607:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2614:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2614:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2603:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2603:3:18"
																},
																"nativeSrc": "2603:16:18",
																"nodeType": "YulFunctionCall",
																"src": "2603:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2596:3:18",
																	"nodeType": "YulTypedName",
																	"src": "2596:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2657:83:18",
																"nodeType": "YulBlock",
																"src": "2657:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2659:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2659:77:18"
																			},
																			"nativeSrc": "2659:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2659:79:18"
																		},
																		"nativeSrc": "2659:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2659:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2638:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2638:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2643:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2643:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:18"
																		},
																		"nativeSrc": "2634:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2652:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2652:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2631:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2631:2:18"
																},
																"nativeSrc": "2631:25:18",
																"nodeType": "YulFunctionCall",
																"src": "2631:25:18"
															},
															"nativeSrc": "2628:112:18",
															"nodeType": "YulIf",
															"src": "2628:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2784:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2789:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2789:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2794:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2794:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2749:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "2749:34:18"
																},
																"nativeSrc": "2749:52:18",
																"nodeType": "YulFunctionCall",
																"src": "2749:52:18"
															},
															"nativeSrc": "2749:52:18",
															"nodeType": "YulExpressionStatement",
															"src": "2749:52:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2373:434:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2441:3:18",
														"nodeType": "YulTypedName",
														"src": "2441:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2446:6:18",
														"nodeType": "YulTypedName",
														"src": "2446:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2454:3:18",
														"nodeType": "YulTypedName",
														"src": "2454:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2462:5:18",
														"nodeType": "YulTypedName",
														"src": "2462:5:18",
														"type": ""
													}
												],
												"src": "2373:434:18"
											},
											{
												"body": {
													"nativeSrc": "2900:282:18",
													"nodeType": "YulBlock",
													"src": "2900:282:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2949:83:18",
																"nodeType": "YulBlock",
																"src": "2949:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2951:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2951:77:18"
																			},
																			"nativeSrc": "2951:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2951:79:18"
																		},
																		"nativeSrc": "2951:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2951:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2928:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2928:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2936:4:18",
																						"nodeType": "YulLiteral",
																						"src": "2936:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2924:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:18"
																				},
																				"nativeSrc": "2924:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2943:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2943:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2920:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:18"
																		},
																		"nativeSrc": "2920:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2913:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:18"
																},
																"nativeSrc": "2913:35:18",
																"nodeType": "YulFunctionCall",
																"src": "2913:35:18"
															},
															"nativeSrc": "2910:122:18",
															"nodeType": "YulIf",
															"src": "2910:122:18"
														},
														{
															"nativeSrc": "3041:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3041:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3061:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3055:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3055:5:18"
																},
																"nativeSrc": "3055:13:18",
																"nodeType": "YulFunctionCall",
																"src": "3055:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3045:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3077:99:18",
															"nodeType": "YulAssignment",
															"src": "3077:99:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3149:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3149:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3157:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3157:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3145:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:18"
																		},
																		"nativeSrc": "3145:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3145:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3164:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3172:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3172:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3086:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "3086:58:18"
																},
																"nativeSrc": "3086:90:18",
																"nodeType": "YulFunctionCall",
																"src": "3086:90:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3077:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3077:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2827:355:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2878:6:18",
														"nodeType": "YulTypedName",
														"src": "2878:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2886:3:18",
														"nodeType": "YulTypedName",
														"src": "2886:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2894:5:18",
														"nodeType": "YulTypedName",
														"src": "2894:5:18",
														"type": ""
													}
												],
												"src": "2827:355:18"
											},
											{
												"body": {
													"nativeSrc": "3319:878:18",
													"nodeType": "YulBlock",
													"src": "3319:878:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3365:83:18",
																"nodeType": "YulBlock",
																"src": "3365:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3367:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3367:77:18"
																			},
																			"nativeSrc": "3367:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3367:79:18"
																		},
																		"nativeSrc": "3367:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3367:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3340:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3340:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3349:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3349:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3336:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3336:3:18"
																		},
																		"nativeSrc": "3336:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3361:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3332:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3332:3:18"
																},
																"nativeSrc": "3332:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3332:32:18"
															},
															"nativeSrc": "3329:119:18",
															"nodeType": "YulIf",
															"src": "3329:119:18"
														},
														{
															"nativeSrc": "3458:128:18",
															"nodeType": "YulBlock",
															"src": "3458:128:18",
															"statements": [
																{
																	"nativeSrc": "3473:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3473:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3487:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3487:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3477:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3477:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3502:74:18",
																	"nodeType": "YulAssignment",
																	"src": "3502:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:18"
																				},
																				"nativeSrc": "3544:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3512:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "3512:31:18"
																		},
																		"nativeSrc": "3512:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3512:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3502:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3502:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3596:292:18",
															"nodeType": "YulBlock",
															"src": "3596:292:18",
															"statements": [
																{
																	"nativeSrc": "3611:39:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3611:39:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3635:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3635:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3646:2:18",
																						"nodeType": "YulLiteral",
																						"src": "3646:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3631:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3631:3:18"
																				},
																				"nativeSrc": "3631:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3631:18:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3625:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "3625:5:18"
																		},
																		"nativeSrc": "3625:25:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3625:25:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3615:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3615:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3697:83:18",
																		"nodeType": "YulBlock",
																		"src": "3697:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3699:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "3699:77:18"
																					},
																					"nativeSrc": "3699:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "3699:79:18"
																				},
																				"nativeSrc": "3699:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "3699:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3669:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3669:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:18:18",
																				"nodeType": "YulLiteral",
																				"src": "3677:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3666:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3666:2:18"
																		},
																		"nativeSrc": "3666:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3666:30:18"
																	},
																	"nativeSrc": "3663:117:18",
																	"nodeType": "YulIf",
																	"src": "3663:117:18"
																},
																{
																	"nativeSrc": "3794:84:18",
																	"nodeType": "YulAssignment",
																	"src": "3794:84:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3850:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3850:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3861:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3861:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3846:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3846:3:18"
																				},
																				"nativeSrc": "3846:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3846:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3870:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3870:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3804:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "3804:41:18"
																		},
																		"nativeSrc": "3804:74:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3804:74:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3794:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3794:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3898:292:18",
															"nodeType": "YulBlock",
															"src": "3898:292:18",
															"statements": [
																{
																	"nativeSrc": "3913:39:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3913:39:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3937:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3937:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3948:2:18",
																						"nodeType": "YulLiteral",
																						"src": "3948:2:18",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3933:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3933:3:18"
																				},
																				"nativeSrc": "3933:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3933:18:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3927:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "3927:5:18"
																		},
																		"nativeSrc": "3927:25:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3927:25:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3917:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3917:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3999:83:18",
																		"nodeType": "YulBlock",
																		"src": "3999:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4001:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "4001:77:18"
																					},
																					"nativeSrc": "4001:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4001:79:18"
																				},
																				"nativeSrc": "4001:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "4001:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3971:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3971:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3979:18:18",
																				"nodeType": "YulLiteral",
																				"src": "3979:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3968:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3968:2:18"
																		},
																		"nativeSrc": "3968:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3968:30:18"
																	},
																	"nativeSrc": "3965:117:18",
																	"nodeType": "YulIf",
																	"src": "3965:117:18"
																},
																{
																	"nativeSrc": "4096:84:18",
																	"nodeType": "YulAssignment",
																	"src": "4096:84:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:18"
																				},
																				"nativeSrc": "4148:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4106:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "4106:41:18"
																		},
																		"nativeSrc": "4106:74:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:74:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4096:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4096:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3188:1009:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3273:9:18",
														"nodeType": "YulTypedName",
														"src": "3273:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3284:7:18",
														"nodeType": "YulTypedName",
														"src": "3284:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3296:6:18",
														"nodeType": "YulTypedName",
														"src": "3296:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3304:6:18",
														"nodeType": "YulTypedName",
														"src": "3304:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3312:6:18",
														"nodeType": "YulTypedName",
														"src": "3312:6:18",
														"type": ""
													}
												],
												"src": "3188:1009:18"
											},
											{
												"body": {
													"nativeSrc": "4262:40:18",
													"nodeType": "YulBlock",
													"src": "4262:40:18",
													"statements": [
														{
															"nativeSrc": "4273:22:18",
															"nodeType": "YulAssignment",
															"src": "4273:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4289:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4289:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4283:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4283:5:18"
																},
																"nativeSrc": "4283:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4283:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4273:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4203:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4245:5:18",
														"nodeType": "YulTypedName",
														"src": "4245:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4255:6:18",
														"nodeType": "YulTypedName",
														"src": "4255:6:18",
														"type": ""
													}
												],
												"src": "4203:99:18"
											},
											{
												"body": {
													"nativeSrc": "4336:152:18",
													"nodeType": "YulBlock",
													"src": "4336:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4353:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4356:77:18",
																		"nodeType": "YulLiteral",
																		"src": "4356:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4346:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:18"
																},
																"nativeSrc": "4346:88:18",
																"nodeType": "YulFunctionCall",
																"src": "4346:88:18"
															},
															"nativeSrc": "4346:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "4346:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4450:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4450:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4453:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4453:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4443:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:18"
																},
																"nativeSrc": "4443:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4443:15:18"
															},
															"nativeSrc": "4443:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "4443:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4474:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4474:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4477:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4477:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4467:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4467:6:18"
																},
																"nativeSrc": "4467:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4467:15:18"
															},
															"nativeSrc": "4467:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "4467:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4308:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "4308:180:18"
											},
											{
												"body": {
													"nativeSrc": "4545:269:18",
													"nodeType": "YulBlock",
													"src": "4545:269:18",
													"statements": [
														{
															"nativeSrc": "4555:22:18",
															"nodeType": "YulAssignment",
															"src": "4555:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4569:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4569:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4575:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4575:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4565:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4565:3:18"
																},
																"nativeSrc": "4565:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4565:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4555:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4555:6:18"
																}
															]
														},
														{
															"nativeSrc": "4586:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4586:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4616:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4616:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4622:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4622:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4612:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4612:3:18"
																},
																"nativeSrc": "4612:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4612:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4590:18:18",
																	"nodeType": "YulTypedName",
																	"src": "4590:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4663:51:18",
																"nodeType": "YulBlock",
																"src": "4663:51:18",
																"statements": [
																	{
																		"nativeSrc": "4677:27:18",
																		"nodeType": "YulAssignment",
																		"src": "4677:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4691:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "4691:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4699:4:18",
																					"nodeType": "YulLiteral",
																					"src": "4699:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4687:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4687:3:18"
																			},
																			"nativeSrc": "4687:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4687:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4677:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4677:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4643:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "4643:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4636:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:18"
																},
																"nativeSrc": "4636:26:18",
																"nodeType": "YulFunctionCall",
																"src": "4636:26:18"
															},
															"nativeSrc": "4633:81:18",
															"nodeType": "YulIf",
															"src": "4633:81:18"
														},
														{
															"body": {
																"nativeSrc": "4766:42:18",
																"nodeType": "YulBlock",
																"src": "4766:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4780:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4780:16:18"
																			},
																			"nativeSrc": "4780:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4780:18:18"
																		},
																		"nativeSrc": "4780:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4780:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4730:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "4730:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4753:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4753:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4761:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4750:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4750:2:18"
																		},
																		"nativeSrc": "4750:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4750:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4727:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4727:2:18"
																},
																"nativeSrc": "4727:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4727:38:18"
															},
															"nativeSrc": "4724:84:18",
															"nodeType": "YulIf",
															"src": "4724:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4494:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4529:4:18",
														"nodeType": "YulTypedName",
														"src": "4529:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4538:6:18",
														"nodeType": "YulTypedName",
														"src": "4538:6:18",
														"type": ""
													}
												],
												"src": "4494:320:18"
											},
											{
												"body": {
													"nativeSrc": "4874:87:18",
													"nodeType": "YulBlock",
													"src": "4874:87:18",
													"statements": [
														{
															"nativeSrc": "4884:11:18",
															"nodeType": "YulAssignment",
															"src": "4884:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "4892:3:18",
																"nodeType": "YulIdentifier",
																"src": "4892:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4884:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4884:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4912:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4912:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4915:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4915:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4905:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:18"
																},
																"nativeSrc": "4905:14:18",
																"nodeType": "YulFunctionCall",
																"src": "4905:14:18"
															},
															"nativeSrc": "4905:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "4905:14:18"
														},
														{
															"nativeSrc": "4928:26:18",
															"nodeType": "YulAssignment",
															"src": "4928:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4946:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4946:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4949:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4949:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4936:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "4936:9:18"
																},
																"nativeSrc": "4936:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4936:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4928:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4928:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4820:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4861:3:18",
														"nodeType": "YulTypedName",
														"src": "4861:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4869:4:18",
														"nodeType": "YulTypedName",
														"src": "4869:4:18",
														"type": ""
													}
												],
												"src": "4820:141:18"
											},
											{
												"body": {
													"nativeSrc": "5011:49:18",
													"nodeType": "YulBlock",
													"src": "5011:49:18",
													"statements": [
														{
															"nativeSrc": "5021:33:18",
															"nodeType": "YulAssignment",
															"src": "5021:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5039:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5039:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5046:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5046:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5035:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5035:3:18"
																		},
																		"nativeSrc": "5035:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5035:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5051:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5051:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5031:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5031:3:18"
																},
																"nativeSrc": "5031:23:18",
																"nodeType": "YulFunctionCall",
																"src": "5031:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5021:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4967:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4994:5:18",
														"nodeType": "YulTypedName",
														"src": "4994:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5004:6:18",
														"nodeType": "YulTypedName",
														"src": "5004:6:18",
														"type": ""
													}
												],
												"src": "4967:93:18"
											},
											{
												"body": {
													"nativeSrc": "5119:54:18",
													"nodeType": "YulBlock",
													"src": "5119:54:18",
													"statements": [
														{
															"nativeSrc": "5129:37:18",
															"nodeType": "YulAssignment",
															"src": "5129:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5154:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "5154:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5160:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5160:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5150:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:18"
																},
																"nativeSrc": "5150:16:18",
																"nodeType": "YulFunctionCall",
																"src": "5150:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5129:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "5129:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5066:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5094:4:18",
														"nodeType": "YulTypedName",
														"src": "5094:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5100:5:18",
														"nodeType": "YulTypedName",
														"src": "5100:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5110:8:18",
														"nodeType": "YulTypedName",
														"src": "5110:8:18",
														"type": ""
													}
												],
												"src": "5066:107:18"
											},
											{
												"body": {
													"nativeSrc": "5255:317:18",
													"nodeType": "YulBlock",
													"src": "5255:317:18",
													"statements": [
														{
															"nativeSrc": "5265:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5265:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5286:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "5286:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5298:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5298:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5282:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:18"
																},
																"nativeSrc": "5282:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5282:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5269:9:18",
																	"nodeType": "YulTypedName",
																	"src": "5269:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5309:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5309:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5340:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5340:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5351:66:18",
																		"nodeType": "YulLiteral",
																		"src": "5351:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5321:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5321:18:18"
																},
																"nativeSrc": "5321:97:18",
																"nodeType": "YulFunctionCall",
																"src": "5321:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5313:4:18",
																	"nodeType": "YulTypedName",
																	"src": "5313:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5427:51:18",
															"nodeType": "YulAssignment",
															"src": "5427:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5458:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5458:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5469:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "5469:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5439:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5439:18:18"
																},
																"nativeSrc": "5439:39:18",
																"nodeType": "YulFunctionCall",
																"src": "5439:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5427:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "5427:8:18"
																}
															]
														},
														{
															"nativeSrc": "5487:30:18",
															"nodeType": "YulAssignment",
															"src": "5487:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5500:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5500:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5511:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "5511:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5507:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5507:3:18"
																		},
																		"nativeSrc": "5507:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5507:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5496:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5496:3:18"
																},
																"nativeSrc": "5496:21:18",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5487:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5487:5:18"
																}
															]
														},
														{
															"nativeSrc": "5526:40:18",
															"nodeType": "YulAssignment",
															"src": "5526:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5539:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5539:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5550:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "5550:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5560:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "5560:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5546:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:18"
																		},
																		"nativeSrc": "5546:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5546:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5536:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5536:2:18"
																},
																"nativeSrc": "5536:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5536:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5526:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5179:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5216:5:18",
														"nodeType": "YulTypedName",
														"src": "5216:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5223:10:18",
														"nodeType": "YulTypedName",
														"src": "5223:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5235:8:18",
														"nodeType": "YulTypedName",
														"src": "5235:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5248:6:18",
														"nodeType": "YulTypedName",
														"src": "5248:6:18",
														"type": ""
													}
												],
												"src": "5179:393:18"
											},
											{
												"body": {
													"nativeSrc": "5623:32:18",
													"nodeType": "YulBlock",
													"src": "5623:32:18",
													"statements": [
														{
															"nativeSrc": "5633:16:18",
															"nodeType": "YulAssignment",
															"src": "5633:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "5644:5:18",
																"nodeType": "YulIdentifier",
																"src": "5644:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5633:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5633:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5578:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5605:5:18",
														"nodeType": "YulTypedName",
														"src": "5605:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5615:7:18",
														"nodeType": "YulTypedName",
														"src": "5615:7:18",
														"type": ""
													}
												],
												"src": "5578:77:18"
											},
											{
												"body": {
													"nativeSrc": "5693:28:18",
													"nodeType": "YulBlock",
													"src": "5693:28:18",
													"statements": [
														{
															"nativeSrc": "5703:12:18",
															"nodeType": "YulAssignment",
															"src": "5703:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "5710:5:18",
																"nodeType": "YulIdentifier",
																"src": "5710:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5703:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5703:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5661:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5679:5:18",
														"nodeType": "YulTypedName",
														"src": "5679:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5689:3:18",
														"nodeType": "YulTypedName",
														"src": "5689:3:18",
														"type": ""
													}
												],
												"src": "5661:60:18"
											},
											{
												"body": {
													"nativeSrc": "5787:82:18",
													"nodeType": "YulBlock",
													"src": "5787:82:18",
													"statements": [
														{
															"nativeSrc": "5797:66:18",
															"nodeType": "YulAssignment",
															"src": "5797:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5855:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5855:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5837:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "5837:17:18"
																				},
																				"nativeSrc": "5837:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5828:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "5828:8:18"
																		},
																		"nativeSrc": "5828:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5810:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "5810:17:18"
																},
																"nativeSrc": "5810:53:18",
																"nodeType": "YulFunctionCall",
																"src": "5810:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5797:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "5797:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5727:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5767:5:18",
														"nodeType": "YulTypedName",
														"src": "5767:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5777:9:18",
														"nodeType": "YulTypedName",
														"src": "5777:9:18",
														"type": ""
													}
												],
												"src": "5727:142:18"
											},
											{
												"body": {
													"nativeSrc": "5922:28:18",
													"nodeType": "YulBlock",
													"src": "5922:28:18",
													"statements": [
														{
															"nativeSrc": "5932:12:18",
															"nodeType": "YulAssignment",
															"src": "5932:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "5939:5:18",
																"nodeType": "YulIdentifier",
																"src": "5939:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5932:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5932:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5875:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5908:5:18",
														"nodeType": "YulTypedName",
														"src": "5908:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5918:3:18",
														"nodeType": "YulTypedName",
														"src": "5918:3:18",
														"type": ""
													}
												],
												"src": "5875:75:18"
											},
											{
												"body": {
													"nativeSrc": "6032:193:18",
													"nodeType": "YulBlock",
													"src": "6032:193:18",
													"statements": [
														{
															"nativeSrc": "6042:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6042:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6097:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "6097:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6066:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "6066:30:18"
																},
																"nativeSrc": "6066:39:18",
																"nodeType": "YulFunctionCall",
																"src": "6066:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6046:16:18",
																	"nodeType": "YulTypedName",
																	"src": "6046:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6121:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6121:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6161:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "6161:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6155:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "6155:5:18"
																				},
																				"nativeSrc": "6155:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6155:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6168:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6168:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6200:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "6200:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6176:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "6176:23:18"
																				},
																				"nativeSrc": "6176:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6176:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6127:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "6127:27:18"
																		},
																		"nativeSrc": "6127:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6127:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6114:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6114:6:18"
																},
																"nativeSrc": "6114:105:18",
																"nodeType": "YulFunctionCall",
																"src": "6114:105:18"
															},
															"nativeSrc": "6114:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "6114:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5956:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6009:4:18",
														"nodeType": "YulTypedName",
														"src": "6009:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6015:6:18",
														"nodeType": "YulTypedName",
														"src": "6015:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6023:7:18",
														"nodeType": "YulTypedName",
														"src": "6023:7:18",
														"type": ""
													}
												],
												"src": "5956:269:18"
											},
											{
												"body": {
													"nativeSrc": "6280:24:18",
													"nodeType": "YulBlock",
													"src": "6280:24:18",
													"statements": [
														{
															"nativeSrc": "6290:8:18",
															"nodeType": "YulAssignment",
															"src": "6290:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "6297:1:18",
																"nodeType": "YulLiteral",
																"src": "6297:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6290:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6231:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6276:3:18",
														"nodeType": "YulTypedName",
														"src": "6276:3:18",
														"type": ""
													}
												],
												"src": "6231:73:18"
											},
											{
												"body": {
													"nativeSrc": "6363:136:18",
													"nodeType": "YulBlock",
													"src": "6363:136:18",
													"statements": [
														{
															"nativeSrc": "6373:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6373:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6387:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "6387:30:18"
																},
																"nativeSrc": "6387:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6387:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6377:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6377:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6472:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6472:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6478:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6486:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6486:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6428:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "6428:43:18"
																},
																"nativeSrc": "6428:65:18",
																"nodeType": "YulFunctionCall",
																"src": "6428:65:18"
															},
															"nativeSrc": "6428:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "6428:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6310:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6349:4:18",
														"nodeType": "YulTypedName",
														"src": "6349:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6355:6:18",
														"nodeType": "YulTypedName",
														"src": "6355:6:18",
														"type": ""
													}
												],
												"src": "6310:189:18"
											},
											{
												"body": {
													"nativeSrc": "6555:136:18",
													"nodeType": "YulBlock",
													"src": "6555:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6622:63:18",
																"nodeType": "YulBlock",
																"src": "6622:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6666:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "6666:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6673:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6673:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6636:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "6636:29:18"
																			},
																			"nativeSrc": "6636:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6636:39:18"
																		},
																		"nativeSrc": "6636:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6636:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6575:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "6575:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6582:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6572:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6572:2:18"
																},
																"nativeSrc": "6572:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6572:14:18"
															},
															"nativeSrc": "6565:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6587:26:18",
																"nodeType": "YulBlock",
																"src": "6587:26:18",
																"statements": [
																	{
																		"nativeSrc": "6589:22:18",
																		"nodeType": "YulAssignment",
																		"src": "6589:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6602:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "6602:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6609:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6609:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6598:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "6598:3:18"
																			},
																			"nativeSrc": "6598:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6598:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6589:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6589:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6569:2:18",
																"nodeType": "YulBlock",
																"src": "6569:2:18",
																"statements": []
															},
															"src": "6565:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6505:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6543:5:18",
														"nodeType": "YulTypedName",
														"src": "6543:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6550:3:18",
														"nodeType": "YulTypedName",
														"src": "6550:3:18",
														"type": ""
													}
												],
												"src": "6505:186:18"
											},
											{
												"body": {
													"nativeSrc": "6776:464:18",
													"nodeType": "YulBlock",
													"src": "6776:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6802:431:18",
																"nodeType": "YulBlock",
																"src": "6802:431:18",
																"statements": [
																	{
																		"nativeSrc": "6816:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6816:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6864:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "6864:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6832:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "6832:31:18"
																			},
																			"nativeSrc": "6832:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6832:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6820:8:18",
																				"nodeType": "YulTypedName",
																				"src": "6820:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6883:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6883:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6906:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "6906:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6934:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "6934:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6916:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "6916:17:18"
																					},
																					"nativeSrc": "6916:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6916:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6902:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "6902:3:18"
																			},
																			"nativeSrc": "6902:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6902:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6887:11:18",
																				"nodeType": "YulTypedName",
																				"src": "6887:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7103:27:18",
																			"nodeType": "YulBlock",
																			"src": "7103:27:18",
																			"statements": [
																				{
																					"nativeSrc": "7105:23:18",
																					"nodeType": "YulAssignment",
																					"src": "7105:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7120:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "7120:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7105:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "7105:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7087:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "7087:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7099:2:18",
																					"nodeType": "YulLiteral",
																					"src": "7099:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7084:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "7084:2:18"
																			},
																			"nativeSrc": "7084:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7084:18:18"
																		},
																		"nativeSrc": "7081:49:18",
																		"nodeType": "YulIf",
																		"src": "7081:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7172:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "7172:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7189:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "7189:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7217:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "7217:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7199:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "7199:17:18"
																							},
																							"nativeSrc": "7199:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7199:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7185:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7185:3:18"
																					},
																					"nativeSrc": "7185:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7185:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7143:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "7143:28:18"
																			},
																			"nativeSrc": "7143:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7143:80:18"
																		},
																		"nativeSrc": "7143:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7143:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6793:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6790:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6790:2:18"
																},
																"nativeSrc": "6790:11:18",
																"nodeType": "YulFunctionCall",
																"src": "6790:11:18"
															},
															"nativeSrc": "6787:446:18",
															"nodeType": "YulIf",
															"src": "6787:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6697:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6752:5:18",
														"nodeType": "YulTypedName",
														"src": "6752:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6759:3:18",
														"nodeType": "YulTypedName",
														"src": "6759:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6764:10:18",
														"nodeType": "YulTypedName",
														"src": "6764:10:18",
														"type": ""
													}
												],
												"src": "6697:543:18"
											},
											{
												"body": {
													"nativeSrc": "7309:54:18",
													"nodeType": "YulBlock",
													"src": "7309:54:18",
													"statements": [
														{
															"nativeSrc": "7319:37:18",
															"nodeType": "YulAssignment",
															"src": "7319:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7344:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7344:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7350:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7350:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7340:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7340:3:18"
																},
																"nativeSrc": "7340:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7340:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7319:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "7319:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7246:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7284:4:18",
														"nodeType": "YulTypedName",
														"src": "7284:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7290:5:18",
														"nodeType": "YulTypedName",
														"src": "7290:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7300:8:18",
														"nodeType": "YulTypedName",
														"src": "7300:8:18",
														"type": ""
													}
												],
												"src": "7246:117:18"
											},
											{
												"body": {
													"nativeSrc": "7420:118:18",
													"nodeType": "YulBlock",
													"src": "7420:118:18",
													"statements": [
														{
															"nativeSrc": "7430:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7430:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7479:1:18",
																						"nodeType": "YulLiteral",
																						"src": "7479:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7482:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7482:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7475:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7475:3:18"
																				},
																				"nativeSrc": "7475:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7475:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7494:1:18",
																						"nodeType": "YulLiteral",
																						"src": "7494:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7490:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7490:3:18"
																				},
																				"nativeSrc": "7490:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7490:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7446:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "7446:28:18"
																		},
																		"nativeSrc": "7446:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7442:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:18"
																},
																"nativeSrc": "7442:56:18",
																"nodeType": "YulFunctionCall",
																"src": "7442:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7434:4:18",
																	"nodeType": "YulTypedName",
																	"src": "7434:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7507:25:18",
															"nodeType": "YulAssignment",
															"src": "7507:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7521:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7521:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7527:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7527:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7517:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:18"
																},
																"nativeSrc": "7517:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7517:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7507:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7369:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7397:4:18",
														"nodeType": "YulTypedName",
														"src": "7397:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7403:5:18",
														"nodeType": "YulTypedName",
														"src": "7403:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7413:6:18",
														"nodeType": "YulTypedName",
														"src": "7413:6:18",
														"type": ""
													}
												],
												"src": "7369:169:18"
											},
											{
												"body": {
													"nativeSrc": "7624:214:18",
													"nodeType": "YulBlock",
													"src": "7624:214:18",
													"statements": [
														{
															"nativeSrc": "7757:37:18",
															"nodeType": "YulAssignment",
															"src": "7757:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7784:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7784:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7790:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7790:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7765:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:18"
																},
																"nativeSrc": "7765:29:18",
																"nodeType": "YulFunctionCall",
																"src": "7765:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7757:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7757:4:18"
																}
															]
														},
														{
															"nativeSrc": "7803:29:18",
															"nodeType": "YulAssignment",
															"src": "7803:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7814:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7814:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7824:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7824:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7827:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7827:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7820:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:18"
																		},
																		"nativeSrc": "7820:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7820:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7811:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7811:2:18"
																},
																"nativeSrc": "7811:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7811:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7803:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7803:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7543:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7605:4:18",
														"nodeType": "YulTypedName",
														"src": "7605:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7611:3:18",
														"nodeType": "YulTypedName",
														"src": "7611:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7619:4:18",
														"nodeType": "YulTypedName",
														"src": "7619:4:18",
														"type": ""
													}
												],
												"src": "7543:295:18"
											},
											{
												"body": {
													"nativeSrc": "7935:1303:18",
													"nodeType": "YulBlock",
													"src": "7935:1303:18",
													"statements": [
														{
															"nativeSrc": "7946:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7946:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7993:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7993:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7960:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "7960:32:18"
																},
																"nativeSrc": "7960:37:18",
																"nodeType": "YulFunctionCall",
																"src": "7960:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7950:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7950:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8082:22:18",
																"nodeType": "YulBlock",
																"src": "8082:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8084:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "8084:16:18"
																			},
																			"nativeSrc": "8084:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8084:18:18"
																		},
																		"nativeSrc": "8084:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8084:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8054:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8054:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:18:18",
																		"nodeType": "YulLiteral",
																		"src": "8062:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8051:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:18"
																},
																"nativeSrc": "8051:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8051:30:18"
															},
															"nativeSrc": "8048:56:18",
															"nodeType": "YulIf",
															"src": "8048:56:18"
														},
														{
															"nativeSrc": "8114:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8114:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8160:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8160:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8154:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "8154:5:18"
																		},
																		"nativeSrc": "8154:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8128:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "8128:25:18"
																},
																"nativeSrc": "8128:38:18",
																"nodeType": "YulFunctionCall",
																"src": "8128:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8118:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8118:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8259:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8259:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8265:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8265:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8273:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8273:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8213:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "8213:45:18"
																},
																"nativeSrc": "8213:67:18",
																"nodeType": "YulFunctionCall",
																"src": "8213:67:18"
															},
															"nativeSrc": "8213:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "8213:67:18"
														},
														{
															"nativeSrc": "8290:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8290:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "8307:1:18",
																"nodeType": "YulLiteral",
																"src": "8307:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8294:9:18",
																	"nodeType": "YulTypedName",
																	"src": "8294:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8318:17:18",
															"nodeType": "YulAssignment",
															"src": "8318:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "8331:4:18",
																"nodeType": "YulLiteral",
																"src": "8331:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8318:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "8318:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8382:611:18",
																		"nodeType": "YulBlock",
																		"src": "8382:611:18",
																		"statements": [
																			{
																				"nativeSrc": "8396:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8396:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8415:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "8415:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8427:4:18",
																									"nodeType": "YulLiteral",
																									"src": "8427:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8423:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "8423:3:18"
																							},
																							"nativeSrc": "8423:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "8423:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8411:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "8411:3:18"
																					},
																					"nativeSrc": "8411:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8411:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8400:7:18",
																						"nodeType": "YulTypedName",
																						"src": "8400:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8447:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8447:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8493:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "8493:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8461:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "8461:31:18"
																					},
																					"nativeSrc": "8461:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8451:6:18",
																						"nodeType": "YulTypedName",
																						"src": "8451:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8511:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8511:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8520:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8520:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8515:1:18",
																						"nodeType": "YulTypedName",
																						"src": "8515:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8579:163:18",
																					"nodeType": "YulBlock",
																					"src": "8579:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8604:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "8604:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8622:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "8622:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8627:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "8627:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8618:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "8618:3:18"
																												},
																												"nativeSrc": "8618:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "8618:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8612:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "8612:5:18"
																										},
																										"nativeSrc": "8612:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "8612:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8597:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "8597:6:18"
																								},
																								"nativeSrc": "8597:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "8597:42:18"
																							},
																							"nativeSrc": "8597:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "8597:42:18"
																						},
																						{
																							"nativeSrc": "8656:24:18",
																							"nodeType": "YulAssignment",
																							"src": "8656:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8670:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "8670:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8678:1:18",
																										"nodeType": "YulLiteral",
																										"src": "8678:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8666:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "8666:3:18"
																								},
																								"nativeSrc": "8666:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "8666:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8656:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "8656:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8697:31:18",
																							"nodeType": "YulAssignment",
																							"src": "8697:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8714:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "8714:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8725:2:18",
																										"nodeType": "YulLiteral",
																										"src": "8725:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8710:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "8710:3:18"
																								},
																								"nativeSrc": "8710:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "8710:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8697:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "8697:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8545:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "8545:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8548:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "8548:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8542:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "8542:2:18"
																					},
																					"nativeSrc": "8542:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8542:14:18"
																				},
																				"nativeSrc": "8534:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8557:21:18",
																					"nodeType": "YulBlock",
																					"src": "8557:21:18",
																					"statements": [
																						{
																							"nativeSrc": "8559:17:18",
																							"nodeType": "YulAssignment",
																							"src": "8559:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8568:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "8568:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:4:18",
																										"nodeType": "YulLiteral",
																										"src": "8571:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8564:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "8564:3:18"
																								},
																								"nativeSrc": "8564:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "8564:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8559:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "8559:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8538:3:18",
																					"nodeType": "YulBlock",
																					"src": "8538:3:18",
																					"statements": []
																				},
																				"src": "8534:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "8778:156:18",
																					"nodeType": "YulBlock",
																					"src": "8778:156:18",
																					"statements": [
																						{
																							"nativeSrc": "8796:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8796:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8823:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "8823:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8828:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "8828:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8819:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "8819:3:18"
																										},
																										"nativeSrc": "8819:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "8819:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8813:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "8813:5:18"
																								},
																								"nativeSrc": "8813:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "8813:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8800:9:18",
																									"nodeType": "YulTypedName",
																									"src": "8800:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8863:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "8863:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8890:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "8890:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8905:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "8905:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8913:4:18",
																														"nodeType": "YulLiteral",
																														"src": "8913:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8901:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "8901:3:18"
																												},
																												"nativeSrc": "8901:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "8901:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8871:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "8871:18:18"
																										},
																										"nativeSrc": "8871:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "8871:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8856:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "8856:6:18"
																								},
																								"nativeSrc": "8856:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "8856:64:18"
																							},
																							"nativeSrc": "8856:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "8856:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8761:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "8761:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8770:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "8770:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8758:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "8758:2:18"
																					},
																					"nativeSrc": "8758:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8758:19:18"
																				},
																				"nativeSrc": "8755:179:18",
																				"nodeType": "YulIf",
																				"src": "8755:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8954:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "8954:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8968:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "8968:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8976:1:18",
																											"nodeType": "YulLiteral",
																											"src": "8976:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8964:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "8964:3:18"
																									},
																									"nativeSrc": "8964:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "8964:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8980:1:18",
																									"nodeType": "YulLiteral",
																									"src": "8980:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8960:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "8960:3:18"
																							},
																							"nativeSrc": "8960:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "8960:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8947:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8947:6:18"
																					},
																					"nativeSrc": "8947:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8947:36:18"
																				},
																				"nativeSrc": "8947:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "8947:36:18"
																			}
																		]
																	},
																	"nativeSrc": "8375:618:18",
																	"nodeType": "YulCase",
																	"src": "8375:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8380:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8380:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9010:222:18",
																		"nodeType": "YulBlock",
																		"src": "9010:222:18",
																		"statements": [
																			{
																				"nativeSrc": "9024:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9024:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9037:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9037:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9028:5:18",
																						"nodeType": "YulTypedName",
																						"src": "9028:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9061:67:18",
																					"nodeType": "YulBlock",
																					"src": "9061:67:18",
																					"statements": [
																						{
																							"nativeSrc": "9079:35:18",
																							"nodeType": "YulAssignment",
																							"src": "9079:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9098:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "9098:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9103:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "9103:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9094:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "9094:3:18"
																										},
																										"nativeSrc": "9094:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "9094:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9088:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "9088:5:18"
																								},
																								"nativeSrc": "9088:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "9088:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9079:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "9079:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9054:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "9054:6:18"
																				},
																				"nativeSrc": "9051:77:18",
																				"nodeType": "YulIf",
																				"src": "9051:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9148:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "9148:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9207:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "9207:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9214:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "9214:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9154:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "9154:52:18"
																							},
																							"nativeSrc": "9154:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "9154:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9141:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9141:6:18"
																					},
																					"nativeSrc": "9141:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9141:81:18"
																				},
																				"nativeSrc": "9141:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "9141:81:18"
																			}
																		]
																	},
																	"nativeSrc": "9002:230:18",
																	"nodeType": "YulCase",
																	"src": "9002:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8355:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8355:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8363:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8352:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8352:2:18"
																},
																"nativeSrc": "8352:14:18",
																"nodeType": "YulFunctionCall",
																"src": "8352:14:18"
															},
															"nativeSrc": "8345:887:18",
															"nodeType": "YulSwitch",
															"src": "8345:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7843:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7924:4:18",
														"nodeType": "YulTypedName",
														"src": "7924:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7930:3:18",
														"nodeType": "YulTypedName",
														"src": "7930:3:18",
														"type": ""
													}
												],
												"src": "7843:1395:18"
											},
											{
												"body": {
													"nativeSrc": "9309:53:18",
													"nodeType": "YulBlock",
													"src": "9309:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9326:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9326:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9349:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "9349:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9331:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "9331:17:18"
																		},
																		"nativeSrc": "9331:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9331:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9319:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9319:6:18"
																},
																"nativeSrc": "9319:37:18",
																"nodeType": "YulFunctionCall",
																"src": "9319:37:18"
															},
															"nativeSrc": "9319:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "9319:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9244:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9297:5:18",
														"nodeType": "YulTypedName",
														"src": "9297:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9304:3:18",
														"nodeType": "YulTypedName",
														"src": "9304:3:18",
														"type": ""
													}
												],
												"src": "9244:118:18"
											},
											{
												"body": {
													"nativeSrc": "9466:124:18",
													"nodeType": "YulBlock",
													"src": "9466:124:18",
													"statements": [
														{
															"nativeSrc": "9476:26:18",
															"nodeType": "YulAssignment",
															"src": "9476:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9488:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9488:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9499:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9499:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9484:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:18"
																},
																"nativeSrc": "9484:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9484:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9476:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9476:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9556:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9556:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9569:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9569:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9580:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9580:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9565:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9565:3:18"
																		},
																		"nativeSrc": "9565:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9565:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9512:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9512:43:18"
																},
																"nativeSrc": "9512:71:18",
																"nodeType": "YulFunctionCall",
																"src": "9512:71:18"
															},
															"nativeSrc": "9512:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "9512:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9368:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9438:9:18",
														"nodeType": "YulTypedName",
														"src": "9438:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9450:6:18",
														"nodeType": "YulTypedName",
														"src": "9450:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9461:4:18",
														"nodeType": "YulTypedName",
														"src": "9461:4:18",
														"type": ""
													}
												],
												"src": "9368:222:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162003330380380620033308339818101604052810190620000369190620003ae565b828282815f90816200004991906200067c565b5080600190816200005b91906200067c565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c8919062000771565b60405180910390fd5b620000e2816200010560201b60201c565b505f60095f6101000a81548160ff0219169083151502179055505050506200078c565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200020482620001d9565b9050919050565b6200021681620001f8565b811462000221575f80fd5b50565b5f8151905062000234816200020b565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200028a8262000242565b810181811067ffffffffffffffff82111715620002ac57620002ab62000252565b5b80604052505050565b5f620002c0620001c8565b9050620002ce82826200027f565b919050565b5f67ffffffffffffffff821115620002f057620002ef62000252565b5b620002fb8262000242565b9050602081019050919050565b5f5b83811015620003275780820151818401526020810190506200030a565b5f8484015250505050565b5f620003486200034284620002d3565b620002b5565b9050828152602081018484840111156200036757620003666200023e565b5b6200037484828562000308565b509392505050565b5f82601f8301126200039357620003926200023a565b5b8151620003a584826020860162000332565b91505092915050565b5f805f60608486031215620003c857620003c7620001d1565b5b5f620003d78682870162000224565b935050602084015167ffffffffffffffff811115620003fb57620003fa620001d5565b5b62000409868287016200037c565b925050604084015167ffffffffffffffff8111156200042d576200042c620001d5565b5b6200043b868287016200037c565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200049457607f821691505b602082108103620004aa57620004a96200044f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200050e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d1565b6200051a8683620004d1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005646200055e620005588462000532565b6200053b565b62000532565b9050919050565b5f819050919050565b6200057f8362000544565b620005976200058e826200056b565b848454620004dd565b825550505050565b5f90565b620005ad6200059f565b620005ba81848462000574565b505050565b5b81811015620005e157620005d55f82620005a3565b600181019050620005c0565b5050565b601f8211156200063057620005fa81620004b0565b6200060584620004c2565b8101602085101562000615578190505b6200062d6200062485620004c2565b830182620005bf565b50505b505050565b5f82821c905092915050565b5f620006525f198460080262000635565b1980831691505092915050565b5f6200066c838362000641565b9150826002028217905092915050565b620006878262000445565b67ffffffffffffffff811115620006a357620006a262000252565b5b620006af82546200047c565b620006bc828285620005e5565b5f60209050601f831160018114620006f2575f8415620006dd578287015190505b620006e985826200065f565b86555062000758565b601f1984166200070286620004b0565b5f5b828110156200072b5784890151825560018201915060208501945060208101905062000704565b868310156200074b578489015162000747601f89168262000641565b8355505b6001600288020188555050505b505050505050565b6200076b81620001f8565b82525050565b5f602082019050620007865f83018462000760565b92915050565b612b96806200079a5f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c80638ac5dea1116100b6578063c87b56dd1161007a578063c87b56dd14610336578063ca5e0e8814610366578063e973799a14610397578063e985e9c5146103b3578063ecedc680146103e3578063f2fde38b1461041457610140565b80638ac5dea1146102a65780638da5cb5b146102c257806395d89b41146102e0578063a22cb465146102fe578063b88d4fde1461031a57610140565b80632e410e8e116101085780632e410e8e146101fa57806342842e0e1461020457806342966c68146102205780636352211e1461023c57806370a082311461026c578063715018a61461029c57610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806323b872dd146101de575b5f80fd5b61015e60048036038101906101599190611f4e565b610430565b60405161016b9190611f93565b60405180910390f35b61017c610441565b6040516101899190612036565b60405180910390f35b6101ac60048036038101906101a79190612089565b6104d0565b6040516101b991906120f3565b60405180910390f35b6101dc60048036038101906101d79190612136565b6104eb565b005b6101f860048036038101906101f39190612174565b610501565b005b610202610600565b005b61021e60048036038101906102199190612174565b610624565b005b61023a60048036038101906102359190612089565b610643565b005b61025660048036038101906102519190612089565b610659565b60405161026391906120f3565b60405180910390f35b610286600480360381019061028191906121c4565b61066a565b60405161029391906121fe565b60405180910390f35b6102a4610720565b005b6102c060048036038101906102bb9190612343565b610733565b005b6102ca6108b3565b6040516102d791906120f3565b60405180910390f35b6102e86108db565b6040516102f59190612036565b60405180910390f35b610318600480360381019061031391906123b4565b61096b565b005b610334600480360381019061032f9190612490565b610981565b005b610350600480360381019061034b9190612089565b61099e565b60405161035d9190612036565b60405180910390f35b610380600480360381019061037b91906121c4565b6109b0565b60405161038e929190612510565b60405180910390f35b6103b160048036038101906103ac91906121c4565b610a62565b005b6103cd60048036038101906103c8919061253e565b610b57565b6040516103da9190611f93565b60405180910390f35b6103fd60048036038101906103f891906121c4565b610be5565b60405161040b929190612510565b60405180910390f35b61042e600480360381019061042991906121c4565b610cd0565b005b5f61043a82610d54565b9050919050565b60605f805461044f906125a9565b80601f016020809104026020016040519081016040528092919081815260200182805461047b906125a9565b80156104c65780601f1061049d576101008083540402835291602001916104c6565b820191905f5260205f20905b8154815290600101906020018083116104a957829003601f168201915b5050505050905090565b5f6104da82610db4565b506104e482610e3a565b9050919050565b6104fd82826104f8610e73565b610e7a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610571575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161056891906120f3565b60405180910390fd5b5f610584838361057f610e73565b610e8c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105fa578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105f1939291906125d9565b60405180910390fd5b50505050565b610608611097565b600160095f6101000a81548160ff021916908315150217905550565b61063e83838360405180602001604052805f815250610981565b505050565b6106555f82610650610e73565b610e8c565b5050565b5f61066382610db4565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106db575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106d291906120f3565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610728611097565b6107315f61111e565b565b61073b611097565b60095f9054906101000a900460ff16610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078090612658565b60405180910390fd5b5f60085f81548092919061079c906126a3565b9190505590506107b36107ad6108b3565b826111e1565b6107bd81836111fe565b60405180604001604052808381526020015f1515815250600b5f6107df6108b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01908161082b9190612887565b506020820151816001015f6101000a81548160ff021916908315150217905550905050808260405161085d9190612990565b604051809103902061086d6108b3565b73ffffffffffffffffffffffffffffffffffffffff167f5d524e0183e95410ff30df610eeef1541403d23325ff607098b786db901f87d260405160405180910390a45050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108ea906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610916906125a9565b80156109615780601f1061093857610100808354040283529160200191610961565b820191905f5260205f20905b81548152906001019060200180831161094457829003601f168201915b5050505050905090565b61097d610976610e73565b8383611258565b5050565b61098c848484610501565b610998848484846113c1565b50505050565b60606109a982611573565b9050919050565b600b602052805f5260405f205f91509050805f0180546109cf906125a9565b80601f01602080910402602001604051908101604052809291908181526020018280546109fb906125a9565b8015610a465780601f10610a1d57610100808354040283529160200191610a46565b820191905f5260205f20905b815481529060010190602001808311610a2957829003601f168201915b505050505090806001015f9054906101000a900460ff16905082565b610a6a611097565b5f1515600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900460ff16151514610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906129f0565b60405180910390fd5b6001600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a81548160ff02191690831515021790555050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60605f80600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f01816001015f9054906101000a900460ff16818054610c48906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c74906125a9565b8015610cbf5780601f10610c9657610100808354040283529160200191610cbf565b820191905f5260205f20905b815481529060010190602001808311610ca257829003601f168201915b505050505091509250925050915091565b610cd8611097565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d48575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d3f91906120f3565b60405180910390fd5b610d518161111e565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610dad5750610dac8261167e565b5b9050919050565b5f80610dbf8361175f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e3157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e2891906121fe565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e878383836001611798565b505050565b5f80610e978461175f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ed857610ed7818486611957565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f6357610f175f855f80611798565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610fe257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61109f610e73565b73ffffffffffffffffffffffffffffffffffffffff166110bd6108b3565b73ffffffffffffffffffffffffffffffffffffffff161461111c576110e0610e73565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161111391906120f3565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111fa828260405180602001604052805f815250611a1a565b5050565b8060065f8481526020019081526020015f20908161121c9190612887565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161124c91906121fe565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112c857816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112bf91906120f3565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113b49190611f93565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561156d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611404610e73565b8685856040518563ffffffff1660e01b81526004016114269493929190612a60565b6020604051808303815f875af192505050801561146157506040513d601f19601f8201168201806040525081019061145e9190612abe565b60015b6114e2573d805f811461148f576040519150601f19603f3d011682016040523d82523d5f602084013e611494565b606091505b505f8151036114da57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114d191906120f3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461156b57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161156291906120f3565b60405180910390fd5b505b50505050565b606061157e82610db4565b505f60065f8481526020019081526020015f20805461159c906125a9565b80601f01602080910402602001604051908101604052809291908181526020018280546115c8906125a9565b80156116135780601f106115ea57610100808354040283529160200191611613565b820191905f5260205f20905b8154815290600101906020018083116115f657829003601f168201915b505050505090505f611623611a35565b90505f815103611637578192505050611679565b5f8251111561166b578082604051602001611653929190612ae9565b60405160208183030381529060405292505050611679565b61167484611a4b565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061174857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611758575061175782611ab1565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806117d057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611902575f6117df84610db4565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561184957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561185c575061185a8184610b57565b155b1561189e57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161189591906120f3565b60405180910390fd5b811561190057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611962838383611b1a565b611a15575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119d657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119cd91906121fe565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a0c929190612b0c565b60405180910390fd5b505050565b611a248383611bda565b611a305f8484846113c1565b505050565b606060405180602001604052805f815250905090565b6060611a5682610db4565b505f611a60611a35565b90505f815111611a7e5760405180602001604052805f815250611aa9565b80611a8884611ccd565b604051602001611a99929190612ae9565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bd157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b925750611b918484610b57565b5b80611bd057508273ffffffffffffffffffffffffffffffffffffffff16611bb883610e3a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c4a575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c4191906120f3565b60405180910390fd5b5f611c5683835f610e8c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cc8575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611cbf91906120f3565b60405180910390fd5b505050565b60605f6001611cdb84611d97565b0190505f8167ffffffffffffffff811115611cf957611cf861221f565b5b6040519080825280601f01601f191660200182016040528015611d2b5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611d8c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d8157611d80612b33565b5b0494505f8503611d38575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611df3577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611de957611de8612b33565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e30576d04ee2d6d415b85acef81000000008381611e2657611e25612b33565b5b0492506020810190505b662386f26fc100008310611e5f57662386f26fc100008381611e5557611e54612b33565b5b0492506010810190505b6305f5e1008310611e88576305f5e1008381611e7e57611e7d612b33565b5b0492506008810190505b6127108310611ead576127108381611ea357611ea2612b33565b5b0492506004810190505b60648310611ed05760648381611ec657611ec5612b33565b5b0492506002810190505b600a8310611edf576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f2d81611ef9565b8114611f37575f80fd5b50565b5f81359050611f4881611f24565b92915050565b5f60208284031215611f6357611f62611ef1565b5b5f611f7084828501611f3a565b91505092915050565b5f8115159050919050565b611f8d81611f79565b82525050565b5f602082019050611fa65f830184611f84565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611fe3578082015181840152602081019050611fc8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61200882611fac565b6120128185611fb6565b9350612022818560208601611fc6565b61202b81611fee565b840191505092915050565b5f6020820190508181035f83015261204e8184611ffe565b905092915050565b5f819050919050565b61206881612056565b8114612072575f80fd5b50565b5f813590506120838161205f565b92915050565b5f6020828403121561209e5761209d611ef1565b5b5f6120ab84828501612075565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120dd826120b4565b9050919050565b6120ed816120d3565b82525050565b5f6020820190506121065f8301846120e4565b92915050565b612115816120d3565b811461211f575f80fd5b50565b5f813590506121308161210c565b92915050565b5f806040838503121561214c5761214b611ef1565b5b5f61215985828601612122565b925050602061216a85828601612075565b9150509250929050565b5f805f6060848603121561218b5761218a611ef1565b5b5f61219886828701612122565b93505060206121a986828701612122565b92505060406121ba86828701612075565b9150509250925092565b5f602082840312156121d9576121d8611ef1565b5b5f6121e684828501612122565b91505092915050565b6121f881612056565b82525050565b5f6020820190506122115f8301846121ef565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61225582611fee565b810181811067ffffffffffffffff821117156122745761227361221f565b5b80604052505050565b5f612286611ee8565b9050612292828261224c565b919050565b5f67ffffffffffffffff8211156122b1576122b061221f565b5b6122ba82611fee565b9050602081019050919050565b828183375f83830152505050565b5f6122e76122e284612297565b61227d565b9050828152602081018484840111156123035761230261221b565b5b61230e8482856122c7565b509392505050565b5f82601f83011261232a57612329612217565b5b813561233a8482602086016122d5565b91505092915050565b5f6020828403121561235857612357611ef1565b5b5f82013567ffffffffffffffff81111561237557612374611ef5565b5b61238184828501612316565b91505092915050565b61239381611f79565b811461239d575f80fd5b50565b5f813590506123ae8161238a565b92915050565b5f80604083850312156123ca576123c9611ef1565b5b5f6123d785828601612122565b92505060206123e8858286016123a0565b9150509250929050565b5f67ffffffffffffffff82111561240c5761240b61221f565b5b61241582611fee565b9050602081019050919050565b5f61243461242f846123f2565b61227d565b9050828152602081018484840111156124505761244f61221b565b5b61245b8482856122c7565b509392505050565b5f82601f83011261247757612476612217565b5b8135612487848260208601612422565b91505092915050565b5f805f80608085870312156124a8576124a7611ef1565b5b5f6124b587828801612122565b94505060206124c687828801612122565b93505060406124d787828801612075565b925050606085013567ffffffffffffffff8111156124f8576124f7611ef5565b5b61250487828801612463565b91505092959194509250565b5f6040820190508181035f8301526125288185611ffe565b90506125376020830184611f84565b9392505050565b5f806040838503121561255457612553611ef1565b5b5f61256185828601612122565b925050602061257285828601612122565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125c057607f821691505b6020821081036125d3576125d261257c565b5b50919050565b5f6060820190506125ec5f8301866120e4565b6125f960208301856121ef565b61260660408301846120e4565b949350505050565b7f4d696e74696e67206e6f7420617070726f7665642079657400000000000000005f82015250565b5f612642601883611fb6565b915061264d8261260e565b602082019050919050565b5f6020820190508181035f83015261266f81612636565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126ad82612056565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126df576126de612676565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261270b565b612750868361270b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61278b61278661278184612056565b612768565b612056565b9050919050565b5f819050919050565b6127a483612771565b6127b86127b082612792565b848454612717565b825550505050565b5f90565b6127cc6127c0565b6127d781848461279b565b505050565b5b818110156127fa576127ef5f826127c4565b6001810190506127dd565b5050565b601f82111561283f57612810816126ea565b612819846126fc565b81016020851015612828578190505b61283c612834856126fc565b8301826127dc565b50505b505050565b5f82821c905092915050565b5f61285f5f1984600802612844565b1980831691505092915050565b5f6128778383612850565b9150826002028217905092915050565b61289082611fac565b67ffffffffffffffff8111156128a9576128a861221f565b5b6128b382546125a9565b6128be8282856127fe565b5f60209050601f8311600181146128ef575f84156128dd578287015190505b6128e7858261286c565b86555061294e565b601f1984166128fd866126ea565b5f5b82811015612924578489015182556001820191506020850194506020810190506128ff565b86831015612941578489015161293d601f891682612850565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f61296a82611fac565b6129748185612956565b9350612984818560208601611fc6565b80840191505092915050565b5f61299b8284612960565b915081905092915050565b7f5265717565737420616c726561647920617070726f76656400000000000000005f82015250565b5f6129da601883611fb6565b91506129e5826129a6565b602082019050919050565b5f6020820190508181035f830152612a07816129ce565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612a3282612a0e565b612a3c8185612a18565b9350612a4c818560208601611fc6565b612a5581611fee565b840191505092915050565b5f608082019050612a735f8301876120e4565b612a8060208301866120e4565b612a8d60408301856121ef565b8181036060830152612a9f8184612a28565b905095945050505050565b5f81519050612ab881611f24565b92915050565b5f60208284031215612ad357612ad2611ef1565b5b5f612ae084828501612aaa565b91505092915050565b5f612af48285612960565b9150612b008284612960565b91508190509392505050565b5f604082019050612b1f5f8301856120e4565b612b2c60208301846121ef565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212208a18682d9a0e14e373013daa15354f76413986a0fd00ebc1ed6c1134f601838964736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3330 CODESIZE SUB DUP1 PUSH3 0x3330 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x3AE JUMP JUMPDEST DUP3 DUP3 DUP3 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x67C JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x67C JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE2 DUP2 PUSH3 0x105 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x78C JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x204 DUP3 PUSH3 0x1D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x216 DUP2 PUSH3 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH3 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x234 DUP2 PUSH3 0x20B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x28A DUP3 PUSH3 0x242 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2AC JUMPI PUSH3 0x2AB PUSH3 0x252 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2C0 PUSH3 0x1C8 JUMP JUMPDEST SWAP1 POP PUSH3 0x2CE DUP3 DUP3 PUSH3 0x27F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH3 0x2EF PUSH3 0x252 JUMP JUMPDEST JUMPDEST PUSH3 0x2FB DUP3 PUSH3 0x242 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x327 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x30A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x348 PUSH3 0x342 DUP5 PUSH3 0x2D3 JUMP JUMPDEST PUSH3 0x2B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x367 JUMPI PUSH3 0x366 PUSH3 0x23E JUMP JUMPDEST JUMPDEST PUSH3 0x374 DUP5 DUP3 DUP6 PUSH3 0x308 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x23A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3A5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x332 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3C8 JUMPI PUSH3 0x3C7 PUSH3 0x1D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x3D7 DUP7 DUP3 DUP8 ADD PUSH3 0x224 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3FB JUMPI PUSH3 0x3FA PUSH3 0x1D5 JUMP JUMPDEST JUMPDEST PUSH3 0x409 DUP7 DUP3 DUP8 ADD PUSH3 0x37C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x42D JUMPI PUSH3 0x42C PUSH3 0x1D5 JUMP JUMPDEST JUMPDEST PUSH3 0x43B DUP7 DUP3 DUP8 ADD PUSH3 0x37C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x494 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4AA JUMPI PUSH3 0x4A9 PUSH3 0x44F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x50E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4D1 JUMP JUMPDEST PUSH3 0x51A DUP7 DUP4 PUSH3 0x4D1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x564 PUSH3 0x55E PUSH3 0x558 DUP5 PUSH3 0x532 JUMP JUMPDEST PUSH3 0x53B JUMP JUMPDEST PUSH3 0x532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57F DUP4 PUSH3 0x544 JUMP JUMPDEST PUSH3 0x597 PUSH3 0x58E DUP3 PUSH3 0x56B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4DD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x5AD PUSH3 0x59F JUMP JUMPDEST PUSH3 0x5BA DUP2 DUP5 DUP5 PUSH3 0x574 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5E1 JUMPI PUSH3 0x5D5 PUSH0 DUP3 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x630 JUMPI PUSH3 0x5FA DUP2 PUSH3 0x4B0 JUMP JUMPDEST PUSH3 0x605 DUP5 PUSH3 0x4C2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x615 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x62D PUSH3 0x624 DUP6 PUSH3 0x4C2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x652 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x635 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x66C DUP4 DUP4 PUSH3 0x641 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x687 DUP3 PUSH3 0x445 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A3 JUMPI PUSH3 0x6A2 PUSH3 0x252 JUMP JUMPDEST JUMPDEST PUSH3 0x6AF DUP3 SLOAD PUSH3 0x47C JUMP JUMPDEST PUSH3 0x6BC DUP3 DUP3 DUP6 PUSH3 0x5E5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F2 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x6DD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6E9 DUP6 DUP3 PUSH3 0x65F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x758 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x702 DUP7 PUSH3 0x4B0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x72B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x704 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x74B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x747 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x641 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x76B DUP2 PUSH3 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x786 PUSH0 DUP4 ADD DUP5 PUSH3 0x760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B96 DUP1 PUSH3 0x79A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AC5DEA1 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xCA5E0E88 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xE973799A EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xECEDC680 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x414 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x8AC5DEA1 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x31A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x2E410E8E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x2E410E8E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29C JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x720 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0xCD0 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x43A DUP3 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47B SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP PUSH2 0x4E4 DUP3 PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FD DUP3 DUP3 PUSH2 0x4F8 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE7A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x571 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x584 DUP4 DUP4 PUSH2 0x57F PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FA JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x63E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x981 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x655 PUSH0 DUP3 PUSH2 0x650 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x663 DUP3 PUSH2 0xDB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x728 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x731 PUSH0 PUSH2 0x111E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x73B PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x79C SWAP1 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x7B3 PUSH2 0x7AD PUSH2 0x8B3 JUMP JUMPDEST DUP3 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x7BD DUP2 DUP4 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH0 PUSH2 0x7DF PUSH2 0x8B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x2887 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x86D PUSH2 0x8B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D524E0183E95410FF30DF610EEEF1541403D23325FF607098B786DB901F87D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8EA SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x938 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97D PUSH2 0x976 PUSH2 0xE73 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1258 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x98C DUP5 DUP5 DUP5 PUSH2 0x501 JUMP JUMPDEST PUSH2 0x998 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13C1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A9 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x9CF SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FB SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xA6A PUSH2 0x1097 JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP1 PUSH2 0x29F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 DUP1 SLOAD PUSH2 0xC48 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC74 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC96 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xCD8 PUSH2 0x1097 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0x111E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDAD JUMPI POP PUSH2 0xDAC DUP3 PUSH2 0x167E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDBF DUP4 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE31 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE87 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1798 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE97 DUP5 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED8 JUMPI PUSH2 0xED7 DUP2 DUP5 DUP7 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF63 JUMPI PUSH2 0xF17 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE2 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x109F PUSH2 0xE73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10BD PUSH2 0x8B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111C JUMPI PUSH2 0x10E0 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11FA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1A1A JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x2887 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C8 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x156D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1404 PUSH2 0xE73 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1461 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14E2 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x14DA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x156B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x157E DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x159C SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15C8 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1613 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1613 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1623 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1637 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1679 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x166B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1653 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1674 DUP5 PUSH2 0x1A4B JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1748 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1758 JUMPI POP PUSH2 0x1757 DUP3 PUSH2 0x1AB1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x17D0 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1902 JUMPI PUSH0 PUSH2 0x17DF DUP5 PUSH2 0xDB4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1849 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x185C JUMPI POP PUSH2 0x185A DUP2 DUP5 PUSH2 0xB57 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x189E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1900 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1962 DUP4 DUP4 DUP4 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1A15 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CD SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0C SWAP3 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A24 DUP4 DUP4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1A30 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x13C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A56 DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP PUSH0 PUSH2 0x1A60 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1A7E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1AA9 JUMP JUMPDEST DUP1 PUSH2 0x1A88 DUP5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A99 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BD1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B92 JUMPI POP PUSH2 0x1B91 DUP5 DUP5 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BD0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BB8 DUP4 PUSH2 0xE3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C56 DUP4 DUP4 PUSH0 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBF SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1CDB DUP5 PUSH2 0x1D97 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH2 0x1CF8 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D2B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1D8C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1D38 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1DF3 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E30 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E5F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E88 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1EAD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1EA3 JUMPI PUSH2 0x1EA2 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1ED0 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1EDF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2D DUP2 PUSH2 0x1EF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F48 DUP2 PUSH2 0x1F24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F62 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F70 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F8D DUP2 PUSH2 0x1F79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FE3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FC8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2008 DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x2012 DUP2 DUP6 PUSH2 0x1FB6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2022 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x202B DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x204E DUP2 DUP5 PUSH2 0x1FFE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2068 DUP2 PUSH2 0x2056 JUMP JUMPDEST DUP2 EQ PUSH2 0x2072 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2083 DUP2 PUSH2 0x205F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209E JUMPI PUSH2 0x209D PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20AB DUP5 DUP3 DUP6 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20DD DUP3 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20ED DUP2 PUSH2 0x20D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2106 PUSH0 DUP4 ADD DUP5 PUSH2 0x20E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x20D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x211F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2130 DUP2 PUSH2 0x210C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x214C JUMPI PUSH2 0x214B PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2159 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x216A DUP6 DUP3 DUP7 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x218B JUMPI PUSH2 0x218A PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2198 DUP7 DUP3 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21A9 DUP7 DUP3 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21BA DUP7 DUP3 DUP8 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E6 DUP5 DUP3 DUP6 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F8 DUP2 PUSH2 0x2056 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2211 PUSH0 DUP4 ADD DUP5 PUSH2 0x21EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2255 DUP3 PUSH2 0x1FEE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2274 JUMPI PUSH2 0x2273 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2286 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2292 DUP3 DUP3 PUSH2 0x224C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22B1 JUMPI PUSH2 0x22B0 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH2 0x22BA DUP3 PUSH2 0x1FEE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22E7 PUSH2 0x22E2 DUP5 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2303 JUMPI PUSH2 0x2302 PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH2 0x230E DUP5 DUP3 DUP6 PUSH2 0x22C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x233A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2358 JUMPI PUSH2 0x2357 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2375 JUMPI PUSH2 0x2374 PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST PUSH2 0x2381 DUP5 DUP3 DUP6 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2393 DUP2 PUSH2 0x1F79 JUMP JUMPDEST DUP2 EQ PUSH2 0x239D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AE DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CA JUMPI PUSH2 0x23C9 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D7 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23E8 DUP6 DUP3 DUP7 ADD PUSH2 0x23A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x240C JUMPI PUSH2 0x240B PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH2 0x2415 DUP3 PUSH2 0x1FEE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2434 PUSH2 0x242F DUP5 PUSH2 0x23F2 JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2450 JUMPI PUSH2 0x244F PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH2 0x245B DUP5 DUP3 DUP6 PUSH2 0x22C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2477 JUMPI PUSH2 0x2476 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2487 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A7 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B5 DUP8 DUP3 DUP9 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24C6 DUP8 DUP3 DUP9 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x24D7 DUP8 DUP3 DUP9 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F8 JUMPI PUSH2 0x24F7 PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST PUSH2 0x2504 DUP8 DUP3 DUP9 ADD PUSH2 0x2463 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2528 DUP2 DUP6 PUSH2 0x1FFE JUMP JUMPDEST SWAP1 POP PUSH2 0x2537 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2561 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2572 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D3 JUMPI PUSH2 0x25D2 PUSH2 0x257C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25EC PUSH0 DUP4 ADD DUP7 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x25F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21EF JUMP JUMPDEST PUSH2 0x2606 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E67206E6F7420617070726F766564207965740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2642 PUSH1 0x18 DUP4 PUSH2 0x1FB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x264D DUP3 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x266F DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AD DUP3 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26DF JUMPI PUSH2 0x26DE PUSH2 0x2676 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2746 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x2750 DUP7 DUP4 PUSH2 0x270B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x278B PUSH2 0x2786 PUSH2 0x2781 DUP5 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x2768 JUMP JUMPDEST PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A4 DUP4 PUSH2 0x2771 JUMP JUMPDEST PUSH2 0x27B8 PUSH2 0x27B0 DUP3 PUSH2 0x2792 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2717 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x27CC PUSH2 0x27C0 JUMP JUMPDEST PUSH2 0x27D7 DUP2 DUP5 DUP5 PUSH2 0x279B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27FA JUMPI PUSH2 0x27EF PUSH0 DUP3 PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x283F JUMPI PUSH2 0x2810 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2819 DUP5 PUSH2 0x26FC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2828 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x283C PUSH2 0x2834 DUP6 PUSH2 0x26FC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27DC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x285F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2844 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2877 DUP4 DUP4 PUSH2 0x2850 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2890 DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28A9 JUMPI PUSH2 0x28A8 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH2 0x28B3 DUP3 SLOAD PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0x28BE DUP3 DUP3 DUP6 PUSH2 0x27FE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28EF JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28DD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28E7 DUP6 DUP3 PUSH2 0x286C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x294E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28FD DUP7 PUSH2 0x26EA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2924 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28FF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2941 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x293D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2850 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x296A DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x2974 DUP2 DUP6 PUSH2 0x2956 JUMP JUMPDEST SWAP4 POP PUSH2 0x2984 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x299B DUP3 DUP5 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265717565737420616C726561647920617070726F7665640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29DA PUSH1 0x18 DUP4 PUSH2 0x1FB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E5 DUP3 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A07 DUP2 PUSH2 0x29CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A32 DUP3 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x2A3C DUP2 DUP6 PUSH2 0x2A18 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x2A55 DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2A73 PUSH0 DUP4 ADD DUP8 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x2A80 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x2A8D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2A9F DUP2 DUP5 PUSH2 0x2A28 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AB8 DUP2 PUSH2 0x1F24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AD3 JUMPI PUSH2 0x2AD2 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x2AAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF4 DUP3 DUP6 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B00 DUP3 DUP5 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B1F PUSH0 DUP4 ADD DUP6 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x2B2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 XOR PUSH9 0x2D9A0E14E373013DAA ISZERO CALLDATALOAD 0x4F PUSH23 0x413986A0FD00EBC1ED6C1134F601838964736F6C634300 ADDMOD OR STOP CALLER ",
							"sourceMap": "326:2015:17:-:0;;;694:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;819:12;787:5;794:7;1455:5:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;866:5:17::2;847:16;;:24;;;;;;;;;;;;;;;;;;694:184:::0;;;326:2015;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:246::-;2202:1;2212:113;2226:6;2223:1;2220:13;2212:113;;;2311:1;2306:3;2302:11;2296:18;2292:1;2287:3;2283:11;2276:39;2248:2;2245:1;2241:10;2236:15;;2212:113;;;2359:1;2350:6;2345:3;2341:16;2334:27;2183:184;2121:246;;;:::o;2373:434::-;2462:5;2487:66;2503:49;2545:6;2503:49;:::i;:::-;2487:66;:::i;:::-;2478:75;;2576:6;2569:5;2562:21;2614:4;2607:5;2603:16;2652:3;2643:6;2638:3;2634:16;2631:25;2628:112;;;2659:79;;:::i;:::-;2628:112;2749:52;2794:6;2789:3;2784;2749:52;:::i;:::-;2468:339;2373:434;;;;;:::o;2827:355::-;2894:5;2943:3;2936:4;2928:6;2924:17;2920:27;2910:122;;2951:79;;:::i;:::-;2910:122;3061:6;3055:13;3086:90;3172:3;3164:6;3157:4;3149:6;3145:17;3086:90;:::i;:::-;3077:99;;2900:282;2827:355;;;;:::o;3188:1009::-;3296:6;3304;3312;3361:2;3349:9;3340:7;3336:23;3332:32;3329:119;;;3367:79;;:::i;:::-;3329:119;3487:1;3512:64;3568:7;3559:6;3548:9;3544:22;3512:64;:::i;:::-;3502:74;;3458:128;3646:2;3635:9;3631:18;3625:25;3677:18;3669:6;3666:30;3663:117;;;3699:79;;:::i;:::-;3663:117;3804:74;3870:7;3861:6;3850:9;3846:22;3804:74;:::i;:::-;3794:84;;3596:292;3948:2;3937:9;3933:18;3927:25;3979:18;3971:6;3968:30;3965:117;;;4001:79;;:::i;:::-;3965:117;4106:74;4172:7;4163:6;4152:9;4148:22;4106:74;:::i;:::-;4096:84;;3898:292;3188:1009;;;;;:::o;4203:99::-;4255:6;4289:5;4283:12;4273:22;;4203:99;;;:::o;4308:180::-;4356:77;4353:1;4346:88;4453:4;4450:1;4443:15;4477:4;4474:1;4467:15;4494:320;4538:6;4575:1;4569:4;4565:12;4555:22;;4622:1;4616:4;4612:12;4643:18;4633:81;;4699:4;4691:6;4687:17;4677:27;;4633:81;4761:2;4753:6;4750:14;4730:18;4727:38;4724:84;;4780:18;;:::i;:::-;4724:84;4545:269;4494:320;;;:::o;4820:141::-;4869:4;4892:3;4884:11;;4915:3;4912:1;4905:14;4949:4;4946:1;4936:18;4928:26;;4820:141;;;:::o;4967:93::-;5004:6;5051:2;5046;5039:5;5035:14;5031:23;5021:33;;4967:93;;;:::o;5066:107::-;5110:8;5160:5;5154:4;5150:16;5129:37;;5066:107;;;;:::o;5179:393::-;5248:6;5298:1;5286:10;5282:18;5321:97;5351:66;5340:9;5321:97;:::i;:::-;5439:39;5469:8;5458:9;5439:39;:::i;:::-;5427:51;;5511:4;5507:9;5500:5;5496:21;5487:30;;5560:4;5550:8;5546:19;5539:5;5536:30;5526:40;;5255:317;;5179:393;;;;;:::o;5578:77::-;5615:7;5644:5;5633:16;;5578:77;;;:::o;5661:60::-;5689:3;5710:5;5703:12;;5661:60;;;:::o;5727:142::-;5777:9;5810:53;5828:34;5837:24;5855:5;5837:24;:::i;:::-;5828:34;:::i;:::-;5810:53;:::i;:::-;5797:66;;5727:142;;;:::o;5875:75::-;5918:3;5939:5;5932:12;;5875:75;;;:::o;5956:269::-;6066:39;6097:7;6066:39;:::i;:::-;6127:91;6176:41;6200:16;6176:41;:::i;:::-;6168:6;6161:4;6155:11;6127:91;:::i;:::-;6121:4;6114:105;6032:193;5956:269;;;:::o;6231:73::-;6276:3;6231:73;:::o;6310:189::-;6387:32;;:::i;:::-;6428:65;6486:6;6478;6472:4;6428:65;:::i;:::-;6363:136;6310:189;;:::o;6505:186::-;6565:120;6582:3;6575:5;6572:14;6565:120;;;6636:39;6673:1;6666:5;6636:39;:::i;:::-;6609:1;6602:5;6598:13;6589:22;;6565:120;;;6505:186;;:::o;6697:543::-;6798:2;6793:3;6790:11;6787:446;;;6832:38;6864:5;6832:38;:::i;:::-;6916:29;6934:10;6916:29;:::i;:::-;6906:8;6902:44;7099:2;7087:10;7084:18;7081:49;;;7120:8;7105:23;;7081:49;7143:80;7199:22;7217:3;7199:22;:::i;:::-;7189:8;7185:37;7172:11;7143:80;:::i;:::-;6802:431;;6787:446;6697:543;;;:::o;7246:117::-;7300:8;7350:5;7344:4;7340:16;7319:37;;7246:117;;;;:::o;7369:169::-;7413:6;7446:51;7494:1;7490:6;7482:5;7479:1;7475:13;7446:51;:::i;:::-;7442:56;7527:4;7521;7517:15;7507:25;;7420:118;7369:169;;;;:::o;7543:295::-;7619:4;7765:29;7790:3;7784:4;7765:29;:::i;:::-;7757:37;;7827:3;7824:1;7820:11;7814:4;7811:21;7803:29;;7543:295;;;;:::o;7843:1395::-;7960:37;7993:3;7960:37;:::i;:::-;8062:18;8054:6;8051:30;8048:56;;;8084:18;;:::i;:::-;8048:56;8128:38;8160:4;8154:11;8128:38;:::i;:::-;8213:67;8273:6;8265;8259:4;8213:67;:::i;:::-;8307:1;8331:4;8318:17;;8363:2;8355:6;8352:14;8380:1;8375:618;;;;9037:1;9054:6;9051:77;;;9103:9;9098:3;9094:19;9088:26;9079:35;;9051:77;9154:67;9214:6;9207:5;9154:67;:::i;:::-;9148:4;9141:81;9010:222;8345:887;;8375:618;8427:4;8423:9;8415:6;8411:22;8461:37;8493:4;8461:37;:::i;:::-;8520:1;8534:208;8548:7;8545:1;8542:14;8534:208;;;8627:9;8622:3;8618:19;8612:26;8604:6;8597:42;8678:1;8670:6;8666:14;8656:24;;8725:2;8714:9;8710:18;8697:31;;8571:4;8568:1;8564:12;8559:17;;8534:208;;;8770:6;8761:7;8758:19;8755:179;;;8828:9;8823:3;8819:19;8813:26;8871:48;8913:4;8905:6;8901:17;8890:9;8871:48;:::i;:::-;8863:6;8856:64;8778:156;8755:179;8980:1;8976;8968:6;8964:14;8960:22;8954:4;8947:36;8382:611;;;8345:887;;7935:1303;;;7843:1395;;:::o;9244:118::-;9331:24;9349:5;9331:24;:::i;:::-;9326:3;9319:37;9244:118;;:::o;9368:222::-;9461:4;9499:2;9488:9;9484:18;9476:26;;9512:71;9580:1;9569:9;9565:17;9556:6;9512:71;:::i;:::-;9368:222;;;;:::o;326:2015:17:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1128": {
									"entryPoint": 3706,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 6040,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": 6709,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 6487,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 5057,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4247,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 3642,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 6938,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 7130,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1655": {
									"entryPoint": 3699,
									"id": 1655,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 5983,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 3508,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 4577,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 6682,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 4696,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1614": {
									"entryPoint": 4606,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4382,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 3724,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approveMintingAll_3230": {
									"entryPoint": 1536,
									"id": 3230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approveMintingOne_3255": {
									"entryPoint": 2658,
									"id": 3255,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_537": {
									"entryPoint": 1259,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 1642,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1488": {
									"entryPoint": 1603,
									"id": 1488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_554": {
									"entryPoint": 1232,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMintRequest_3278": {
									"entryPoint": 3045,
									"id": 3278,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@isApprovedForAll_587": {
									"entryPoint": 2903,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2830": {
									"entryPoint": 7575,
									"id": 2830,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintRequests_3140": {
									"entryPoint": 2480,
									"id": 3140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_467": {
									"entryPoint": 1089,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1625,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2227,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1824,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestMint_3220": {
									"entryPoint": 1843,
									"id": 3220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1572,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2433,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2411,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1538": {
									"entryPoint": 3412,
									"id": 1538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1943": {
									"entryPoint": 6833,
									"id": 1943,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3310": {
									"entryPoint": 1072,
									"id": 3310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 5758,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 2267,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1733": {
									"entryPoint": 7373,
									"id": 1733,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1595": {
									"entryPoint": 5491,
									"id": 1595,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3294": {
									"entryPoint": 2462,
									"id": 3294,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 6731,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1281,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3280,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 9027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10985,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10848,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9689,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8903,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8134,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7921,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4": {
									"entryPoint": 9742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6": {
									"entryPoint": 10662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10007,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23786:18",
										"nodeType": "YulBlock",
										"src": "0:23786:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "378:105:18",
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nativeSrc": "388:89:18",
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:18",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nativeSrc": "399:78:18",
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:18",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:18",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nativeSrc": "531:78:18",
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:18",
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:18",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nativeSrc": "589:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nativeSrc": "589:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nativeSrc": "561:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nativeSrc": "551:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nativeSrc": "544:42:18",
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nativeSrc": "541:62:18",
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:18",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nativeSrc": "666:86:18",
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nativeSrc": "676:29:18",
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nativeSrc": "685:20:18",
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nativeSrc": "714:32:18",
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nativeSrc": "714:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:18",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:18",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:18",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nativeSrc": "823:262:18",
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:18",
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nativeSrc": "871:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nativeSrc": "871:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nativeSrc": "840:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:18",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nativeSrc": "836:32:18",
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nativeSrc": "833:119:18",
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nativeSrc": "962:116:18",
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nativeSrc": "977:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:18",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:18",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nativeSrc": "1036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:18",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nativeSrc": "1016:52:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:18",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:18",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:18",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nativeSrc": "1133:48:18",
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nativeSrc": "1143:32:18",
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nativeSrc": "1161:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nativeSrc": "1154:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:18",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:18",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nativeSrc": "1246:50:18",
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nativeSrc": "1268:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nativeSrc": "1256:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nativeSrc": "1256:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:18",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:18",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nativeSrc": "1394:118:18",
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nativeSrc": "1404:26:18",
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nativeSrc": "1412:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nativeSrc": "1487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nativeSrc": "1440:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nativeSrc": "1440:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:18",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:18",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:18",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nativeSrc": "1577:40:18",
													"nodeType": "YulBlock",
													"src": "1577:40:18",
													"statements": [
														{
															"nativeSrc": "1588:22:18",
															"nodeType": "YulAssignment",
															"src": "1588:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:18"
																},
																"nativeSrc": "1598:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:18",
														"nodeType": "YulTypedName",
														"src": "1560:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:18",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"src": "1518:99:18"
											},
											{
												"body": {
													"nativeSrc": "1719:73:18",
													"nodeType": "YulBlock",
													"src": "1719:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:18"
																},
																"nativeSrc": "1729:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:18"
															},
															"nativeSrc": "1729:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:18"
														},
														{
															"nativeSrc": "1757:29:18",
															"nodeType": "YulAssignment",
															"src": "1757:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:18"
																},
																"nativeSrc": "1772:14:18",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:18",
														"nodeType": "YulTypedName",
														"src": "1691:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:18",
														"nodeType": "YulTypedName",
														"src": "1696:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:18",
														"nodeType": "YulTypedName",
														"src": "1707:11:18",
														"type": ""
													}
												],
												"src": "1623:169:18"
											},
											{
												"body": {
													"nativeSrc": "1860:184:18",
													"nodeType": "YulBlock",
													"src": "1860:184:18",
													"statements": [
														{
															"nativeSrc": "1870:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:18",
																"nodeType": "YulLiteral",
																"src": "1879:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:18",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:18",
																"nodeType": "YulBlock",
																"src": "1939:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:18"
																					},
																					"nativeSrc": "1960:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:18"
																							},
																							"nativeSrc": "1979:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:18"
																					},
																					"nativeSrc": "1973:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:18"
																			},
																			"nativeSrc": "1953:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:18"
																		},
																		"nativeSrc": "1953:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:18"
																},
																"nativeSrc": "1897:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:18"
															},
															"nativeSrc": "1889:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:18",
																"nodeType": "YulBlock",
																"src": "1911:19:18",
																"statements": [
																	{
																		"nativeSrc": "1913:15:18",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:18",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:18"
																			},
																			"nativeSrc": "1918:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:18",
																"nodeType": "YulBlock",
																"src": "1893:3:18",
																"statements": []
															},
															"src": "1889:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:18"
																		},
																		"nativeSrc": "2018:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:18"
																},
																"nativeSrc": "2011:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:18"
															},
															"nativeSrc": "2011:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:18",
														"nodeType": "YulTypedName",
														"src": "1842:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:18",
														"nodeType": "YulTypedName",
														"src": "1847:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:18",
														"nodeType": "YulTypedName",
														"src": "1852:6:18",
														"type": ""
													}
												],
												"src": "1798:246:18"
											},
											{
												"body": {
													"nativeSrc": "2098:54:18",
													"nodeType": "YulBlock",
													"src": "2098:54:18",
													"statements": [
														{
															"nativeSrc": "2108:38:18",
															"nodeType": "YulAssignment",
															"src": "2108:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:18"
																		},
																		"nativeSrc": "2122:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:18"
																		},
																		"nativeSrc": "2138:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:18"
																},
																"nativeSrc": "2118:28:18",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:18",
														"nodeType": "YulTypedName",
														"src": "2081:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:18",
														"nodeType": "YulTypedName",
														"src": "2091:6:18",
														"type": ""
													}
												],
												"src": "2050:102:18"
											},
											{
												"body": {
													"nativeSrc": "2250:285:18",
													"nodeType": "YulBlock",
													"src": "2250:285:18",
													"statements": [
														{
															"nativeSrc": "2260:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:18"
																},
																"nativeSrc": "2274:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:18",
															"nodeType": "YulAssignment",
															"src": "2322:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:18"
																},
																"nativeSrc": "2329:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:18"
																		},
																		"nativeSrc": "2444:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:18"
																},
																"nativeSrc": "2409:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:18"
															},
															"nativeSrc": "2409:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:18"
														},
														{
															"nativeSrc": "2483:46:18",
															"nodeType": "YulAssignment",
															"src": "2483:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:18"
																		},
																		"nativeSrc": "2499:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:18"
																},
																"nativeSrc": "2490:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:18",
														"nodeType": "YulTypedName",
														"src": "2231:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:18",
														"nodeType": "YulTypedName",
														"src": "2238:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:18",
														"nodeType": "YulTypedName",
														"src": "2246:3:18",
														"type": ""
													}
												],
												"src": "2158:377:18"
											},
											{
												"body": {
													"nativeSrc": "2659:195:18",
													"nodeType": "YulBlock",
													"src": "2659:195:18",
													"statements": [
														{
															"nativeSrc": "2669:26:18",
															"nodeType": "YulAssignment",
															"src": "2669:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:18"
																},
																"nativeSrc": "2677:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:18"
																		},
																		"nativeSrc": "2712:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nativeSrc": "2731:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:18"
																},
																"nativeSrc": "2705:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:18"
															},
															"nativeSrc": "2705:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:18"
														},
														{
															"nativeSrc": "2761:86:18",
															"nodeType": "YulAssignment",
															"src": "2761:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:18"
																},
																"nativeSrc": "2769:78:18",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:18",
														"nodeType": "YulTypedName",
														"src": "2631:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:18",
														"nodeType": "YulTypedName",
														"src": "2643:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:18",
														"nodeType": "YulTypedName",
														"src": "2654:4:18",
														"type": ""
													}
												],
												"src": "2541:313:18"
											},
											{
												"body": {
													"nativeSrc": "2905:32:18",
													"nodeType": "YulBlock",
													"src": "2905:32:18",
													"statements": [
														{
															"nativeSrc": "2915:16:18",
															"nodeType": "YulAssignment",
															"src": "2915:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:18",
																"nodeType": "YulIdentifier",
																"src": "2926:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:18",
														"nodeType": "YulTypedName",
														"src": "2887:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:18",
														"nodeType": "YulTypedName",
														"src": "2897:7:18",
														"type": ""
													}
												],
												"src": "2860:77:18"
											},
											{
												"body": {
													"nativeSrc": "2986:79:18",
													"nodeType": "YulBlock",
													"src": "2986:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:18",
																"nodeType": "YulBlock",
																"src": "3043:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:18"
																			},
																			"nativeSrc": "3045:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:18"
																		},
																		"nativeSrc": "3045:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:18"
																				},
																				"nativeSrc": "3016:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:18"
																		},
																		"nativeSrc": "3006:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:18"
																},
																"nativeSrc": "2999:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:18"
															},
															"nativeSrc": "2996:63:18",
															"nodeType": "YulIf",
															"src": "2996:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:18",
														"nodeType": "YulTypedName",
														"src": "2979:5:18",
														"type": ""
													}
												],
												"src": "2943:122:18"
											},
											{
												"body": {
													"nativeSrc": "3123:87:18",
													"nodeType": "YulBlock",
													"src": "3123:87:18",
													"statements": [
														{
															"nativeSrc": "3133:29:18",
															"nodeType": "YulAssignment",
															"src": "3133:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:18"
																},
																"nativeSrc": "3142:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:18"
																},
																"nativeSrc": "3171:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:18"
															},
															"nativeSrc": "3171:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:18",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:18",
														"nodeType": "YulTypedName",
														"src": "3109:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:18",
														"nodeType": "YulTypedName",
														"src": "3117:5:18",
														"type": ""
													}
												],
												"src": "3071:139:18"
											},
											{
												"body": {
													"nativeSrc": "3282:263:18",
													"nodeType": "YulBlock",
													"src": "3282:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:18",
																"nodeType": "YulBlock",
																"src": "3328:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:18"
																			},
																			"nativeSrc": "3330:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:18"
																		},
																		"nativeSrc": "3330:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nativeSrc": "3299:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:18"
																},
																"nativeSrc": "3295:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:18"
															},
															"nativeSrc": "3292:119:18",
															"nodeType": "YulIf",
															"src": "3292:119:18"
														},
														{
															"nativeSrc": "3421:117:18",
															"nodeType": "YulBlock",
															"src": "3421:117:18",
															"statements": [
																{
																	"nativeSrc": "3436:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:18"
																				},
																				"nativeSrc": "3496:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:18"
																		},
																		"nativeSrc": "3475:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:18",
														"nodeType": "YulTypedName",
														"src": "3252:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:18",
														"nodeType": "YulTypedName",
														"src": "3263:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:18",
														"nodeType": "YulTypedName",
														"src": "3275:6:18",
														"type": ""
													}
												],
												"src": "3216:329:18"
											},
											{
												"body": {
													"nativeSrc": "3596:81:18",
													"nodeType": "YulBlock",
													"src": "3596:81:18",
													"statements": [
														{
															"nativeSrc": "3606:65:18",
															"nodeType": "YulAssignment",
															"src": "3606:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:18",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:18"
																},
																"nativeSrc": "3617:54:18",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:18",
														"nodeType": "YulTypedName",
														"src": "3578:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:18",
														"nodeType": "YulTypedName",
														"src": "3588:7:18",
														"type": ""
													}
												],
												"src": "3551:126:18"
											},
											{
												"body": {
													"nativeSrc": "3728:51:18",
													"nodeType": "YulBlock",
													"src": "3728:51:18",
													"statements": [
														{
															"nativeSrc": "3738:35:18",
															"nodeType": "YulAssignment",
															"src": "3738:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:18"
																},
																"nativeSrc": "3749:24:18",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:18",
														"nodeType": "YulTypedName",
														"src": "3710:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:18",
														"nodeType": "YulTypedName",
														"src": "3720:7:18",
														"type": ""
													}
												],
												"src": "3683:96:18"
											},
											{
												"body": {
													"nativeSrc": "3850:53:18",
													"nodeType": "YulBlock",
													"src": "3850:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:18"
																		},
																		"nativeSrc": "3872:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:18"
																},
																"nativeSrc": "3860:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:18"
															},
															"nativeSrc": "3860:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:18",
														"nodeType": "YulTypedName",
														"src": "3838:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:18",
														"nodeType": "YulTypedName",
														"src": "3845:3:18",
														"type": ""
													}
												],
												"src": "3785:118:18"
											},
											{
												"body": {
													"nativeSrc": "4007:124:18",
													"nodeType": "YulBlock",
													"src": "4007:124:18",
													"statements": [
														{
															"nativeSrc": "4017:26:18",
															"nodeType": "YulAssignment",
															"src": "4017:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:18"
																},
																"nativeSrc": "4025:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:18"
																		},
																		"nativeSrc": "4106:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:18"
																},
																"nativeSrc": "4053:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:18"
															},
															"nativeSrc": "4053:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:18",
														"nodeType": "YulTypedName",
														"src": "3979:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:18",
														"nodeType": "YulTypedName",
														"src": "3991:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:18",
														"nodeType": "YulTypedName",
														"src": "4002:4:18",
														"type": ""
													}
												],
												"src": "3909:222:18"
											},
											{
												"body": {
													"nativeSrc": "4180:79:18",
													"nodeType": "YulBlock",
													"src": "4180:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:18",
																"nodeType": "YulBlock",
																"src": "4237:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:18"
																			},
																			"nativeSrc": "4239:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:18"
																		},
																		"nativeSrc": "4239:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:18"
																				},
																				"nativeSrc": "4210:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:18"
																		},
																		"nativeSrc": "4200:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:18"
																},
																"nativeSrc": "4193:43:18",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:18"
															},
															"nativeSrc": "4190:63:18",
															"nodeType": "YulIf",
															"src": "4190:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:18",
														"nodeType": "YulTypedName",
														"src": "4173:5:18",
														"type": ""
													}
												],
												"src": "4137:122:18"
											},
											{
												"body": {
													"nativeSrc": "4317:87:18",
													"nodeType": "YulBlock",
													"src": "4317:87:18",
													"statements": [
														{
															"nativeSrc": "4327:29:18",
															"nodeType": "YulAssignment",
															"src": "4327:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:18"
																},
																"nativeSrc": "4336:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:18"
																},
																"nativeSrc": "4365:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:18"
															},
															"nativeSrc": "4365:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:18",
														"nodeType": "YulTypedName",
														"src": "4295:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:18",
														"nodeType": "YulTypedName",
														"src": "4303:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:18",
														"nodeType": "YulTypedName",
														"src": "4311:5:18",
														"type": ""
													}
												],
												"src": "4265:139:18"
											},
											{
												"body": {
													"nativeSrc": "4493:391:18",
													"nodeType": "YulBlock",
													"src": "4493:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:18",
																"nodeType": "YulBlock",
																"src": "4539:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:18"
																			},
																			"nativeSrc": "4541:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:18"
																		},
																		"nativeSrc": "4541:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:18"
																		},
																		"nativeSrc": "4510:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:18"
																},
																"nativeSrc": "4506:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:18"
															},
															"nativeSrc": "4503:119:18",
															"nodeType": "YulIf",
															"src": "4503:119:18"
														},
														{
															"nativeSrc": "4632:117:18",
															"nodeType": "YulBlock",
															"src": "4632:117:18",
															"statements": [
																{
																	"nativeSrc": "4647:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:18"
																				},
																				"nativeSrc": "4707:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:18"
																		},
																		"nativeSrc": "4686:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:18",
															"nodeType": "YulBlock",
															"src": "4759:118:18",
															"statements": [
																{
																	"nativeSrc": "4774:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:18"
																				},
																				"nativeSrc": "4835:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:18"
																		},
																		"nativeSrc": "4814:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:18",
														"nodeType": "YulTypedName",
														"src": "4455:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:18",
														"nodeType": "YulTypedName",
														"src": "4466:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:18",
														"nodeType": "YulTypedName",
														"src": "4478:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:18",
														"nodeType": "YulTypedName",
														"src": "4486:6:18",
														"type": ""
													}
												],
												"src": "4410:474:18"
											},
											{
												"body": {
													"nativeSrc": "4990:519:18",
													"nodeType": "YulBlock",
													"src": "4990:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:18",
																"nodeType": "YulBlock",
																"src": "5036:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:18"
																			},
																			"nativeSrc": "5038:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:18"
																		},
																		"nativeSrc": "5038:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:18"
																		},
																		"nativeSrc": "5007:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:18"
																},
																"nativeSrc": "5003:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:18"
															},
															"nativeSrc": "5000:119:18",
															"nodeType": "YulIf",
															"src": "5000:119:18"
														},
														{
															"nativeSrc": "5129:117:18",
															"nodeType": "YulBlock",
															"src": "5129:117:18",
															"statements": [
																{
																	"nativeSrc": "5144:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:18"
																				},
																				"nativeSrc": "5204:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:18"
																		},
																		"nativeSrc": "5183:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:18",
															"nodeType": "YulBlock",
															"src": "5256:118:18",
															"statements": [
																{
																	"nativeSrc": "5271:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:18"
																				},
																				"nativeSrc": "5332:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:18"
																		},
																		"nativeSrc": "5311:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:18",
															"nodeType": "YulBlock",
															"src": "5384:118:18",
															"statements": [
																{
																	"nativeSrc": "5399:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:18"
																				},
																				"nativeSrc": "5460:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:18"
																		},
																		"nativeSrc": "5439:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:18",
														"nodeType": "YulTypedName",
														"src": "4944:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:18",
														"nodeType": "YulTypedName",
														"src": "4955:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:18",
														"nodeType": "YulTypedName",
														"src": "4967:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:18",
														"nodeType": "YulTypedName",
														"src": "4975:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:18",
														"nodeType": "YulTypedName",
														"src": "4983:6:18",
														"type": ""
													}
												],
												"src": "4890:619:18"
											},
											{
												"body": {
													"nativeSrc": "5581:263:18",
													"nodeType": "YulBlock",
													"src": "5581:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:18",
																"nodeType": "YulBlock",
																"src": "5627:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:18"
																			},
																			"nativeSrc": "5629:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:18"
																		},
																		"nativeSrc": "5629:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:18"
																		},
																		"nativeSrc": "5598:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:18"
																},
																"nativeSrc": "5594:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:18"
															},
															"nativeSrc": "5591:119:18",
															"nodeType": "YulIf",
															"src": "5591:119:18"
														},
														{
															"nativeSrc": "5720:117:18",
															"nodeType": "YulBlock",
															"src": "5720:117:18",
															"statements": [
																{
																	"nativeSrc": "5735:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:18"
																				},
																				"nativeSrc": "5795:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:18"
																		},
																		"nativeSrc": "5774:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:18",
														"nodeType": "YulTypedName",
														"src": "5551:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:18",
														"nodeType": "YulTypedName",
														"src": "5562:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:18",
														"nodeType": "YulTypedName",
														"src": "5574:6:18",
														"type": ""
													}
												],
												"src": "5515:329:18"
											},
											{
												"body": {
													"nativeSrc": "5915:53:18",
													"nodeType": "YulBlock",
													"src": "5915:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:18"
																		},
																		"nativeSrc": "5937:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:18"
																},
																"nativeSrc": "5925:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:18"
															},
															"nativeSrc": "5925:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:18",
														"nodeType": "YulTypedName",
														"src": "5903:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:18",
														"nodeType": "YulTypedName",
														"src": "5910:3:18",
														"type": ""
													}
												],
												"src": "5850:118:18"
											},
											{
												"body": {
													"nativeSrc": "6072:124:18",
													"nodeType": "YulBlock",
													"src": "6072:124:18",
													"statements": [
														{
															"nativeSrc": "6082:26:18",
															"nodeType": "YulAssignment",
															"src": "6082:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:18"
																},
																"nativeSrc": "6090:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:18"
																		},
																		"nativeSrc": "6171:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:18"
																},
																"nativeSrc": "6118:71:18",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:18"
															},
															"nativeSrc": "6118:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:18",
														"nodeType": "YulTypedName",
														"src": "6044:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:18",
														"nodeType": "YulTypedName",
														"src": "6056:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:18",
														"nodeType": "YulTypedName",
														"src": "6067:4:18",
														"type": ""
													}
												],
												"src": "5974:222:18"
											},
											{
												"body": {
													"nativeSrc": "6291:28:18",
													"nodeType": "YulBlock",
													"src": "6291:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6308:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6308:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6311:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6311:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6301:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:18"
																},
																"nativeSrc": "6301:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6301:12:18"
															},
															"nativeSrc": "6301:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6301:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6202:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6202:117:18"
											},
											{
												"body": {
													"nativeSrc": "6414:28:18",
													"nodeType": "YulBlock",
													"src": "6414:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6431:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6431:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6434:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6434:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6424:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:18"
																},
																"nativeSrc": "6424:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6424:12:18"
															},
															"nativeSrc": "6424:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6424:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6325:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6325:117:18"
											},
											{
												"body": {
													"nativeSrc": "6476:152:18",
													"nodeType": "YulBlock",
													"src": "6476:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6493:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6493:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6496:77:18",
																		"nodeType": "YulLiteral",
																		"src": "6496:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6486:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6486:6:18"
																},
																"nativeSrc": "6486:88:18",
																"nodeType": "YulFunctionCall",
																"src": "6486:88:18"
															},
															"nativeSrc": "6486:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "6486:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6590:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6590:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6593:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6593:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6583:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:18"
																},
																"nativeSrc": "6583:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6583:15:18"
															},
															"nativeSrc": "6583:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6583:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6614:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6614:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6617:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6617:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6607:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:18"
																},
																"nativeSrc": "6607:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6607:15:18"
															},
															"nativeSrc": "6607:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6607:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6448:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6448:180:18"
											},
											{
												"body": {
													"nativeSrc": "6677:238:18",
													"nodeType": "YulBlock",
													"src": "6677:238:18",
													"statements": [
														{
															"nativeSrc": "6687:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6687:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6709:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6739:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6739:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6717:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "6717:21:18"
																		},
																		"nativeSrc": "6717:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6717:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6705:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6705:3:18"
																},
																"nativeSrc": "6705:40:18",
																"nodeType": "YulFunctionCall",
																"src": "6705:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6691:10:18",
																	"nodeType": "YulTypedName",
																	"src": "6691:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6856:22:18",
																"nodeType": "YulBlock",
																"src": "6856:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6858:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6858:16:18"
																			},
																			"nativeSrc": "6858:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6858:18:18"
																		},
																		"nativeSrc": "6858:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6858:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6799:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6799:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6811:18:18",
																				"nodeType": "YulLiteral",
																				"src": "6811:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6796:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6796:2:18"
																		},
																		"nativeSrc": "6796:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6796:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6835:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6835:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6847:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6847:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6832:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6832:2:18"
																		},
																		"nativeSrc": "6832:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6793:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6793:2:18"
																},
																"nativeSrc": "6793:62:18",
																"nodeType": "YulFunctionCall",
																"src": "6793:62:18"
															},
															"nativeSrc": "6790:88:18",
															"nodeType": "YulIf",
															"src": "6790:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6894:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6894:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6898:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "6898:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:18"
																},
																"nativeSrc": "6887:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6887:22:18"
															},
															"nativeSrc": "6887:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "6887:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6634:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6663:6:18",
														"nodeType": "YulTypedName",
														"src": "6663:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6671:4:18",
														"nodeType": "YulTypedName",
														"src": "6671:4:18",
														"type": ""
													}
												],
												"src": "6634:281:18"
											},
											{
												"body": {
													"nativeSrc": "6962:88:18",
													"nodeType": "YulBlock",
													"src": "6962:88:18",
													"statements": [
														{
															"nativeSrc": "6972:30:18",
															"nodeType": "YulAssignment",
															"src": "6972:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6982:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6982:18:18"
																},
																"nativeSrc": "6982:20:18",
																"nodeType": "YulFunctionCall",
																"src": "6982:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6972:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6972:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7031:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7031:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7039:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7039:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7011:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "7011:19:18"
																},
																"nativeSrc": "7011:33:18",
																"nodeType": "YulFunctionCall",
																"src": "7011:33:18"
															},
															"nativeSrc": "7011:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "7011:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6921:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6946:4:18",
														"nodeType": "YulTypedName",
														"src": "6946:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6955:6:18",
														"nodeType": "YulTypedName",
														"src": "6955:6:18",
														"type": ""
													}
												],
												"src": "6921:129:18"
											},
											{
												"body": {
													"nativeSrc": "7123:241:18",
													"nodeType": "YulBlock",
													"src": "7123:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7228:22:18",
																"nodeType": "YulBlock",
																"src": "7228:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7230:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7230:16:18"
																			},
																			"nativeSrc": "7230:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7230:18:18"
																		},
																		"nativeSrc": "7230:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7230:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7200:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7200:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7208:18:18",
																		"nodeType": "YulLiteral",
																		"src": "7208:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7197:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7197:2:18"
																},
																"nativeSrc": "7197:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7197:30:18"
															},
															"nativeSrc": "7194:56:18",
															"nodeType": "YulIf",
															"src": "7194:56:18"
														},
														{
															"nativeSrc": "7260:37:18",
															"nodeType": "YulAssignment",
															"src": "7260:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7290:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7290:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7268:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "7268:21:18"
																},
																"nativeSrc": "7268:29:18",
																"nodeType": "YulFunctionCall",
																"src": "7268:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7260:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7260:4:18"
																}
															]
														},
														{
															"nativeSrc": "7334:23:18",
															"nodeType": "YulAssignment",
															"src": "7334:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7346:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7346:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7342:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:18"
																},
																"nativeSrc": "7342:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7334:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7334:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7056:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7107:6:18",
														"nodeType": "YulTypedName",
														"src": "7107:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7118:4:18",
														"nodeType": "YulTypedName",
														"src": "7118:4:18",
														"type": ""
													}
												],
												"src": "7056:308:18"
											},
											{
												"body": {
													"nativeSrc": "7434:82:18",
													"nodeType": "YulBlock",
													"src": "7434:82:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7457:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7462:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7462:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7467:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7467:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7444:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7444:12:18"
																},
																"nativeSrc": "7444:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7444:30:18"
															},
															"nativeSrc": "7444:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7444:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7494:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7494:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7499:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7499:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7490:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7490:3:18"
																		},
																		"nativeSrc": "7490:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7490:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7508:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7508:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7483:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:18"
																},
																"nativeSrc": "7483:27:18",
																"nodeType": "YulFunctionCall",
																"src": "7483:27:18"
															},
															"nativeSrc": "7483:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "7483:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7370:146:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7416:3:18",
														"nodeType": "YulTypedName",
														"src": "7416:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7421:3:18",
														"nodeType": "YulTypedName",
														"src": "7421:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7426:6:18",
														"nodeType": "YulTypedName",
														"src": "7426:6:18",
														"type": ""
													}
												],
												"src": "7370:146:18"
											},
											{
												"body": {
													"nativeSrc": "7606:341:18",
													"nodeType": "YulBlock",
													"src": "7606:341:18",
													"statements": [
														{
															"nativeSrc": "7616:75:18",
															"nodeType": "YulAssignment",
															"src": "7616:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7683:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7683:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7641:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "7641:41:18"
																		},
																		"nativeSrc": "7641:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7641:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7625:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "7625:15:18"
																},
																"nativeSrc": "7625:66:18",
																"nodeType": "YulFunctionCall",
																"src": "7625:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7616:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7616:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7707:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7707:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7714:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7714:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7700:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7700:6:18"
																},
																"nativeSrc": "7700:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7700:21:18"
															},
															"nativeSrc": "7700:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7700:21:18"
														},
														{
															"nativeSrc": "7730:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7730:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7745:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7745:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7752:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7752:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7741:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7741:3:18"
																},
																"nativeSrc": "7741:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7741:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7734:3:18",
																	"nodeType": "YulTypedName",
																	"src": "7734:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7795:83:18",
																"nodeType": "YulBlock",
																"src": "7795:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7797:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7797:77:18"
																			},
																			"nativeSrc": "7797:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7797:79:18"
																		},
																		"nativeSrc": "7797:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7797:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7776:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7776:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7781:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7781:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7772:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:18"
																		},
																		"nativeSrc": "7772:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7772:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7790:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7790:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7769:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7769:2:18"
																},
																"nativeSrc": "7769:25:18",
																"nodeType": "YulFunctionCall",
																"src": "7769:25:18"
															},
															"nativeSrc": "7766:112:18",
															"nodeType": "YulIf",
															"src": "7766:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7924:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7924:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7929:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7887:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "7887:36:18"
																},
																"nativeSrc": "7887:54:18",
																"nodeType": "YulFunctionCall",
																"src": "7887:54:18"
															},
															"nativeSrc": "7887:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "7887:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7522:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7579:3:18",
														"nodeType": "YulTypedName",
														"src": "7579:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7584:6:18",
														"nodeType": "YulTypedName",
														"src": "7584:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7592:3:18",
														"nodeType": "YulTypedName",
														"src": "7592:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7600:5:18",
														"nodeType": "YulTypedName",
														"src": "7600:5:18",
														"type": ""
													}
												],
												"src": "7522:425:18"
											},
											{
												"body": {
													"nativeSrc": "8029:278:18",
													"nodeType": "YulBlock",
													"src": "8029:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8078:83:18",
																"nodeType": "YulBlock",
																"src": "8078:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8080:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8080:77:18"
																			},
																			"nativeSrc": "8080:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8080:79:18"
																		},
																		"nativeSrc": "8080:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8080:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8057:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8057:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8065:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8065:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8053:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8053:3:18"
																				},
																				"nativeSrc": "8053:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8053:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8072:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8072:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8049:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:18"
																		},
																		"nativeSrc": "8049:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8049:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8042:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:18"
																},
																"nativeSrc": "8042:35:18",
																"nodeType": "YulFunctionCall",
																"src": "8042:35:18"
															},
															"nativeSrc": "8039:122:18",
															"nodeType": "YulIf",
															"src": "8039:122:18"
														},
														{
															"nativeSrc": "8170:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8170:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8197:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8197:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8184:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8184:12:18"
																},
																"nativeSrc": "8184:20:18",
																"nodeType": "YulFunctionCall",
																"src": "8184:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8174:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8174:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8213:88:18",
															"nodeType": "YulAssignment",
															"src": "8213:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8274:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8274:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8282:4:18",
																				"nodeType": "YulLiteral",
																				"src": "8282:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8270:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8270:3:18"
																		},
																		"nativeSrc": "8270:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8289:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8289:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8297:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8297:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8222:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "8222:47:18"
																},
																"nativeSrc": "8222:79:18",
																"nodeType": "YulFunctionCall",
																"src": "8222:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8213:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8213:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7967:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8007:6:18",
														"nodeType": "YulTypedName",
														"src": "8007:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8015:3:18",
														"nodeType": "YulTypedName",
														"src": "8015:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8023:5:18",
														"nodeType": "YulTypedName",
														"src": "8023:5:18",
														"type": ""
													}
												],
												"src": "7967:340:18"
											},
											{
												"body": {
													"nativeSrc": "8389:433:18",
													"nodeType": "YulBlock",
													"src": "8389:433:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8435:83:18",
																"nodeType": "YulBlock",
																"src": "8435:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8437:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8437:77:18"
																			},
																			"nativeSrc": "8437:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8437:79:18"
																		},
																		"nativeSrc": "8437:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8437:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8410:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8410:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8419:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8406:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8406:3:18"
																		},
																		"nativeSrc": "8406:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8406:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8431:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8431:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8402:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:18"
																},
																"nativeSrc": "8402:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8402:32:18"
															},
															"nativeSrc": "8399:119:18",
															"nodeType": "YulIf",
															"src": "8399:119:18"
														},
														{
															"nativeSrc": "8528:287:18",
															"nodeType": "YulBlock",
															"src": "8528:287:18",
															"statements": [
																{
																	"nativeSrc": "8543:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8543:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8574:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8574:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8585:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8585:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8570:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8570:3:18"
																				},
																				"nativeSrc": "8570:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8570:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8557:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "8557:12:18"
																		},
																		"nativeSrc": "8557:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8557:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8547:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8547:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8635:83:18",
																		"nodeType": "YulBlock",
																		"src": "8635:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8637:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "8637:77:18"
																					},
																					"nativeSrc": "8637:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8637:79:18"
																				},
																				"nativeSrc": "8637:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "8637:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8607:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8607:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8615:18:18",
																				"nodeType": "YulLiteral",
																				"src": "8615:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8604:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8604:2:18"
																		},
																		"nativeSrc": "8604:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8604:30:18"
																	},
																	"nativeSrc": "8601:117:18",
																	"nodeType": "YulIf",
																	"src": "8601:117:18"
																},
																{
																	"nativeSrc": "8732:73:18",
																	"nodeType": "YulAssignment",
																	"src": "8732:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8777:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8777:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8788:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8788:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8773:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8773:3:18"
																				},
																				"nativeSrc": "8773:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8773:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8797:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8797:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8742:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "8742:30:18"
																		},
																		"nativeSrc": "8742:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8742:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8732:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8732:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "8313:509:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8359:9:18",
														"nodeType": "YulTypedName",
														"src": "8359:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8370:7:18",
														"nodeType": "YulTypedName",
														"src": "8370:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8382:6:18",
														"nodeType": "YulTypedName",
														"src": "8382:6:18",
														"type": ""
													}
												],
												"src": "8313:509:18"
											},
											{
												"body": {
													"nativeSrc": "8868:76:18",
													"nodeType": "YulBlock",
													"src": "8868:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8922:16:18",
																"nodeType": "YulBlock",
																"src": "8922:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8931:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8931:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8934:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8934:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8924:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8924:6:18"
																			},
																			"nativeSrc": "8924:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8924:12:18"
																		},
																		"nativeSrc": "8924:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8924:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8891:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8891:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8913:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "8913:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8898:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "8898:14:18"
																				},
																				"nativeSrc": "8898:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8898:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8888:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8888:2:18"
																		},
																		"nativeSrc": "8888:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8881:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:18"
																},
																"nativeSrc": "8881:40:18",
																"nodeType": "YulFunctionCall",
																"src": "8881:40:18"
															},
															"nativeSrc": "8878:60:18",
															"nodeType": "YulIf",
															"src": "8878:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8828:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8861:5:18",
														"nodeType": "YulTypedName",
														"src": "8861:5:18",
														"type": ""
													}
												],
												"src": "8828:116:18"
											},
											{
												"body": {
													"nativeSrc": "8999:84:18",
													"nodeType": "YulBlock",
													"src": "8999:84:18",
													"statements": [
														{
															"nativeSrc": "9009:29:18",
															"nodeType": "YulAssignment",
															"src": "9009:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9031:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9031:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9018:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9018:12:18"
																},
																"nativeSrc": "9018:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9018:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9009:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9009:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9071:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9071:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9047:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "9047:23:18"
																},
																"nativeSrc": "9047:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9047:30:18"
															},
															"nativeSrc": "9047:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9047:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8950:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8977:6:18",
														"nodeType": "YulTypedName",
														"src": "8977:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8985:3:18",
														"nodeType": "YulTypedName",
														"src": "8985:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8993:5:18",
														"nodeType": "YulTypedName",
														"src": "8993:5:18",
														"type": ""
													}
												],
												"src": "8950:133:18"
											},
											{
												"body": {
													"nativeSrc": "9169:388:18",
													"nodeType": "YulBlock",
													"src": "9169:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:18",
																"nodeType": "YulBlock",
																"src": "9215:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:18"
																			},
																			"nativeSrc": "9217:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:18"
																		},
																		"nativeSrc": "9217:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9190:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9190:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9199:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9199:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9186:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9186:3:18"
																		},
																		"nativeSrc": "9186:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9186:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9211:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9182:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9182:3:18"
																},
																"nativeSrc": "9182:32:18",
																"nodeType": "YulFunctionCall",
																"src": "9182:32:18"
															},
															"nativeSrc": "9179:119:18",
															"nodeType": "YulIf",
															"src": "9179:119:18"
														},
														{
															"nativeSrc": "9308:117:18",
															"nodeType": "YulBlock",
															"src": "9308:117:18",
															"statements": [
																{
																	"nativeSrc": "9323:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:18"
																				},
																				"nativeSrc": "9383:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:18"
																		},
																		"nativeSrc": "9362:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:115:18",
															"nodeType": "YulBlock",
															"src": "9435:115:18",
															"statements": [
																{
																	"nativeSrc": "9450:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:60:18",
																	"nodeType": "YulAssignment",
																	"src": "9480:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9512:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9512:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9523:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9523:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9508:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9508:3:18"
																				},
																				"nativeSrc": "9508:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9508:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9532:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9532:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9490:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "9490:17:18"
																		},
																		"nativeSrc": "9490:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9089:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9131:9:18",
														"nodeType": "YulTypedName",
														"src": "9131:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9142:7:18",
														"nodeType": "YulTypedName",
														"src": "9142:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9154:6:18",
														"nodeType": "YulTypedName",
														"src": "9154:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9162:6:18",
														"nodeType": "YulTypedName",
														"src": "9162:6:18",
														"type": ""
													}
												],
												"src": "9089:468:18"
											},
											{
												"body": {
													"nativeSrc": "9629:241:18",
													"nodeType": "YulBlock",
													"src": "9629:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9734:22:18",
																"nodeType": "YulBlock",
																"src": "9734:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9736:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9736:16:18"
																			},
																			"nativeSrc": "9736:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9736:18:18"
																		},
																		"nativeSrc": "9736:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9736:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9706:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9706:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9714:18:18",
																		"nodeType": "YulLiteral",
																		"src": "9714:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9703:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9703:2:18"
																},
																"nativeSrc": "9703:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9703:30:18"
															},
															"nativeSrc": "9700:56:18",
															"nodeType": "YulIf",
															"src": "9700:56:18"
														},
														{
															"nativeSrc": "9766:37:18",
															"nodeType": "YulAssignment",
															"src": "9766:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9796:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9796:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9774:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "9774:21:18"
																},
																"nativeSrc": "9774:29:18",
																"nodeType": "YulFunctionCall",
																"src": "9774:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9766:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9766:4:18"
																}
															]
														},
														{
															"nativeSrc": "9840:23:18",
															"nodeType": "YulAssignment",
															"src": "9840:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9852:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "9852:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9858:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9848:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:18"
																},
																"nativeSrc": "9848:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9848:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9840:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9840:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9563:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9613:6:18",
														"nodeType": "YulTypedName",
														"src": "9613:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9624:4:18",
														"nodeType": "YulTypedName",
														"src": "9624:4:18",
														"type": ""
													}
												],
												"src": "9563:307:18"
											},
											{
												"body": {
													"nativeSrc": "9959:340:18",
													"nodeType": "YulBlock",
													"src": "9959:340:18",
													"statements": [
														{
															"nativeSrc": "9969:74:18",
															"nodeType": "YulAssignment",
															"src": "9969:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10035:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10035:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9994:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "9994:40:18"
																		},
																		"nativeSrc": "9994:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9994:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9978:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "9978:15:18"
																},
																"nativeSrc": "9978:65:18",
																"nodeType": "YulFunctionCall",
																"src": "9978:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9969:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9969:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10059:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10059:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10066:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10066:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10052:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:18"
																},
																"nativeSrc": "10052:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10052:21:18"
															},
															"nativeSrc": "10052:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10052:21:18"
														},
														{
															"nativeSrc": "10082:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10082:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10097:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10097:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10104:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10104:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10093:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:18"
																},
																"nativeSrc": "10093:16:18",
																"nodeType": "YulFunctionCall",
																"src": "10093:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10086:3:18",
																	"nodeType": "YulTypedName",
																	"src": "10086:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10147:83:18",
																"nodeType": "YulBlock",
																"src": "10147:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10149:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10149:77:18"
																			},
																			"nativeSrc": "10149:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10149:79:18"
																		},
																		"nativeSrc": "10149:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10149:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10128:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10128:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10133:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10133:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10124:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10124:3:18"
																		},
																		"nativeSrc": "10124:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10124:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10142:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10142:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10121:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10121:2:18"
																},
																"nativeSrc": "10121:25:18",
																"nodeType": "YulFunctionCall",
																"src": "10121:25:18"
															},
															"nativeSrc": "10118:112:18",
															"nodeType": "YulIf",
															"src": "10118:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10276:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10276:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10281:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10281:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10286:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10286:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10239:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "10239:36:18"
																},
																"nativeSrc": "10239:54:18",
																"nodeType": "YulFunctionCall",
																"src": "10239:54:18"
															},
															"nativeSrc": "10239:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "10239:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9876:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9932:3:18",
														"nodeType": "YulTypedName",
														"src": "9932:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9937:6:18",
														"nodeType": "YulTypedName",
														"src": "9937:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9945:3:18",
														"nodeType": "YulTypedName",
														"src": "9945:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9953:5:18",
														"nodeType": "YulTypedName",
														"src": "9953:5:18",
														"type": ""
													}
												],
												"src": "9876:423:18"
											},
											{
												"body": {
													"nativeSrc": "10379:277:18",
													"nodeType": "YulBlock",
													"src": "10379:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10428:83:18",
																"nodeType": "YulBlock",
																"src": "10428:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10430:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10430:77:18"
																			},
																			"nativeSrc": "10430:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10430:79:18"
																		},
																		"nativeSrc": "10430:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10430:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10407:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10407:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10415:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10415:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10403:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10403:3:18"
																				},
																				"nativeSrc": "10403:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10403:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10422:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10422:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10399:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10399:3:18"
																		},
																		"nativeSrc": "10399:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10399:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10392:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:18"
																},
																"nativeSrc": "10392:35:18",
																"nodeType": "YulFunctionCall",
																"src": "10392:35:18"
															},
															"nativeSrc": "10389:122:18",
															"nodeType": "YulIf",
															"src": "10389:122:18"
														},
														{
															"nativeSrc": "10520:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10520:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10547:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10547:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10534:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10534:12:18"
																},
																"nativeSrc": "10534:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10534:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10524:6:18",
																	"nodeType": "YulTypedName",
																	"src": "10524:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10563:87:18",
															"nodeType": "YulAssignment",
															"src": "10563:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10623:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10631:4:18",
																				"nodeType": "YulLiteral",
																				"src": "10631:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10619:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:18"
																		},
																		"nativeSrc": "10619:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10638:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10638:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10646:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10646:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10572:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "10572:46:18"
																},
																"nativeSrc": "10572:78:18",
																"nodeType": "YulFunctionCall",
																"src": "10572:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10563:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10563:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10318:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10357:6:18",
														"nodeType": "YulTypedName",
														"src": "10357:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10365:3:18",
														"nodeType": "YulTypedName",
														"src": "10365:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10373:5:18",
														"nodeType": "YulTypedName",
														"src": "10373:5:18",
														"type": ""
													}
												],
												"src": "10318:338:18"
											},
											{
												"body": {
													"nativeSrc": "10788:817:18",
													"nodeType": "YulBlock",
													"src": "10788:817:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10835:83:18",
																"nodeType": "YulBlock",
																"src": "10835:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10837:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10837:77:18"
																			},
																			"nativeSrc": "10837:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10837:79:18"
																		},
																		"nativeSrc": "10837:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10837:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10809:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10809:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10805:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10805:3:18"
																		},
																		"nativeSrc": "10805:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10805:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10830:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10830:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10801:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10801:3:18"
																},
																"nativeSrc": "10801:33:18",
																"nodeType": "YulFunctionCall",
																"src": "10801:33:18"
															},
															"nativeSrc": "10798:120:18",
															"nodeType": "YulIf",
															"src": "10798:120:18"
														},
														{
															"nativeSrc": "10928:117:18",
															"nodeType": "YulBlock",
															"src": "10928:117:18",
															"statements": [
																{
																	"nativeSrc": "10943:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10943:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10957:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10957:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10947:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10947:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10972:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10972:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11007:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11007:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11018:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11018:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11003:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11003:3:18"
																				},
																				"nativeSrc": "11003:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11003:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11027:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11027:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10982:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10982:20:18"
																		},
																		"nativeSrc": "10982:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10982:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10972:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10972:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11055:118:18",
															"nodeType": "YulBlock",
															"src": "11055:118:18",
															"statements": [
																{
																	"nativeSrc": "11070:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11070:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11084:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11084:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11074:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11074:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11100:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11100:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11135:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11135:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11146:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11146:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11131:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11131:3:18"
																				},
																				"nativeSrc": "11131:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11131:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11155:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11155:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11110:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11110:20:18"
																		},
																		"nativeSrc": "11110:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11100:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11100:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11183:118:18",
															"nodeType": "YulBlock",
															"src": "11183:118:18",
															"statements": [
																{
																	"nativeSrc": "11198:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11198:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11212:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11202:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11202:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11228:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11228:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11263:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11263:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11274:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11274:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11259:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11259:3:18"
																				},
																				"nativeSrc": "11259:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11259:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11283:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11283:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11238:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11238:20:18"
																		},
																		"nativeSrc": "11238:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11228:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11228:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11311:287:18",
															"nodeType": "YulBlock",
															"src": "11311:287:18",
															"statements": [
																{
																	"nativeSrc": "11326:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11357:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11357:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11368:2:18",
																						"nodeType": "YulLiteral",
																						"src": "11368:2:18",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11353:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11353:3:18"
																				},
																				"nativeSrc": "11353:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11353:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11340:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "11340:12:18"
																		},
																		"nativeSrc": "11340:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11340:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11419:83:18",
																		"nodeType": "YulBlock",
																		"src": "11419:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11421:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "11421:77:18"
																					},
																					"nativeSrc": "11421:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11421:79:18"
																				},
																				"nativeSrc": "11421:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11421:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11391:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11391:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11399:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11399:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11388:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11388:2:18"
																		},
																		"nativeSrc": "11388:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11388:30:18"
																	},
																	"nativeSrc": "11385:117:18",
																	"nodeType": "YulIf",
																	"src": "11385:117:18"
																},
																{
																	"nativeSrc": "11516:72:18",
																	"nodeType": "YulAssignment",
																	"src": "11516:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11560:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11560:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11571:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11571:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11556:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11556:3:18"
																				},
																				"nativeSrc": "11556:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11580:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11580:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11526:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "11526:29:18"
																		},
																		"nativeSrc": "11526:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11526:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11516:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11516:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10662:943:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10734:9:18",
														"nodeType": "YulTypedName",
														"src": "10734:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10745:7:18",
														"nodeType": "YulTypedName",
														"src": "10745:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10757:6:18",
														"nodeType": "YulTypedName",
														"src": "10757:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10765:6:18",
														"nodeType": "YulTypedName",
														"src": "10765:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10773:6:18",
														"nodeType": "YulTypedName",
														"src": "10773:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10781:6:18",
														"nodeType": "YulTypedName",
														"src": "10781:6:18",
														"type": ""
													}
												],
												"src": "10662:943:18"
											},
											{
												"body": {
													"nativeSrc": "11751:271:18",
													"nodeType": "YulBlock",
													"src": "11751:271:18",
													"statements": [
														{
															"nativeSrc": "11761:26:18",
															"nodeType": "YulAssignment",
															"src": "11761:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11773:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11773:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11784:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11784:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11769:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11769:3:18"
																},
																"nativeSrc": "11769:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11769:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11761:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11761:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11808:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11808:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11819:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11819:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11804:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:18"
																		},
																		"nativeSrc": "11804:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11804:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11827:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "11827:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11833:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11833:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11823:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11823:3:18"
																		},
																		"nativeSrc": "11823:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11823:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11797:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:18"
																},
																"nativeSrc": "11797:47:18",
																"nodeType": "YulFunctionCall",
																"src": "11797:47:18"
															},
															"nativeSrc": "11797:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "11797:47:18"
														},
														{
															"nativeSrc": "11853:86:18",
															"nodeType": "YulAssignment",
															"src": "11853:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11925:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11925:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11934:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11934:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11861:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "11861:63:18"
																},
																"nativeSrc": "11861:78:18",
																"nodeType": "YulFunctionCall",
																"src": "11861:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11853:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11853:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11987:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11987:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12000:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12000:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12011:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12011:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11996:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11996:3:18"
																		},
																		"nativeSrc": "11996:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11996:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "11949:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "11949:37:18"
																},
																"nativeSrc": "11949:66:18",
																"nodeType": "YulFunctionCall",
																"src": "11949:66:18"
															},
															"nativeSrc": "11949:66:18",
															"nodeType": "YulExpressionStatement",
															"src": "11949:66:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed",
												"nativeSrc": "11611:411:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11715:9:18",
														"nodeType": "YulTypedName",
														"src": "11715:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11727:6:18",
														"nodeType": "YulTypedName",
														"src": "11727:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11735:6:18",
														"nodeType": "YulTypedName",
														"src": "11735:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11746:4:18",
														"nodeType": "YulTypedName",
														"src": "11746:4:18",
														"type": ""
													}
												],
												"src": "11611:411:18"
											},
											{
												"body": {
													"nativeSrc": "12111:391:18",
													"nodeType": "YulBlock",
													"src": "12111:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12157:83:18",
																"nodeType": "YulBlock",
																"src": "12157:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12159:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12159:77:18"
																			},
																			"nativeSrc": "12159:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12159:79:18"
																		},
																		"nativeSrc": "12159:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12159:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12132:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12132:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12141:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12141:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12128:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:18"
																		},
																		"nativeSrc": "12128:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12128:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12153:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12153:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12124:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12124:3:18"
																},
																"nativeSrc": "12124:32:18",
																"nodeType": "YulFunctionCall",
																"src": "12124:32:18"
															},
															"nativeSrc": "12121:119:18",
															"nodeType": "YulIf",
															"src": "12121:119:18"
														},
														{
															"nativeSrc": "12250:117:18",
															"nodeType": "YulBlock",
															"src": "12250:117:18",
															"statements": [
																{
																	"nativeSrc": "12265:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12265:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12279:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12279:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12269:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12269:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12294:63:18",
																	"nodeType": "YulAssignment",
																	"src": "12294:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12329:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12329:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12340:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12340:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12325:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12325:3:18"
																				},
																				"nativeSrc": "12325:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12325:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12349:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12349:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12304:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "12304:20:18"
																		},
																		"nativeSrc": "12304:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12304:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12294:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12294:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12377:118:18",
															"nodeType": "YulBlock",
															"src": "12377:118:18",
															"statements": [
																{
																	"nativeSrc": "12392:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12392:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12406:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12406:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12396:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12396:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12422:63:18",
																	"nodeType": "YulAssignment",
																	"src": "12422:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12457:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12457:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12468:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12468:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12453:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12453:3:18"
																				},
																				"nativeSrc": "12453:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12453:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12477:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12477:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12432:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "12432:20:18"
																		},
																		"nativeSrc": "12432:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12432:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12422:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12422:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12028:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12073:9:18",
														"nodeType": "YulTypedName",
														"src": "12073:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12084:7:18",
														"nodeType": "YulTypedName",
														"src": "12084:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12096:6:18",
														"nodeType": "YulTypedName",
														"src": "12096:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12104:6:18",
														"nodeType": "YulTypedName",
														"src": "12104:6:18",
														"type": ""
													}
												],
												"src": "12028:474:18"
											},
											{
												"body": {
													"nativeSrc": "12536:152:18",
													"nodeType": "YulBlock",
													"src": "12536:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12553:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12553:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12556:77:18",
																		"nodeType": "YulLiteral",
																		"src": "12556:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12546:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12546:6:18"
																},
																"nativeSrc": "12546:88:18",
																"nodeType": "YulFunctionCall",
																"src": "12546:88:18"
															},
															"nativeSrc": "12546:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "12546:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12650:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12650:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12653:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12653:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12643:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12643:6:18"
																},
																"nativeSrc": "12643:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12643:15:18"
															},
															"nativeSrc": "12643:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "12643:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12674:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12674:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12677:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12677:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12667:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12667:6:18"
																},
																"nativeSrc": "12667:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12667:15:18"
															},
															"nativeSrc": "12667:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "12667:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12508:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "12508:180:18"
											},
											{
												"body": {
													"nativeSrc": "12745:269:18",
													"nodeType": "YulBlock",
													"src": "12745:269:18",
													"statements": [
														{
															"nativeSrc": "12755:22:18",
															"nodeType": "YulAssignment",
															"src": "12755:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12769:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12769:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12775:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12775:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12765:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12765:3:18"
																},
																"nativeSrc": "12765:12:18",
																"nodeType": "YulFunctionCall",
																"src": "12765:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12755:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12755:6:18"
																}
															]
														},
														{
															"nativeSrc": "12786:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12786:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12816:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12816:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12822:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12822:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12812:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12812:3:18"
																},
																"nativeSrc": "12812:12:18",
																"nodeType": "YulFunctionCall",
																"src": "12812:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12790:18:18",
																	"nodeType": "YulTypedName",
																	"src": "12790:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12863:51:18",
																"nodeType": "YulBlock",
																"src": "12863:51:18",
																"statements": [
																	{
																		"nativeSrc": "12877:27:18",
																		"nodeType": "YulAssignment",
																		"src": "12877:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12891:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "12891:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12899:4:18",
																					"nodeType": "YulLiteral",
																					"src": "12899:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12887:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12887:3:18"
																			},
																			"nativeSrc": "12887:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12887:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12877:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12877:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12843:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "12843:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12836:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12836:6:18"
																},
																"nativeSrc": "12836:26:18",
																"nodeType": "YulFunctionCall",
																"src": "12836:26:18"
															},
															"nativeSrc": "12833:81:18",
															"nodeType": "YulIf",
															"src": "12833:81:18"
														},
														{
															"body": {
																"nativeSrc": "12966:42:18",
																"nodeType": "YulBlock",
																"src": "12966:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12980:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "12980:16:18"
																			},
																			"nativeSrc": "12980:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12980:18:18"
																		},
																		"nativeSrc": "12980:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12980:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12930:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "12930:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12953:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12961:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12961:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12950:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "12950:2:18"
																		},
																		"nativeSrc": "12950:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12950:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12927:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12927:2:18"
																},
																"nativeSrc": "12927:38:18",
																"nodeType": "YulFunctionCall",
																"src": "12927:38:18"
															},
															"nativeSrc": "12924:84:18",
															"nodeType": "YulIf",
															"src": "12924:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12694:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12729:4:18",
														"nodeType": "YulTypedName",
														"src": "12729:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12738:6:18",
														"nodeType": "YulTypedName",
														"src": "12738:6:18",
														"type": ""
													}
												],
												"src": "12694:320:18"
											},
											{
												"body": {
													"nativeSrc": "13174:288:18",
													"nodeType": "YulBlock",
													"src": "13174:288:18",
													"statements": [
														{
															"nativeSrc": "13184:26:18",
															"nodeType": "YulAssignment",
															"src": "13184:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13196:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13196:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13207:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13207:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13192:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13192:3:18"
																},
																"nativeSrc": "13192:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13192:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13184:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13184:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13264:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13264:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13277:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13277:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13288:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13288:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13273:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13273:3:18"
																		},
																		"nativeSrc": "13273:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13273:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13220:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13220:43:18"
																},
																"nativeSrc": "13220:71:18",
																"nodeType": "YulFunctionCall",
																"src": "13220:71:18"
															},
															"nativeSrc": "13220:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "13220:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13345:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13345:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13358:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13358:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13369:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13369:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13354:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13354:3:18"
																		},
																		"nativeSrc": "13354:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13354:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13301:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13301:43:18"
																},
																"nativeSrc": "13301:72:18",
																"nodeType": "YulFunctionCall",
																"src": "13301:72:18"
															},
															"nativeSrc": "13301:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "13301:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13427:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13427:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13440:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13440:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13451:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13451:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13436:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13436:3:18"
																		},
																		"nativeSrc": "13436:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13436:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13383:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13383:43:18"
																},
																"nativeSrc": "13383:72:18",
																"nodeType": "YulFunctionCall",
																"src": "13383:72:18"
															},
															"nativeSrc": "13383:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "13383:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13020:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13130:9:18",
														"nodeType": "YulTypedName",
														"src": "13130:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13142:6:18",
														"nodeType": "YulTypedName",
														"src": "13142:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13150:6:18",
														"nodeType": "YulTypedName",
														"src": "13150:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13158:6:18",
														"nodeType": "YulTypedName",
														"src": "13158:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13169:4:18",
														"nodeType": "YulTypedName",
														"src": "13169:4:18",
														"type": ""
													}
												],
												"src": "13020:442:18"
											},
											{
												"body": {
													"nativeSrc": "13574:68:18",
													"nodeType": "YulBlock",
													"src": "13574:68:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13596:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13596:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13604:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13604:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13592:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13592:3:18"
																		},
																		"nativeSrc": "13592:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13592:14:18"
																	},
																	{
																		"hexValue": "4d696e74696e67206e6f7420617070726f76656420796574",
																		"kind": "string",
																		"nativeSrc": "13608:26:18",
																		"nodeType": "YulLiteral",
																		"src": "13608:26:18",
																		"type": "",
																		"value": "Minting not approved yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13585:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:18"
																},
																"nativeSrc": "13585:50:18",
																"nodeType": "YulFunctionCall",
																"src": "13585:50:18"
															},
															"nativeSrc": "13585:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "13585:50:18"
														}
													]
												},
												"name": "store_literal_in_memory_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4",
												"nativeSrc": "13468:174:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13566:6:18",
														"nodeType": "YulTypedName",
														"src": "13566:6:18",
														"type": ""
													}
												],
												"src": "13468:174:18"
											},
											{
												"body": {
													"nativeSrc": "13794:220:18",
													"nodeType": "YulBlock",
													"src": "13794:220:18",
													"statements": [
														{
															"nativeSrc": "13804:74:18",
															"nodeType": "YulAssignment",
															"src": "13804:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13870:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13870:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13875:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13875:2:18",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13811:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "13811:58:18"
																},
																"nativeSrc": "13811:67:18",
																"nodeType": "YulFunctionCall",
																"src": "13811:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13804:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13804:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13976:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13976:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4",
																	"nativeSrc": "13887:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "13887:88:18"
																},
																"nativeSrc": "13887:93:18",
																"nodeType": "YulFunctionCall",
																"src": "13887:93:18"
															},
															"nativeSrc": "13887:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "13887:93:18"
														},
														{
															"nativeSrc": "13989:19:18",
															"nodeType": "YulAssignment",
															"src": "13989:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14000:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14000:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14005:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14005:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13996:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13996:3:18"
																},
																"nativeSrc": "13996:12:18",
																"nodeType": "YulFunctionCall",
																"src": "13996:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13989:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13989:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13648:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13782:3:18",
														"nodeType": "YulTypedName",
														"src": "13782:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13790:3:18",
														"nodeType": "YulTypedName",
														"src": "13790:3:18",
														"type": ""
													}
												],
												"src": "13648:366:18"
											},
											{
												"body": {
													"nativeSrc": "14191:248:18",
													"nodeType": "YulBlock",
													"src": "14191:248:18",
													"statements": [
														{
															"nativeSrc": "14201:26:18",
															"nodeType": "YulAssignment",
															"src": "14201:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14213:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14213:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14224:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14224:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14209:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:18"
																},
																"nativeSrc": "14209:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14209:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14201:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14201:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14248:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14248:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14259:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14259:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14244:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14244:3:18"
																		},
																		"nativeSrc": "14244:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14244:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14267:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "14267:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14273:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14273:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14263:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14263:3:18"
																		},
																		"nativeSrc": "14263:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14263:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14237:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14237:6:18"
																},
																"nativeSrc": "14237:47:18",
																"nodeType": "YulFunctionCall",
																"src": "14237:47:18"
															},
															"nativeSrc": "14237:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "14237:47:18"
														},
														{
															"nativeSrc": "14293:139:18",
															"nodeType": "YulAssignment",
															"src": "14293:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14427:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14427:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14301:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "14301:124:18"
																},
																"nativeSrc": "14301:131:18",
																"nodeType": "YulFunctionCall",
																"src": "14301:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14293:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14293:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14020:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14171:9:18",
														"nodeType": "YulTypedName",
														"src": "14171:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14186:4:18",
														"nodeType": "YulTypedName",
														"src": "14186:4:18",
														"type": ""
													}
												],
												"src": "14020:419:18"
											},
											{
												"body": {
													"nativeSrc": "14473:152:18",
													"nodeType": "YulBlock",
													"src": "14473:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14490:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14490:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14493:77:18",
																		"nodeType": "YulLiteral",
																		"src": "14493:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14483:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14483:6:18"
																},
																"nativeSrc": "14483:88:18",
																"nodeType": "YulFunctionCall",
																"src": "14483:88:18"
															},
															"nativeSrc": "14483:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "14483:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14587:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14587:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14590:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14590:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14580:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14580:6:18"
																},
																"nativeSrc": "14580:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14580:15:18"
															},
															"nativeSrc": "14580:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14580:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14611:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14611:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14614:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14614:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14604:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14604:6:18"
																},
																"nativeSrc": "14604:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14604:15:18"
															},
															"nativeSrc": "14604:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14604:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14445:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "14445:180:18"
											},
											{
												"body": {
													"nativeSrc": "14674:190:18",
													"nodeType": "YulBlock",
													"src": "14674:190:18",
													"statements": [
														{
															"nativeSrc": "14684:33:18",
															"nodeType": "YulAssignment",
															"src": "14684:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14711:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "14711:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14693:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "14693:17:18"
																},
																"nativeSrc": "14693:24:18",
																"nodeType": "YulFunctionCall",
																"src": "14693:24:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14684:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "14684:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14807:22:18",
																"nodeType": "YulBlock",
																"src": "14807:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14809:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "14809:16:18"
																			},
																			"nativeSrc": "14809:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14809:18:18"
																		},
																		"nativeSrc": "14809:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14809:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14732:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "14732:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14739:66:18",
																		"nodeType": "YulLiteral",
																		"src": "14739:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14729:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "14729:2:18"
																},
																"nativeSrc": "14729:77:18",
																"nodeType": "YulFunctionCall",
																"src": "14729:77:18"
															},
															"nativeSrc": "14726:103:18",
															"nodeType": "YulIf",
															"src": "14726:103:18"
														},
														{
															"nativeSrc": "14838:20:18",
															"nodeType": "YulAssignment",
															"src": "14838:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14849:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "14849:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14856:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14856:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14845:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14845:3:18"
																},
																"nativeSrc": "14845:13:18",
																"nodeType": "YulFunctionCall",
																"src": "14845:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14838:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14838:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14631:233:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14660:5:18",
														"nodeType": "YulTypedName",
														"src": "14660:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14670:3:18",
														"nodeType": "YulTypedName",
														"src": "14670:3:18",
														"type": ""
													}
												],
												"src": "14631:233:18"
											},
											{
												"body": {
													"nativeSrc": "14924:87:18",
													"nodeType": "YulBlock",
													"src": "14924:87:18",
													"statements": [
														{
															"nativeSrc": "14934:11:18",
															"nodeType": "YulAssignment",
															"src": "14934:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "14942:3:18",
																"nodeType": "YulIdentifier",
																"src": "14942:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14934:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14934:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14962:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14962:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14965:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14965:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14955:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14955:6:18"
																},
																"nativeSrc": "14955:14:18",
																"nodeType": "YulFunctionCall",
																"src": "14955:14:18"
															},
															"nativeSrc": "14955:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "14955:14:18"
														},
														{
															"nativeSrc": "14978:26:18",
															"nodeType": "YulAssignment",
															"src": "14978:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14996:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14996:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14999:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14999:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14986:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "14986:9:18"
																},
																"nativeSrc": "14986:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14986:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14978:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14978:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14870:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14911:3:18",
														"nodeType": "YulTypedName",
														"src": "14911:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14919:4:18",
														"nodeType": "YulTypedName",
														"src": "14919:4:18",
														"type": ""
													}
												],
												"src": "14870:141:18"
											},
											{
												"body": {
													"nativeSrc": "15061:49:18",
													"nodeType": "YulBlock",
													"src": "15061:49:18",
													"statements": [
														{
															"nativeSrc": "15071:33:18",
															"nodeType": "YulAssignment",
															"src": "15071:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15089:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "15089:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15096:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15096:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15085:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15085:3:18"
																		},
																		"nativeSrc": "15085:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15085:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15101:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15101:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15081:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15081:3:18"
																},
																"nativeSrc": "15081:23:18",
																"nodeType": "YulFunctionCall",
																"src": "15081:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15071:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15071:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15017:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15044:5:18",
														"nodeType": "YulTypedName",
														"src": "15044:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15054:6:18",
														"nodeType": "YulTypedName",
														"src": "15054:6:18",
														"type": ""
													}
												],
												"src": "15017:93:18"
											},
											{
												"body": {
													"nativeSrc": "15169:54:18",
													"nodeType": "YulBlock",
													"src": "15169:54:18",
													"statements": [
														{
															"nativeSrc": "15179:37:18",
															"nodeType": "YulAssignment",
															"src": "15179:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15204:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15204:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15210:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15210:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15200:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15200:3:18"
																},
																"nativeSrc": "15200:16:18",
																"nodeType": "YulFunctionCall",
																"src": "15200:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15179:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "15179:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15116:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15144:4:18",
														"nodeType": "YulTypedName",
														"src": "15144:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15150:5:18",
														"nodeType": "YulTypedName",
														"src": "15150:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15160:8:18",
														"nodeType": "YulTypedName",
														"src": "15160:8:18",
														"type": ""
													}
												],
												"src": "15116:107:18"
											},
											{
												"body": {
													"nativeSrc": "15305:317:18",
													"nodeType": "YulBlock",
													"src": "15305:317:18",
													"statements": [
														{
															"nativeSrc": "15315:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15315:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15336:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "15336:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15348:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15348:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15332:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15332:3:18"
																},
																"nativeSrc": "15332:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15332:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15319:9:18",
																	"nodeType": "YulTypedName",
																	"src": "15319:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15359:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15359:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15390:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15390:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15401:66:18",
																		"nodeType": "YulLiteral",
																		"src": "15401:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15371:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "15371:18:18"
																},
																"nativeSrc": "15371:97:18",
																"nodeType": "YulFunctionCall",
																"src": "15371:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15363:4:18",
																	"nodeType": "YulTypedName",
																	"src": "15363:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15477:51:18",
															"nodeType": "YulAssignment",
															"src": "15477:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15508:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15508:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "15519:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "15519:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15489:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "15489:18:18"
																},
																"nativeSrc": "15489:39:18",
																"nodeType": "YulFunctionCall",
																"src": "15489:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15477:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "15477:8:18"
																}
															]
														},
														{
															"nativeSrc": "15537:30:18",
															"nodeType": "YulAssignment",
															"src": "15537:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15550:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15550:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15561:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "15561:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15557:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15557:3:18"
																		},
																		"nativeSrc": "15557:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15557:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15546:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15546:3:18"
																},
																"nativeSrc": "15546:21:18",
																"nodeType": "YulFunctionCall",
																"src": "15546:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15537:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15537:5:18"
																}
															]
														},
														{
															"nativeSrc": "15576:40:18",
															"nodeType": "YulAssignment",
															"src": "15576:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15589:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15589:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15600:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "15600:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15610:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "15610:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15596:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15596:3:18"
																		},
																		"nativeSrc": "15596:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15596:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15586:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "15586:2:18"
																},
																"nativeSrc": "15586:30:18",
																"nodeType": "YulFunctionCall",
																"src": "15586:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15576:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15576:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15229:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15266:5:18",
														"nodeType": "YulTypedName",
														"src": "15266:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15273:10:18",
														"nodeType": "YulTypedName",
														"src": "15273:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15285:8:18",
														"nodeType": "YulTypedName",
														"src": "15285:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15298:6:18",
														"nodeType": "YulTypedName",
														"src": "15298:6:18",
														"type": ""
													}
												],
												"src": "15229:393:18"
											},
											{
												"body": {
													"nativeSrc": "15660:28:18",
													"nodeType": "YulBlock",
													"src": "15660:28:18",
													"statements": [
														{
															"nativeSrc": "15670:12:18",
															"nodeType": "YulAssignment",
															"src": "15670:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "15677:5:18",
																"nodeType": "YulIdentifier",
																"src": "15677:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15670:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15670:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15628:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15646:5:18",
														"nodeType": "YulTypedName",
														"src": "15646:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15656:3:18",
														"nodeType": "YulTypedName",
														"src": "15656:3:18",
														"type": ""
													}
												],
												"src": "15628:60:18"
											},
											{
												"body": {
													"nativeSrc": "15754:82:18",
													"nodeType": "YulBlock",
													"src": "15754:82:18",
													"statements": [
														{
															"nativeSrc": "15764:66:18",
															"nodeType": "YulAssignment",
															"src": "15764:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15822:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "15822:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15804:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "15804:17:18"
																				},
																				"nativeSrc": "15804:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15804:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15795:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "15795:8:18"
																		},
																		"nativeSrc": "15795:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15795:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15777:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "15777:17:18"
																},
																"nativeSrc": "15777:53:18",
																"nodeType": "YulFunctionCall",
																"src": "15777:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15764:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "15764:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15694:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15734:5:18",
														"nodeType": "YulTypedName",
														"src": "15734:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15744:9:18",
														"nodeType": "YulTypedName",
														"src": "15744:9:18",
														"type": ""
													}
												],
												"src": "15694:142:18"
											},
											{
												"body": {
													"nativeSrc": "15889:28:18",
													"nodeType": "YulBlock",
													"src": "15889:28:18",
													"statements": [
														{
															"nativeSrc": "15899:12:18",
															"nodeType": "YulAssignment",
															"src": "15899:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "15906:5:18",
																"nodeType": "YulIdentifier",
																"src": "15906:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15899:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15899:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15842:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15875:5:18",
														"nodeType": "YulTypedName",
														"src": "15875:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15885:3:18",
														"nodeType": "YulTypedName",
														"src": "15885:3:18",
														"type": ""
													}
												],
												"src": "15842:75:18"
											},
											{
												"body": {
													"nativeSrc": "15999:193:18",
													"nodeType": "YulBlock",
													"src": "15999:193:18",
													"statements": [
														{
															"nativeSrc": "16009:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16009:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16064:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "16064:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16033:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "16033:30:18"
																},
																"nativeSrc": "16033:39:18",
																"nodeType": "YulFunctionCall",
																"src": "16033:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16013:16:18",
																	"nodeType": "YulTypedName",
																	"src": "16013:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16088:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16088:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16128:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "16128:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16122:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "16122:5:18"
																				},
																				"nativeSrc": "16122:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16122:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16135:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16135:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16167:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "16167:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16143:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "16143:23:18"
																				},
																				"nativeSrc": "16143:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16143:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16094:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "16094:27:18"
																		},
																		"nativeSrc": "16094:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16094:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16081:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16081:6:18"
																},
																"nativeSrc": "16081:105:18",
																"nodeType": "YulFunctionCall",
																"src": "16081:105:18"
															},
															"nativeSrc": "16081:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "16081:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15923:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15976:4:18",
														"nodeType": "YulTypedName",
														"src": "15976:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15982:6:18",
														"nodeType": "YulTypedName",
														"src": "15982:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15990:7:18",
														"nodeType": "YulTypedName",
														"src": "15990:7:18",
														"type": ""
													}
												],
												"src": "15923:269:18"
											},
											{
												"body": {
													"nativeSrc": "16247:24:18",
													"nodeType": "YulBlock",
													"src": "16247:24:18",
													"statements": [
														{
															"nativeSrc": "16257:8:18",
															"nodeType": "YulAssignment",
															"src": "16257:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "16264:1:18",
																"nodeType": "YulLiteral",
																"src": "16264:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16257:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16257:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16198:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16243:3:18",
														"nodeType": "YulTypedName",
														"src": "16243:3:18",
														"type": ""
													}
												],
												"src": "16198:73:18"
											},
											{
												"body": {
													"nativeSrc": "16330:136:18",
													"nodeType": "YulBlock",
													"src": "16330:136:18",
													"statements": [
														{
															"nativeSrc": "16340:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16340:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16354:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "16354:30:18"
																},
																"nativeSrc": "16354:32:18",
																"nodeType": "YulFunctionCall",
																"src": "16354:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16344:6:18",
																	"nodeType": "YulTypedName",
																	"src": "16344:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16439:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16439:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16445:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16445:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "16453:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16453:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "16395:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "16395:43:18"
																},
																"nativeSrc": "16395:65:18",
																"nodeType": "YulFunctionCall",
																"src": "16395:65:18"
															},
															"nativeSrc": "16395:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "16395:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16277:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16316:4:18",
														"nodeType": "YulTypedName",
														"src": "16316:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16322:6:18",
														"nodeType": "YulTypedName",
														"src": "16322:6:18",
														"type": ""
													}
												],
												"src": "16277:189:18"
											},
											{
												"body": {
													"nativeSrc": "16522:136:18",
													"nodeType": "YulBlock",
													"src": "16522:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "16589:63:18",
																"nodeType": "YulBlock",
																"src": "16589:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16633:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "16633:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16640:1:18",
																					"nodeType": "YulLiteral",
																					"src": "16640:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16603:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "16603:29:18"
																			},
																			"nativeSrc": "16603:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16603:39:18"
																		},
																		"nativeSrc": "16603:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "16603:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16542:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "16542:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16549:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16549:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16539:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "16539:2:18"
																},
																"nativeSrc": "16539:14:18",
																"nodeType": "YulFunctionCall",
																"src": "16539:14:18"
															},
															"nativeSrc": "16532:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16554:26:18",
																"nodeType": "YulBlock",
																"src": "16554:26:18",
																"statements": [
																	{
																		"nativeSrc": "16556:22:18",
																		"nodeType": "YulAssignment",
																		"src": "16556:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16569:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "16569:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16576:1:18",
																					"nodeType": "YulLiteral",
																					"src": "16576:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16565:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "16565:3:18"
																			},
																			"nativeSrc": "16565:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16565:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "16556:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "16556:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16536:2:18",
																"nodeType": "YulBlock",
																"src": "16536:2:18",
																"statements": []
															},
															"src": "16532:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "16472:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16510:5:18",
														"nodeType": "YulTypedName",
														"src": "16510:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16517:3:18",
														"nodeType": "YulTypedName",
														"src": "16517:3:18",
														"type": ""
													}
												],
												"src": "16472:186:18"
											},
											{
												"body": {
													"nativeSrc": "16743:464:18",
													"nodeType": "YulBlock",
													"src": "16743:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "16769:431:18",
																"nodeType": "YulBlock",
																"src": "16769:431:18",
																"statements": [
																	{
																		"nativeSrc": "16783:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16783:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16831:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "16831:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16799:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "16799:31:18"
																			},
																			"nativeSrc": "16799:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16799:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16787:8:18",
																				"nodeType": "YulTypedName",
																				"src": "16787:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16850:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16850:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16873:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "16873:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16901:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "16901:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16883:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "16883:17:18"
																					},
																					"nativeSrc": "16883:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "16883:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16869:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "16869:3:18"
																			},
																			"nativeSrc": "16869:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16869:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16854:11:18",
																				"nodeType": "YulTypedName",
																				"src": "16854:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17070:27:18",
																			"nodeType": "YulBlock",
																			"src": "17070:27:18",
																			"statements": [
																				{
																					"nativeSrc": "17072:23:18",
																					"nodeType": "YulAssignment",
																					"src": "17072:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17087:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "17087:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17072:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "17072:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17054:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "17054:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17066:2:18",
																					"nodeType": "YulLiteral",
																					"src": "17066:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17051:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "17051:2:18"
																			},
																			"nativeSrc": "17051:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17051:18:18"
																		},
																		"nativeSrc": "17048:49:18",
																		"nodeType": "YulIf",
																		"src": "17048:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17139:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "17139:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17156:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "17156:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17184:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "17184:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17166:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "17166:17:18"
																							},
																							"nativeSrc": "17166:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "17166:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17152:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "17152:3:18"
																					},
																					"nativeSrc": "17152:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "17152:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17110:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "17110:28:18"
																			},
																			"nativeSrc": "17110:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17110:80:18"
																		},
																		"nativeSrc": "17110:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17110:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16760:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16760:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16765:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16765:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16757:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "16757:2:18"
																},
																"nativeSrc": "16757:11:18",
																"nodeType": "YulFunctionCall",
																"src": "16757:11:18"
															},
															"nativeSrc": "16754:446:18",
															"nodeType": "YulIf",
															"src": "16754:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16664:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16719:5:18",
														"nodeType": "YulTypedName",
														"src": "16719:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16726:3:18",
														"nodeType": "YulTypedName",
														"src": "16726:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16731:10:18",
														"nodeType": "YulTypedName",
														"src": "16731:10:18",
														"type": ""
													}
												],
												"src": "16664:543:18"
											},
											{
												"body": {
													"nativeSrc": "17276:54:18",
													"nodeType": "YulBlock",
													"src": "17276:54:18",
													"statements": [
														{
															"nativeSrc": "17286:37:18",
															"nodeType": "YulAssignment",
															"src": "17286:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17311:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17311:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17317:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17317:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17307:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17307:3:18"
																},
																"nativeSrc": "17307:16:18",
																"nodeType": "YulFunctionCall",
																"src": "17307:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17286:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "17286:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17213:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17251:4:18",
														"nodeType": "YulTypedName",
														"src": "17251:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17257:5:18",
														"nodeType": "YulTypedName",
														"src": "17257:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17267:8:18",
														"nodeType": "YulTypedName",
														"src": "17267:8:18",
														"type": ""
													}
												],
												"src": "17213:117:18"
											},
											{
												"body": {
													"nativeSrc": "17387:118:18",
													"nodeType": "YulBlock",
													"src": "17387:118:18",
													"statements": [
														{
															"nativeSrc": "17397:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "17397:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17446:1:18",
																						"nodeType": "YulLiteral",
																						"src": "17446:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "17449:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "17449:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "17442:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17442:3:18"
																				},
																				"nativeSrc": "17442:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17442:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17461:1:18",
																						"nodeType": "YulLiteral",
																						"src": "17461:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17457:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17457:3:18"
																				},
																				"nativeSrc": "17457:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17457:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "17413:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "17413:28:18"
																		},
																		"nativeSrc": "17413:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17413:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "17409:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17409:3:18"
																},
																"nativeSrc": "17409:56:18",
																"nodeType": "YulFunctionCall",
																"src": "17409:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17401:4:18",
																	"nodeType": "YulTypedName",
																	"src": "17401:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17474:25:18",
															"nodeType": "YulAssignment",
															"src": "17474:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17488:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17488:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "17494:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17494:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17484:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17484:3:18"
																},
																"nativeSrc": "17484:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17484:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17474:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17474:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17336:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17364:4:18",
														"nodeType": "YulTypedName",
														"src": "17364:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "17370:5:18",
														"nodeType": "YulTypedName",
														"src": "17370:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17380:6:18",
														"nodeType": "YulTypedName",
														"src": "17380:6:18",
														"type": ""
													}
												],
												"src": "17336:169:18"
											},
											{
												"body": {
													"nativeSrc": "17591:214:18",
													"nodeType": "YulBlock",
													"src": "17591:214:18",
													"statements": [
														{
															"nativeSrc": "17724:37:18",
															"nodeType": "YulAssignment",
															"src": "17724:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17751:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17751:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17757:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17757:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17732:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "17732:18:18"
																},
																"nativeSrc": "17732:29:18",
																"nodeType": "YulFunctionCall",
																"src": "17732:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17724:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17724:4:18"
																}
															]
														},
														{
															"nativeSrc": "17770:29:18",
															"nodeType": "YulAssignment",
															"src": "17770:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17781:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17781:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17791:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17791:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17794:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "17794:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17787:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17787:3:18"
																		},
																		"nativeSrc": "17787:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17787:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17778:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "17778:2:18"
																},
																"nativeSrc": "17778:21:18",
																"nodeType": "YulFunctionCall",
																"src": "17778:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17770:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17770:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "17510:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17572:4:18",
														"nodeType": "YulTypedName",
														"src": "17572:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17578:3:18",
														"nodeType": "YulTypedName",
														"src": "17578:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "17586:4:18",
														"nodeType": "YulTypedName",
														"src": "17586:4:18",
														"type": ""
													}
												],
												"src": "17510:295:18"
											},
											{
												"body": {
													"nativeSrc": "17902:1303:18",
													"nodeType": "YulBlock",
													"src": "17902:1303:18",
													"statements": [
														{
															"nativeSrc": "17913:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "17913:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17960:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17960:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17927:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "17927:32:18"
																},
																"nativeSrc": "17927:37:18",
																"nodeType": "YulFunctionCall",
																"src": "17927:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17917:6:18",
																	"nodeType": "YulTypedName",
																	"src": "17917:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18049:22:18",
																"nodeType": "YulBlock",
																"src": "18049:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18051:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "18051:16:18"
																			},
																			"nativeSrc": "18051:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18051:18:18"
																		},
																		"nativeSrc": "18051:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18051:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18021:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18021:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18029:18:18",
																		"nodeType": "YulLiteral",
																		"src": "18029:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18018:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18018:2:18"
																},
																"nativeSrc": "18018:30:18",
																"nodeType": "YulFunctionCall",
																"src": "18018:30:18"
															},
															"nativeSrc": "18015:56:18",
															"nodeType": "YulIf",
															"src": "18015:56:18"
														},
														{
															"nativeSrc": "18081:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18081:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18127:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "18127:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18121:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "18121:5:18"
																		},
																		"nativeSrc": "18121:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18121:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18095:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "18095:25:18"
																},
																"nativeSrc": "18095:38:18",
																"nodeType": "YulFunctionCall",
																"src": "18095:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18085:6:18",
																	"nodeType": "YulTypedName",
																	"src": "18085:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18226:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18226:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18232:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18232:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18240:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18240:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18180:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "18180:45:18"
																},
																"nativeSrc": "18180:67:18",
																"nodeType": "YulFunctionCall",
																"src": "18180:67:18"
															},
															"nativeSrc": "18180:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "18180:67:18"
														},
														{
															"nativeSrc": "18257:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18257:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "18274:1:18",
																"nodeType": "YulLiteral",
																"src": "18274:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18261:9:18",
																	"nodeType": "YulTypedName",
																	"src": "18261:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18285:17:18",
															"nodeType": "YulAssignment",
															"src": "18285:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "18298:4:18",
																"nodeType": "YulLiteral",
																"src": "18298:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18285:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "18285:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18349:611:18",
																		"nodeType": "YulBlock",
																		"src": "18349:611:18",
																		"statements": [
																			{
																				"nativeSrc": "18363:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18363:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "18382:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "18382:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "18394:4:18",
																									"nodeType": "YulLiteral",
																									"src": "18394:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "18390:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "18390:3:18"
																							},
																							"nativeSrc": "18390:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "18390:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18378:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "18378:3:18"
																					},
																					"nativeSrc": "18378:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "18378:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "18367:7:18",
																						"nodeType": "YulTypedName",
																						"src": "18367:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18414:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18414:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18460:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "18460:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "18428:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "18428:31:18"
																					},
																					"nativeSrc": "18428:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "18428:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "18418:6:18",
																						"nodeType": "YulTypedName",
																						"src": "18418:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18478:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18478:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18487:1:18",
																					"nodeType": "YulLiteral",
																					"src": "18487:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "18482:1:18",
																						"nodeType": "YulTypedName",
																						"src": "18482:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18546:163:18",
																					"nodeType": "YulBlock",
																					"src": "18546:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18571:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "18571:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "18589:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "18589:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18594:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "18594:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "18585:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "18585:3:18"
																												},
																												"nativeSrc": "18585:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "18585:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18579:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "18579:5:18"
																										},
																										"nativeSrc": "18579:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "18579:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18564:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "18564:6:18"
																								},
																								"nativeSrc": "18564:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "18564:42:18"
																							},
																							"nativeSrc": "18564:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "18564:42:18"
																						},
																						{
																							"nativeSrc": "18623:24:18",
																							"nodeType": "YulAssignment",
																							"src": "18623:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18637:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "18637:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18645:1:18",
																										"nodeType": "YulLiteral",
																										"src": "18645:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18633:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "18633:3:18"
																								},
																								"nativeSrc": "18633:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "18633:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "18623:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "18623:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18664:31:18",
																							"nodeType": "YulAssignment",
																							"src": "18664:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18681:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "18681:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18692:2:18",
																										"nodeType": "YulLiteral",
																										"src": "18692:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18677:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "18677:3:18"
																								},
																								"nativeSrc": "18677:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "18677:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18664:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "18664:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "18512:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "18512:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18515:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "18515:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18509:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "18509:2:18"
																					},
																					"nativeSrc": "18509:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "18509:14:18"
																				},
																				"nativeSrc": "18501:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "18524:21:18",
																					"nodeType": "YulBlock",
																					"src": "18524:21:18",
																					"statements": [
																						{
																							"nativeSrc": "18526:17:18",
																							"nodeType": "YulAssignment",
																							"src": "18526:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18535:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "18535:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18538:4:18",
																										"nodeType": "YulLiteral",
																										"src": "18538:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18531:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "18531:3:18"
																								},
																								"nativeSrc": "18531:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "18531:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18526:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "18526:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "18505:3:18",
																					"nodeType": "YulBlock",
																					"src": "18505:3:18",
																					"statements": []
																				},
																				"src": "18501:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "18745:156:18",
																					"nodeType": "YulBlock",
																					"src": "18745:156:18",
																					"statements": [
																						{
																							"nativeSrc": "18763:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18763:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18790:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "18790:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18795:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "18795:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18786:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "18786:3:18"
																										},
																										"nativeSrc": "18786:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "18786:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18780:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "18780:5:18"
																								},
																								"nativeSrc": "18780:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "18780:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18767:9:18",
																									"nodeType": "YulTypedName",
																									"src": "18767:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18830:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "18830:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18857:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "18857:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18872:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "18872:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18880:4:18",
																														"nodeType": "YulLiteral",
																														"src": "18880:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18868:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "18868:3:18"
																												},
																												"nativeSrc": "18868:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "18868:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18838:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "18838:18:18"
																										},
																										"nativeSrc": "18838:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "18838:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18823:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "18823:6:18"
																								},
																								"nativeSrc": "18823:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "18823:64:18"
																							},
																							"nativeSrc": "18823:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "18823:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18728:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "18728:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18737:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "18737:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18725:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "18725:2:18"
																					},
																					"nativeSrc": "18725:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "18725:19:18"
																				},
																				"nativeSrc": "18722:179:18",
																				"nodeType": "YulIf",
																				"src": "18722:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18921:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "18921:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18935:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "18935:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18943:1:18",
																											"nodeType": "YulLiteral",
																											"src": "18943:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18931:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "18931:3:18"
																									},
																									"nativeSrc": "18931:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "18931:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18947:1:18",
																									"nodeType": "YulLiteral",
																									"src": "18947:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18927:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "18927:3:18"
																							},
																							"nativeSrc": "18927:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "18927:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18914:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "18914:6:18"
																					},
																					"nativeSrc": "18914:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "18914:36:18"
																				},
																				"nativeSrc": "18914:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "18914:36:18"
																			}
																		]
																	},
																	"nativeSrc": "18342:618:18",
																	"nodeType": "YulCase",
																	"src": "18342:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18347:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18347:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18977:222:18",
																		"nodeType": "YulBlock",
																		"src": "18977:222:18",
																		"statements": [
																			{
																				"nativeSrc": "18991:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18991:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19004:1:18",
																					"nodeType": "YulLiteral",
																					"src": "19004:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18995:5:18",
																						"nodeType": "YulTypedName",
																						"src": "18995:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19028:67:18",
																					"nodeType": "YulBlock",
																					"src": "19028:67:18",
																					"statements": [
																						{
																							"nativeSrc": "19046:35:18",
																							"nodeType": "YulAssignment",
																							"src": "19046:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19065:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "19065:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19070:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "19070:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19061:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "19061:3:18"
																										},
																										"nativeSrc": "19061:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "19061:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19055:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19055:5:18"
																								},
																								"nativeSrc": "19055:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19055:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19046:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19046:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19021:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "19021:6:18"
																				},
																				"nativeSrc": "19018:77:18",
																				"nodeType": "YulIf",
																				"src": "19018:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19115:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "19115:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19174:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19174:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19181:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "19181:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19121:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "19121:52:18"
																							},
																							"nativeSrc": "19121:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "19121:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19108:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "19108:6:18"
																					},
																					"nativeSrc": "19108:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19108:81:18"
																				},
																				"nativeSrc": "19108:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "19108:81:18"
																			}
																		]
																	},
																	"nativeSrc": "18969:230:18",
																	"nodeType": "YulCase",
																	"src": "18969:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18322:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18322:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18330:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18330:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18319:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18319:2:18"
																},
																"nativeSrc": "18319:14:18",
																"nodeType": "YulFunctionCall",
																"src": "18319:14:18"
															},
															"nativeSrc": "18312:887:18",
															"nodeType": "YulSwitch",
															"src": "18312:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "17810:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17891:4:18",
														"nodeType": "YulTypedName",
														"src": "17891:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17897:3:18",
														"nodeType": "YulTypedName",
														"src": "17897:3:18",
														"type": ""
													}
												],
												"src": "17810:1395:18"
											},
											{
												"body": {
													"nativeSrc": "19325:34:18",
													"nodeType": "YulBlock",
													"src": "19325:34:18",
													"statements": [
														{
															"nativeSrc": "19335:18:18",
															"nodeType": "YulAssignment",
															"src": "19335:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "19350:3:18",
																"nodeType": "YulIdentifier",
																"src": "19350:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19335:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "19335:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19211:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19297:3:18",
														"nodeType": "YulTypedName",
														"src": "19297:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19302:6:18",
														"nodeType": "YulTypedName",
														"src": "19302:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19313:11:18",
														"nodeType": "YulTypedName",
														"src": "19313:11:18",
														"type": ""
													}
												],
												"src": "19211:148:18"
											},
											{
												"body": {
													"nativeSrc": "19475:280:18",
													"nodeType": "YulBlock",
													"src": "19475:280:18",
													"statements": [
														{
															"nativeSrc": "19485:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "19485:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19532:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "19532:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19499:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "19499:32:18"
																},
																"nativeSrc": "19499:39:18",
																"nodeType": "YulFunctionCall",
																"src": "19499:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19489:6:18",
																	"nodeType": "YulTypedName",
																	"src": "19489:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19547:96:18",
															"nodeType": "YulAssignment",
															"src": "19547:96:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19631:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19631:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19636:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19636:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19554:76:18",
																	"nodeType": "YulIdentifier",
																	"src": "19554:76:18"
																},
																"nativeSrc": "19554:89:18",
																"nodeType": "YulFunctionCall",
																"src": "19554:89:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19547:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19547:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19691:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "19691:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19698:4:18",
																				"nodeType": "YulLiteral",
																				"src": "19698:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19687:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19687:3:18"
																		},
																		"nativeSrc": "19687:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19687:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19705:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19705:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19710:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19710:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19652:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "19652:34:18"
																},
																"nativeSrc": "19652:65:18",
																"nodeType": "YulFunctionCall",
																"src": "19652:65:18"
															},
															"nativeSrc": "19652:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "19652:65:18"
														},
														{
															"nativeSrc": "19726:23:18",
															"nodeType": "YulAssignment",
															"src": "19726:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19737:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19737:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19742:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19742:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19733:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19733:3:18"
																},
																"nativeSrc": "19733:16:18",
																"nodeType": "YulFunctionCall",
																"src": "19733:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19726:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19726:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19365:390:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19456:5:18",
														"nodeType": "YulTypedName",
														"src": "19456:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19463:3:18",
														"nodeType": "YulTypedName",
														"src": "19463:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19471:3:18",
														"nodeType": "YulTypedName",
														"src": "19471:3:18",
														"type": ""
													}
												],
												"src": "19365:390:18"
											},
											{
												"body": {
													"nativeSrc": "19897:139:18",
													"nodeType": "YulBlock",
													"src": "19897:139:18",
													"statements": [
														{
															"nativeSrc": "19908:102:18",
															"nodeType": "YulAssignment",
															"src": "19908:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19997:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19997:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20006:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20006:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19915:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "19915:81:18"
																},
																"nativeSrc": "19915:95:18",
																"nodeType": "YulFunctionCall",
																"src": "19915:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19908:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19908:3:18"
																}
															]
														},
														{
															"nativeSrc": "20020:10:18",
															"nodeType": "YulAssignment",
															"src": "20020:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "20027:3:18",
																"nodeType": "YulIdentifier",
																"src": "20027:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20020:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20020:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19761:275:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19876:3:18",
														"nodeType": "YulTypedName",
														"src": "19876:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19882:6:18",
														"nodeType": "YulTypedName",
														"src": "19882:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19893:3:18",
														"nodeType": "YulTypedName",
														"src": "19893:3:18",
														"type": ""
													}
												],
												"src": "19761:275:18"
											},
											{
												"body": {
													"nativeSrc": "20148:68:18",
													"nodeType": "YulBlock",
													"src": "20148:68:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20170:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "20170:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20178:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20178:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20166:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20166:3:18"
																		},
																		"nativeSrc": "20166:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20166:14:18"
																	},
																	{
																		"hexValue": "5265717565737420616c726561647920617070726f766564",
																		"kind": "string",
																		"nativeSrc": "20182:26:18",
																		"nodeType": "YulLiteral",
																		"src": "20182:26:18",
																		"type": "",
																		"value": "Request already approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20159:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20159:6:18"
																},
																"nativeSrc": "20159:50:18",
																"nodeType": "YulFunctionCall",
																"src": "20159:50:18"
															},
															"nativeSrc": "20159:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "20159:50:18"
														}
													]
												},
												"name": "store_literal_in_memory_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6",
												"nativeSrc": "20042:174:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20140:6:18",
														"nodeType": "YulTypedName",
														"src": "20140:6:18",
														"type": ""
													}
												],
												"src": "20042:174:18"
											},
											{
												"body": {
													"nativeSrc": "20368:220:18",
													"nodeType": "YulBlock",
													"src": "20368:220:18",
													"statements": [
														{
															"nativeSrc": "20378:74:18",
															"nodeType": "YulAssignment",
															"src": "20378:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20444:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20444:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20449:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20449:2:18",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20385:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "20385:58:18"
																},
																"nativeSrc": "20385:67:18",
																"nodeType": "YulFunctionCall",
																"src": "20385:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20378:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20378:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20550:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20550:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6",
																	"nativeSrc": "20461:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "20461:88:18"
																},
																"nativeSrc": "20461:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20461:93:18"
															},
															"nativeSrc": "20461:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "20461:93:18"
														},
														{
															"nativeSrc": "20563:19:18",
															"nodeType": "YulAssignment",
															"src": "20563:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20574:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20574:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20579:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20579:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20570:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20570:3:18"
																},
																"nativeSrc": "20570:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20570:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20563:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20563:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20222:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20356:3:18",
														"nodeType": "YulTypedName",
														"src": "20356:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20364:3:18",
														"nodeType": "YulTypedName",
														"src": "20364:3:18",
														"type": ""
													}
												],
												"src": "20222:366:18"
											},
											{
												"body": {
													"nativeSrc": "20765:248:18",
													"nodeType": "YulBlock",
													"src": "20765:248:18",
													"statements": [
														{
															"nativeSrc": "20775:26:18",
															"nodeType": "YulAssignment",
															"src": "20775:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20787:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20787:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20798:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20798:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20783:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20783:3:18"
																},
																"nativeSrc": "20783:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20783:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20775:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20775:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20822:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20822:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20833:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20833:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20818:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20818:3:18"
																		},
																		"nativeSrc": "20818:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20818:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20841:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20841:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20847:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20847:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20837:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20837:3:18"
																		},
																		"nativeSrc": "20837:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20837:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20811:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20811:6:18"
																},
																"nativeSrc": "20811:47:18",
																"nodeType": "YulFunctionCall",
																"src": "20811:47:18"
															},
															"nativeSrc": "20811:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "20811:47:18"
														},
														{
															"nativeSrc": "20867:139:18",
															"nodeType": "YulAssignment",
															"src": "20867:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21001:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21001:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20875:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "20875:124:18"
																},
																"nativeSrc": "20875:131:18",
																"nodeType": "YulFunctionCall",
																"src": "20875:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20867:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20867:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20594:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20745:9:18",
														"nodeType": "YulTypedName",
														"src": "20745:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20760:4:18",
														"nodeType": "YulTypedName",
														"src": "20760:4:18",
														"type": ""
													}
												],
												"src": "20594:419:18"
											},
											{
												"body": {
													"nativeSrc": "21077:40:18",
													"nodeType": "YulBlock",
													"src": "21077:40:18",
													"statements": [
														{
															"nativeSrc": "21088:22:18",
															"nodeType": "YulAssignment",
															"src": "21088:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21104:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21104:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21098:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "21098:5:18"
																},
																"nativeSrc": "21098:12:18",
																"nodeType": "YulFunctionCall",
																"src": "21098:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21088:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21088:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21019:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21060:5:18",
														"nodeType": "YulTypedName",
														"src": "21060:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21070:6:18",
														"nodeType": "YulTypedName",
														"src": "21070:6:18",
														"type": ""
													}
												],
												"src": "21019:98:18"
											},
											{
												"body": {
													"nativeSrc": "21218:73:18",
													"nodeType": "YulBlock",
													"src": "21218:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21235:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21235:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21240:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21240:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21228:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21228:6:18"
																},
																"nativeSrc": "21228:19:18",
																"nodeType": "YulFunctionCall",
																"src": "21228:19:18"
															},
															"nativeSrc": "21228:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "21228:19:18"
														},
														{
															"nativeSrc": "21256:29:18",
															"nodeType": "YulAssignment",
															"src": "21256:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21275:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21275:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21280:4:18",
																		"nodeType": "YulLiteral",
																		"src": "21280:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21271:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21271:3:18"
																},
																"nativeSrc": "21271:14:18",
																"nodeType": "YulFunctionCall",
																"src": "21271:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21256:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "21256:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21123:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21190:3:18",
														"nodeType": "YulTypedName",
														"src": "21190:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21195:6:18",
														"nodeType": "YulTypedName",
														"src": "21195:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21206:11:18",
														"nodeType": "YulTypedName",
														"src": "21206:11:18",
														"type": ""
													}
												],
												"src": "21123:168:18"
											},
											{
												"body": {
													"nativeSrc": "21387:283:18",
													"nodeType": "YulBlock",
													"src": "21387:283:18",
													"statements": [
														{
															"nativeSrc": "21397:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "21397:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21443:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21443:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21411:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "21411:31:18"
																},
																"nativeSrc": "21411:38:18",
																"nodeType": "YulFunctionCall",
																"src": "21411:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21401:6:18",
																	"nodeType": "YulTypedName",
																	"src": "21401:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21458:77:18",
															"nodeType": "YulAssignment",
															"src": "21458:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21523:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21523:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21528:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21528:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21465:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "21465:57:18"
																},
																"nativeSrc": "21465:70:18",
																"nodeType": "YulFunctionCall",
																"src": "21465:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21458:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21458:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21583:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "21583:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21590:4:18",
																				"nodeType": "YulLiteral",
																				"src": "21590:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21579:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21579:3:18"
																		},
																		"nativeSrc": "21579:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21579:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21597:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21597:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21602:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21602:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21544:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "21544:34:18"
																},
																"nativeSrc": "21544:65:18",
																"nodeType": "YulFunctionCall",
																"src": "21544:65:18"
															},
															"nativeSrc": "21544:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "21544:65:18"
														},
														{
															"nativeSrc": "21618:46:18",
															"nodeType": "YulAssignment",
															"src": "21618:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21629:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21629:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21656:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "21656:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21634:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "21634:21:18"
																		},
																		"nativeSrc": "21634:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21634:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21625:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21625:3:18"
																},
																"nativeSrc": "21625:39:18",
																"nodeType": "YulFunctionCall",
																"src": "21625:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21618:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21618:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21297:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21368:5:18",
														"nodeType": "YulTypedName",
														"src": "21368:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21375:3:18",
														"nodeType": "YulTypedName",
														"src": "21375:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21383:3:18",
														"nodeType": "YulTypedName",
														"src": "21383:3:18",
														"type": ""
													}
												],
												"src": "21297:373:18"
											},
											{
												"body": {
													"nativeSrc": "21876:440:18",
													"nodeType": "YulBlock",
													"src": "21876:440:18",
													"statements": [
														{
															"nativeSrc": "21886:27:18",
															"nodeType": "YulAssignment",
															"src": "21886:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21898:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21898:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21909:3:18",
																		"nodeType": "YulLiteral",
																		"src": "21909:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21894:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21894:3:18"
																},
																"nativeSrc": "21894:19:18",
																"nodeType": "YulFunctionCall",
																"src": "21894:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21886:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21886:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21967:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21967:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21980:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21980:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21991:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21991:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21976:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21976:3:18"
																		},
																		"nativeSrc": "21976:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21976:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21923:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "21923:43:18"
																},
																"nativeSrc": "21923:71:18",
																"nodeType": "YulFunctionCall",
																"src": "21923:71:18"
															},
															"nativeSrc": "21923:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "21923:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22048:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22048:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22061:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22061:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22072:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22072:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22057:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22057:3:18"
																		},
																		"nativeSrc": "22057:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22057:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22004:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "22004:43:18"
																},
																"nativeSrc": "22004:72:18",
																"nodeType": "YulFunctionCall",
																"src": "22004:72:18"
															},
															"nativeSrc": "22004:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "22004:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22130:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22130:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22143:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22143:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22154:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22154:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22139:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22139:3:18"
																		},
																		"nativeSrc": "22139:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22139:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22086:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "22086:43:18"
																},
																"nativeSrc": "22086:72:18",
																"nodeType": "YulFunctionCall",
																"src": "22086:72:18"
															},
															"nativeSrc": "22086:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "22086:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22179:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22179:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22190:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22190:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22175:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22175:3:18"
																		},
																		"nativeSrc": "22175:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22175:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22199:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22199:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22205:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22205:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22195:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22195:3:18"
																		},
																		"nativeSrc": "22195:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22195:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22168:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22168:6:18"
																},
																"nativeSrc": "22168:48:18",
																"nodeType": "YulFunctionCall",
																"src": "22168:48:18"
															},
															"nativeSrc": "22168:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "22168:48:18"
														},
														{
															"nativeSrc": "22225:84:18",
															"nodeType": "YulAssignment",
															"src": "22225:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22295:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22295:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22304:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22304:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22233:61:18",
																	"nodeType": "YulIdentifier",
																	"src": "22233:61:18"
																},
																"nativeSrc": "22233:76:18",
																"nodeType": "YulFunctionCall",
																"src": "22233:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22225:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22225:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21676:640:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21824:9:18",
														"nodeType": "YulTypedName",
														"src": "21824:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21836:6:18",
														"nodeType": "YulTypedName",
														"src": "21836:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21844:6:18",
														"nodeType": "YulTypedName",
														"src": "21844:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21852:6:18",
														"nodeType": "YulTypedName",
														"src": "21852:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21860:6:18",
														"nodeType": "YulTypedName",
														"src": "21860:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21871:4:18",
														"nodeType": "YulTypedName",
														"src": "21871:4:18",
														"type": ""
													}
												],
												"src": "21676:640:18"
											},
											{
												"body": {
													"nativeSrc": "22384:79:18",
													"nodeType": "YulBlock",
													"src": "22384:79:18",
													"statements": [
														{
															"nativeSrc": "22394:22:18",
															"nodeType": "YulAssignment",
															"src": "22394:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22409:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22409:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22403:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "22403:5:18"
																},
																"nativeSrc": "22403:13:18",
																"nodeType": "YulFunctionCall",
																"src": "22403:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22394:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "22394:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22451:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22451:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "22425:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "22425:25:18"
																},
																"nativeSrc": "22425:32:18",
																"nodeType": "YulFunctionCall",
																"src": "22425:32:18"
															},
															"nativeSrc": "22425:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "22425:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "22322:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22362:6:18",
														"nodeType": "YulTypedName",
														"src": "22362:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22370:3:18",
														"nodeType": "YulTypedName",
														"src": "22370:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22378:5:18",
														"nodeType": "YulTypedName",
														"src": "22378:5:18",
														"type": ""
													}
												],
												"src": "22322:141:18"
											},
											{
												"body": {
													"nativeSrc": "22545:273:18",
													"nodeType": "YulBlock",
													"src": "22545:273:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "22591:83:18",
																"nodeType": "YulBlock",
																"src": "22591:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22593:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "22593:77:18"
																			},
																			"nativeSrc": "22593:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22593:79:18"
																		},
																		"nativeSrc": "22593:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "22593:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22566:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "22566:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22575:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22575:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22562:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22562:3:18"
																		},
																		"nativeSrc": "22562:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22562:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22587:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22587:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22558:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22558:3:18"
																},
																"nativeSrc": "22558:32:18",
																"nodeType": "YulFunctionCall",
																"src": "22558:32:18"
															},
															"nativeSrc": "22555:119:18",
															"nodeType": "YulIf",
															"src": "22555:119:18"
														},
														{
															"nativeSrc": "22684:127:18",
															"nodeType": "YulBlock",
															"src": "22684:127:18",
															"statements": [
																{
																	"nativeSrc": "22699:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22699:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22713:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22713:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22703:6:18",
																			"nodeType": "YulTypedName",
																			"src": "22703:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22728:73:18",
																	"nodeType": "YulAssignment",
																	"src": "22728:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22773:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "22773:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22784:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "22784:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22769:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "22769:3:18"
																				},
																				"nativeSrc": "22769:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22769:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22793:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "22793:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22738:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "22738:30:18"
																		},
																		"nativeSrc": "22738:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22738:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22728:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "22728:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "22469:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22515:9:18",
														"nodeType": "YulTypedName",
														"src": "22515:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22526:7:18",
														"nodeType": "YulTypedName",
														"src": "22526:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22538:6:18",
														"nodeType": "YulTypedName",
														"src": "22538:6:18",
														"type": ""
													}
												],
												"src": "22469:349:18"
											},
											{
												"body": {
													"nativeSrc": "23008:251:18",
													"nodeType": "YulBlock",
													"src": "23008:251:18",
													"statements": [
														{
															"nativeSrc": "23019:102:18",
															"nodeType": "YulAssignment",
															"src": "23019:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23108:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23108:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23117:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23117:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23026:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "23026:81:18"
																},
																"nativeSrc": "23026:95:18",
																"nodeType": "YulFunctionCall",
																"src": "23026:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23019:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23019:3:18"
																}
															]
														},
														{
															"nativeSrc": "23131:102:18",
															"nodeType": "YulAssignment",
															"src": "23131:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23220:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23220:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23229:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23229:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23138:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "23138:81:18"
																},
																"nativeSrc": "23138:95:18",
																"nodeType": "YulFunctionCall",
																"src": "23138:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23131:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23131:3:18"
																}
															]
														},
														{
															"nativeSrc": "23243:10:18",
															"nodeType": "YulAssignment",
															"src": "23243:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "23250:3:18",
																"nodeType": "YulIdentifier",
																"src": "23250:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23243:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23243:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "22824:435:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22979:3:18",
														"nodeType": "YulTypedName",
														"src": "22979:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22985:6:18",
														"nodeType": "YulTypedName",
														"src": "22985:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22993:6:18",
														"nodeType": "YulTypedName",
														"src": "22993:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23004:3:18",
														"nodeType": "YulTypedName",
														"src": "23004:3:18",
														"type": ""
													}
												],
												"src": "22824:435:18"
											},
											{
												"body": {
													"nativeSrc": "23391:206:18",
													"nodeType": "YulBlock",
													"src": "23391:206:18",
													"statements": [
														{
															"nativeSrc": "23401:26:18",
															"nodeType": "YulAssignment",
															"src": "23401:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23413:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "23413:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23424:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23424:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23409:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23409:3:18"
																},
																"nativeSrc": "23409:18:18",
																"nodeType": "YulFunctionCall",
																"src": "23409:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23401:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23401:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23481:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23481:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23494:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23494:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23505:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23505:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23490:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23490:3:18"
																		},
																		"nativeSrc": "23490:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23490:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23437:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "23437:43:18"
																},
																"nativeSrc": "23437:71:18",
																"nodeType": "YulFunctionCall",
																"src": "23437:71:18"
															},
															"nativeSrc": "23437:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "23437:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23562:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23562:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23575:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23575:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23586:2:18",
																				"nodeType": "YulLiteral",
																				"src": "23586:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23571:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23571:3:18"
																		},
																		"nativeSrc": "23571:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23571:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23518:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "23518:43:18"
																},
																"nativeSrc": "23518:72:18",
																"nodeType": "YulFunctionCall",
																"src": "23518:72:18"
															},
															"nativeSrc": "23518:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "23518:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23265:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23355:9:18",
														"nodeType": "YulTypedName",
														"src": "23355:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23367:6:18",
														"nodeType": "YulTypedName",
														"src": "23367:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23375:6:18",
														"nodeType": "YulTypedName",
														"src": "23375:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23386:4:18",
														"nodeType": "YulTypedName",
														"src": "23386:4:18",
														"type": ""
													}
												],
												"src": "23265:332:18"
											},
											{
												"body": {
													"nativeSrc": "23631:152:18",
													"nodeType": "YulBlock",
													"src": "23631:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23648:1:18",
																		"nodeType": "YulLiteral",
																		"src": "23648:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23651:77:18",
																		"nodeType": "YulLiteral",
																		"src": "23651:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23641:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23641:6:18"
																},
																"nativeSrc": "23641:88:18",
																"nodeType": "YulFunctionCall",
																"src": "23641:88:18"
															},
															"nativeSrc": "23641:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "23641:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23745:1:18",
																		"nodeType": "YulLiteral",
																		"src": "23745:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23748:4:18",
																		"nodeType": "YulLiteral",
																		"src": "23748:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23738:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23738:6:18"
																},
																"nativeSrc": "23738:15:18",
																"nodeType": "YulFunctionCall",
																"src": "23738:15:18"
															},
															"nativeSrc": "23738:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "23738:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23769:1:18",
																		"nodeType": "YulLiteral",
																		"src": "23769:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23772:4:18",
																		"nodeType": "YulLiteral",
																		"src": "23772:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23762:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23762:6:18"
																},
																"nativeSrc": "23762:15:18",
																"nodeType": "YulFunctionCall",
																"src": "23762:15:18"
															},
															"nativeSrc": "23762:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "23762:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "23603:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "23603:180:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting not approved yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request already approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610140575f3560e01c80638ac5dea1116100b6578063c87b56dd1161007a578063c87b56dd14610336578063ca5e0e8814610366578063e973799a14610397578063e985e9c5146103b3578063ecedc680146103e3578063f2fde38b1461041457610140565b80638ac5dea1146102a65780638da5cb5b146102c257806395d89b41146102e0578063a22cb465146102fe578063b88d4fde1461031a57610140565b80632e410e8e116101085780632e410e8e146101fa57806342842e0e1461020457806342966c68146102205780636352211e1461023c57806370a082311461026c578063715018a61461029c57610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806323b872dd146101de575b5f80fd5b61015e60048036038101906101599190611f4e565b610430565b60405161016b9190611f93565b60405180910390f35b61017c610441565b6040516101899190612036565b60405180910390f35b6101ac60048036038101906101a79190612089565b6104d0565b6040516101b991906120f3565b60405180910390f35b6101dc60048036038101906101d79190612136565b6104eb565b005b6101f860048036038101906101f39190612174565b610501565b005b610202610600565b005b61021e60048036038101906102199190612174565b610624565b005b61023a60048036038101906102359190612089565b610643565b005b61025660048036038101906102519190612089565b610659565b60405161026391906120f3565b60405180910390f35b610286600480360381019061028191906121c4565b61066a565b60405161029391906121fe565b60405180910390f35b6102a4610720565b005b6102c060048036038101906102bb9190612343565b610733565b005b6102ca6108b3565b6040516102d791906120f3565b60405180910390f35b6102e86108db565b6040516102f59190612036565b60405180910390f35b610318600480360381019061031391906123b4565b61096b565b005b610334600480360381019061032f9190612490565b610981565b005b610350600480360381019061034b9190612089565b61099e565b60405161035d9190612036565b60405180910390f35b610380600480360381019061037b91906121c4565b6109b0565b60405161038e929190612510565b60405180910390f35b6103b160048036038101906103ac91906121c4565b610a62565b005b6103cd60048036038101906103c8919061253e565b610b57565b6040516103da9190611f93565b60405180910390f35b6103fd60048036038101906103f891906121c4565b610be5565b60405161040b929190612510565b60405180910390f35b61042e600480360381019061042991906121c4565b610cd0565b005b5f61043a82610d54565b9050919050565b60605f805461044f906125a9565b80601f016020809104026020016040519081016040528092919081815260200182805461047b906125a9565b80156104c65780601f1061049d576101008083540402835291602001916104c6565b820191905f5260205f20905b8154815290600101906020018083116104a957829003601f168201915b5050505050905090565b5f6104da82610db4565b506104e482610e3a565b9050919050565b6104fd82826104f8610e73565b610e7a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610571575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161056891906120f3565b60405180910390fd5b5f610584838361057f610e73565b610e8c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105fa578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105f1939291906125d9565b60405180910390fd5b50505050565b610608611097565b600160095f6101000a81548160ff021916908315150217905550565b61063e83838360405180602001604052805f815250610981565b505050565b6106555f82610650610e73565b610e8c565b5050565b5f61066382610db4565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106db575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106d291906120f3565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610728611097565b6107315f61111e565b565b61073b611097565b60095f9054906101000a900460ff16610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078090612658565b60405180910390fd5b5f60085f81548092919061079c906126a3565b9190505590506107b36107ad6108b3565b826111e1565b6107bd81836111fe565b60405180604001604052808381526020015f1515815250600b5f6107df6108b3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01908161082b9190612887565b506020820151816001015f6101000a81548160ff021916908315150217905550905050808260405161085d9190612990565b604051809103902061086d6108b3565b73ffffffffffffffffffffffffffffffffffffffff167f5d524e0183e95410ff30df610eeef1541403d23325ff607098b786db901f87d260405160405180910390a45050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108ea906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610916906125a9565b80156109615780601f1061093857610100808354040283529160200191610961565b820191905f5260205f20905b81548152906001019060200180831161094457829003601f168201915b5050505050905090565b61097d610976610e73565b8383611258565b5050565b61098c848484610501565b610998848484846113c1565b50505050565b60606109a982611573565b9050919050565b600b602052805f5260405f205f91509050805f0180546109cf906125a9565b80601f01602080910402602001604051908101604052809291908181526020018280546109fb906125a9565b8015610a465780601f10610a1d57610100808354040283529160200191610a46565b820191905f5260205f20905b815481529060010190602001808311610a2957829003601f168201915b505050505090806001015f9054906101000a900460ff16905082565b610a6a611097565b5f1515600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900460ff16151514610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906129f0565b60405180910390fd5b6001600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a81548160ff02191690831515021790555050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60605f80600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f01816001015f9054906101000a900460ff16818054610c48906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c74906125a9565b8015610cbf5780601f10610c9657610100808354040283529160200191610cbf565b820191905f5260205f20905b815481529060010190602001808311610ca257829003601f168201915b505050505091509250925050915091565b610cd8611097565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d48575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d3f91906120f3565b60405180910390fd5b610d518161111e565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610dad5750610dac8261167e565b5b9050919050565b5f80610dbf8361175f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e3157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e2891906121fe565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e878383836001611798565b505050565b5f80610e978461175f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ed857610ed7818486611957565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f6357610f175f855f80611798565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610fe257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61109f610e73565b73ffffffffffffffffffffffffffffffffffffffff166110bd6108b3565b73ffffffffffffffffffffffffffffffffffffffff161461111c576110e0610e73565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161111391906120f3565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111fa828260405180602001604052805f815250611a1a565b5050565b8060065f8481526020019081526020015f20908161121c9190612887565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161124c91906121fe565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112c857816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112bf91906120f3565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113b49190611f93565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561156d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611404610e73565b8685856040518563ffffffff1660e01b81526004016114269493929190612a60565b6020604051808303815f875af192505050801561146157506040513d601f19601f8201168201806040525081019061145e9190612abe565b60015b6114e2573d805f811461148f576040519150601f19603f3d011682016040523d82523d5f602084013e611494565b606091505b505f8151036114da57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114d191906120f3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461156b57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161156291906120f3565b60405180910390fd5b505b50505050565b606061157e82610db4565b505f60065f8481526020019081526020015f20805461159c906125a9565b80601f01602080910402602001604051908101604052809291908181526020018280546115c8906125a9565b80156116135780601f106115ea57610100808354040283529160200191611613565b820191905f5260205f20905b8154815290600101906020018083116115f657829003601f168201915b505050505090505f611623611a35565b90505f815103611637578192505050611679565b5f8251111561166b578082604051602001611653929190612ae9565b60405160208183030381529060405292505050611679565b61167484611a4b565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061174857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611758575061175782611ab1565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806117d057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611902575f6117df84610db4565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561184957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561185c575061185a8184610b57565b155b1561189e57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161189591906120f3565b60405180910390fd5b811561190057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611962838383611b1a565b611a15575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119d657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119cd91906121fe565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a0c929190612b0c565b60405180910390fd5b505050565b611a248383611bda565b611a305f8484846113c1565b505050565b606060405180602001604052805f815250905090565b6060611a5682610db4565b505f611a60611a35565b90505f815111611a7e5760405180602001604052805f815250611aa9565b80611a8884611ccd565b604051602001611a99929190612ae9565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bd157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b925750611b918484610b57565b5b80611bd057508273ffffffffffffffffffffffffffffffffffffffff16611bb883610e3a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c4a575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c4191906120f3565b60405180910390fd5b5f611c5683835f610e8c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cc8575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611cbf91906120f3565b60405180910390fd5b505050565b60605f6001611cdb84611d97565b0190505f8167ffffffffffffffff811115611cf957611cf861221f565b5b6040519080825280601f01601f191660200182016040528015611d2b5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611d8c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d8157611d80612b33565b5b0494505f8503611d38575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611df3577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611de957611de8612b33565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e30576d04ee2d6d415b85acef81000000008381611e2657611e25612b33565b5b0492506020810190505b662386f26fc100008310611e5f57662386f26fc100008381611e5557611e54612b33565b5b0492506010810190505b6305f5e1008310611e88576305f5e1008381611e7e57611e7d612b33565b5b0492506008810190505b6127108310611ead576127108381611ea357611ea2612b33565b5b0492506004810190505b60648310611ed05760648381611ec657611ec5612b33565b5b0492506002810190505b600a8310611edf576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f2d81611ef9565b8114611f37575f80fd5b50565b5f81359050611f4881611f24565b92915050565b5f60208284031215611f6357611f62611ef1565b5b5f611f7084828501611f3a565b91505092915050565b5f8115159050919050565b611f8d81611f79565b82525050565b5f602082019050611fa65f830184611f84565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611fe3578082015181840152602081019050611fc8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61200882611fac565b6120128185611fb6565b9350612022818560208601611fc6565b61202b81611fee565b840191505092915050565b5f6020820190508181035f83015261204e8184611ffe565b905092915050565b5f819050919050565b61206881612056565b8114612072575f80fd5b50565b5f813590506120838161205f565b92915050565b5f6020828403121561209e5761209d611ef1565b5b5f6120ab84828501612075565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120dd826120b4565b9050919050565b6120ed816120d3565b82525050565b5f6020820190506121065f8301846120e4565b92915050565b612115816120d3565b811461211f575f80fd5b50565b5f813590506121308161210c565b92915050565b5f806040838503121561214c5761214b611ef1565b5b5f61215985828601612122565b925050602061216a85828601612075565b9150509250929050565b5f805f6060848603121561218b5761218a611ef1565b5b5f61219886828701612122565b93505060206121a986828701612122565b92505060406121ba86828701612075565b9150509250925092565b5f602082840312156121d9576121d8611ef1565b5b5f6121e684828501612122565b91505092915050565b6121f881612056565b82525050565b5f6020820190506122115f8301846121ef565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61225582611fee565b810181811067ffffffffffffffff821117156122745761227361221f565b5b80604052505050565b5f612286611ee8565b9050612292828261224c565b919050565b5f67ffffffffffffffff8211156122b1576122b061221f565b5b6122ba82611fee565b9050602081019050919050565b828183375f83830152505050565b5f6122e76122e284612297565b61227d565b9050828152602081018484840111156123035761230261221b565b5b61230e8482856122c7565b509392505050565b5f82601f83011261232a57612329612217565b5b813561233a8482602086016122d5565b91505092915050565b5f6020828403121561235857612357611ef1565b5b5f82013567ffffffffffffffff81111561237557612374611ef5565b5b61238184828501612316565b91505092915050565b61239381611f79565b811461239d575f80fd5b50565b5f813590506123ae8161238a565b92915050565b5f80604083850312156123ca576123c9611ef1565b5b5f6123d785828601612122565b92505060206123e8858286016123a0565b9150509250929050565b5f67ffffffffffffffff82111561240c5761240b61221f565b5b61241582611fee565b9050602081019050919050565b5f61243461242f846123f2565b61227d565b9050828152602081018484840111156124505761244f61221b565b5b61245b8482856122c7565b509392505050565b5f82601f83011261247757612476612217565b5b8135612487848260208601612422565b91505092915050565b5f805f80608085870312156124a8576124a7611ef1565b5b5f6124b587828801612122565b94505060206124c687828801612122565b93505060406124d787828801612075565b925050606085013567ffffffffffffffff8111156124f8576124f7611ef5565b5b61250487828801612463565b91505092959194509250565b5f6040820190508181035f8301526125288185611ffe565b90506125376020830184611f84565b9392505050565b5f806040838503121561255457612553611ef1565b5b5f61256185828601612122565b925050602061257285828601612122565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806125c057607f821691505b6020821081036125d3576125d261257c565b5b50919050565b5f6060820190506125ec5f8301866120e4565b6125f960208301856121ef565b61260660408301846120e4565b949350505050565b7f4d696e74696e67206e6f7420617070726f7665642079657400000000000000005f82015250565b5f612642601883611fb6565b915061264d8261260e565b602082019050919050565b5f6020820190508181035f83015261266f81612636565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126ad82612056565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126df576126de612676565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261270b565b612750868361270b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61278b61278661278184612056565b612768565b612056565b9050919050565b5f819050919050565b6127a483612771565b6127b86127b082612792565b848454612717565b825550505050565b5f90565b6127cc6127c0565b6127d781848461279b565b505050565b5b818110156127fa576127ef5f826127c4565b6001810190506127dd565b5050565b601f82111561283f57612810816126ea565b612819846126fc565b81016020851015612828578190505b61283c612834856126fc565b8301826127dc565b50505b505050565b5f82821c905092915050565b5f61285f5f1984600802612844565b1980831691505092915050565b5f6128778383612850565b9150826002028217905092915050565b61289082611fac565b67ffffffffffffffff8111156128a9576128a861221f565b5b6128b382546125a9565b6128be8282856127fe565b5f60209050601f8311600181146128ef575f84156128dd578287015190505b6128e7858261286c565b86555061294e565b601f1984166128fd866126ea565b5f5b82811015612924578489015182556001820191506020850194506020810190506128ff565b86831015612941578489015161293d601f891682612850565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f61296a82611fac565b6129748185612956565b9350612984818560208601611fc6565b80840191505092915050565b5f61299b8284612960565b915081905092915050565b7f5265717565737420616c726561647920617070726f76656400000000000000005f82015250565b5f6129da601883611fb6565b91506129e5826129a6565b602082019050919050565b5f6020820190508181035f830152612a07816129ce565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612a3282612a0e565b612a3c8185612a18565b9350612a4c818560208601611fc6565b612a5581611fee565b840191505092915050565b5f608082019050612a735f8301876120e4565b612a8060208301866120e4565b612a8d60408301856121ef565b8181036060830152612a9f8184612a28565b905095945050505050565b5f81519050612ab881611f24565b92915050565b5f60208284031215612ad357612ad2611ef1565b5b5f612ae084828501612aaa565b91505092915050565b5f612af48285612960565b9150612b008284612960565b91508190509392505050565b5f604082019050612b1f5f8301856120e4565b612b2c60208301846121ef565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212208a18682d9a0e14e373013daa15354f76413986a0fd00ebc1ed6c1134f601838964736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AC5DEA1 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xCA5E0E88 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xE973799A EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xECEDC680 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x414 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x8AC5DEA1 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x31A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x2E410E8E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x2E410E8E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29C JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x720 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0xCD0 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x43A DUP3 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47B SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP PUSH2 0x4E4 DUP3 PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FD DUP3 DUP3 PUSH2 0x4F8 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE7A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x571 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x584 DUP4 DUP4 PUSH2 0x57F PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FA JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x63E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x981 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x655 PUSH0 DUP3 PUSH2 0x650 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x663 DUP3 PUSH2 0xDB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x728 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x731 PUSH0 PUSH2 0x111E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x73B PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x79C SWAP1 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x7B3 PUSH2 0x7AD PUSH2 0x8B3 JUMP JUMPDEST DUP3 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x7BD DUP2 DUP4 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH0 PUSH2 0x7DF PUSH2 0x8B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x2887 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x86D PUSH2 0x8B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D524E0183E95410FF30DF610EEEF1541403D23325FF607098B786DB901F87D2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8EA SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x938 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97D PUSH2 0x976 PUSH2 0xE73 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1258 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x98C DUP5 DUP5 DUP5 PUSH2 0x501 JUMP JUMPDEST PUSH2 0x998 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13C1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A9 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x9CF SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FB SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xA6A PUSH2 0x1097 JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP1 PUSH2 0x29F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 DUP1 SLOAD PUSH2 0xC48 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC74 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC96 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xCD8 PUSH2 0x1097 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0x111E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDAD JUMPI POP PUSH2 0xDAC DUP3 PUSH2 0x167E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDBF DUP4 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE31 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE87 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1798 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE97 DUP5 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED8 JUMPI PUSH2 0xED7 DUP2 DUP5 DUP7 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF63 JUMPI PUSH2 0xF17 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE2 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x109F PUSH2 0xE73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10BD PUSH2 0x8B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111C JUMPI PUSH2 0x10E0 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11FA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1A1A JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x2887 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C8 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x156D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1404 PUSH2 0xE73 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1461 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14E2 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x14DA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x156B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x157E DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x159C SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15C8 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1613 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1613 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1623 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1637 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1679 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x166B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1653 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1674 DUP5 PUSH2 0x1A4B JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1748 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1758 JUMPI POP PUSH2 0x1757 DUP3 PUSH2 0x1AB1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x17D0 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1902 JUMPI PUSH0 PUSH2 0x17DF DUP5 PUSH2 0xDB4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1849 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x185C JUMPI POP PUSH2 0x185A DUP2 DUP5 PUSH2 0xB57 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x189E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1900 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1962 DUP4 DUP4 DUP4 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1A15 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CD SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0C SWAP3 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A24 DUP4 DUP4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1A30 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x13C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A56 DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP PUSH0 PUSH2 0x1A60 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1A7E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1AA9 JUMP JUMPDEST DUP1 PUSH2 0x1A88 DUP5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A99 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BD1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B92 JUMPI POP PUSH2 0x1B91 DUP5 DUP5 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BD0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BB8 DUP4 PUSH2 0xE3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C56 DUP4 DUP4 PUSH0 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBF SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1CDB DUP5 PUSH2 0x1D97 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH2 0x1CF8 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D2B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1D8C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1D38 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1DF3 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E30 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E5F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E88 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1EAD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1EA3 JUMPI PUSH2 0x1EA2 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1ED0 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x2B33 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1EDF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2D DUP2 PUSH2 0x1EF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F48 DUP2 PUSH2 0x1F24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F62 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F70 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F8D DUP2 PUSH2 0x1F79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FE3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FC8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2008 DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x2012 DUP2 DUP6 PUSH2 0x1FB6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2022 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x202B DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x204E DUP2 DUP5 PUSH2 0x1FFE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2068 DUP2 PUSH2 0x2056 JUMP JUMPDEST DUP2 EQ PUSH2 0x2072 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2083 DUP2 PUSH2 0x205F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209E JUMPI PUSH2 0x209D PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20AB DUP5 DUP3 DUP6 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20DD DUP3 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20ED DUP2 PUSH2 0x20D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2106 PUSH0 DUP4 ADD DUP5 PUSH2 0x20E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x20D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x211F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2130 DUP2 PUSH2 0x210C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x214C JUMPI PUSH2 0x214B PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2159 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x216A DUP6 DUP3 DUP7 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x218B JUMPI PUSH2 0x218A PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2198 DUP7 DUP3 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21A9 DUP7 DUP3 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21BA DUP7 DUP3 DUP8 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E6 DUP5 DUP3 DUP6 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F8 DUP2 PUSH2 0x2056 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2211 PUSH0 DUP4 ADD DUP5 PUSH2 0x21EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2255 DUP3 PUSH2 0x1FEE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2274 JUMPI PUSH2 0x2273 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2286 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2292 DUP3 DUP3 PUSH2 0x224C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22B1 JUMPI PUSH2 0x22B0 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH2 0x22BA DUP3 PUSH2 0x1FEE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22E7 PUSH2 0x22E2 DUP5 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2303 JUMPI PUSH2 0x2302 PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH2 0x230E DUP5 DUP3 DUP6 PUSH2 0x22C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x233A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2358 JUMPI PUSH2 0x2357 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2375 JUMPI PUSH2 0x2374 PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST PUSH2 0x2381 DUP5 DUP3 DUP6 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2393 DUP2 PUSH2 0x1F79 JUMP JUMPDEST DUP2 EQ PUSH2 0x239D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AE DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CA JUMPI PUSH2 0x23C9 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D7 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23E8 DUP6 DUP3 DUP7 ADD PUSH2 0x23A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x240C JUMPI PUSH2 0x240B PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH2 0x2415 DUP3 PUSH2 0x1FEE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2434 PUSH2 0x242F DUP5 PUSH2 0x23F2 JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2450 JUMPI PUSH2 0x244F PUSH2 0x221B JUMP JUMPDEST JUMPDEST PUSH2 0x245B DUP5 DUP3 DUP6 PUSH2 0x22C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2477 JUMPI PUSH2 0x2476 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2487 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A7 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B5 DUP8 DUP3 DUP9 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24C6 DUP8 DUP3 DUP9 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x24D7 DUP8 DUP3 DUP9 ADD PUSH2 0x2075 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F8 JUMPI PUSH2 0x24F7 PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST PUSH2 0x2504 DUP8 DUP3 DUP9 ADD PUSH2 0x2463 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2528 DUP2 DUP6 PUSH2 0x1FFE JUMP JUMPDEST SWAP1 POP PUSH2 0x2537 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2561 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2572 DUP6 DUP3 DUP7 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D3 JUMPI PUSH2 0x25D2 PUSH2 0x257C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25EC PUSH0 DUP4 ADD DUP7 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x25F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21EF JUMP JUMPDEST PUSH2 0x2606 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E67206E6F7420617070726F766564207965740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2642 PUSH1 0x18 DUP4 PUSH2 0x1FB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x264D DUP3 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x266F DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AD DUP3 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26DF JUMPI PUSH2 0x26DE PUSH2 0x2676 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2746 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x2750 DUP7 DUP4 PUSH2 0x270B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x278B PUSH2 0x2786 PUSH2 0x2781 DUP5 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x2768 JUMP JUMPDEST PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A4 DUP4 PUSH2 0x2771 JUMP JUMPDEST PUSH2 0x27B8 PUSH2 0x27B0 DUP3 PUSH2 0x2792 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2717 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x27CC PUSH2 0x27C0 JUMP JUMPDEST PUSH2 0x27D7 DUP2 DUP5 DUP5 PUSH2 0x279B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27FA JUMPI PUSH2 0x27EF PUSH0 DUP3 PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x283F JUMPI PUSH2 0x2810 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2819 DUP5 PUSH2 0x26FC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2828 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x283C PUSH2 0x2834 DUP6 PUSH2 0x26FC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27DC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x285F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2844 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2877 DUP4 DUP4 PUSH2 0x2850 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2890 DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28A9 JUMPI PUSH2 0x28A8 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH2 0x28B3 DUP3 SLOAD PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0x28BE DUP3 DUP3 DUP6 PUSH2 0x27FE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28EF JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28DD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28E7 DUP6 DUP3 PUSH2 0x286C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x294E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28FD DUP7 PUSH2 0x26EA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2924 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28FF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2941 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x293D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2850 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x296A DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x2974 DUP2 DUP6 PUSH2 0x2956 JUMP JUMPDEST SWAP4 POP PUSH2 0x2984 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x299B DUP3 DUP5 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265717565737420616C726561647920617070726F7665640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29DA PUSH1 0x18 DUP4 PUSH2 0x1FB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E5 DUP3 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A07 DUP2 PUSH2 0x29CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A32 DUP3 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x2A3C DUP2 DUP6 PUSH2 0x2A18 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x2A55 DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2A73 PUSH0 DUP4 ADD DUP8 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x2A80 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x2A8D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2A9F DUP2 DUP5 PUSH2 0x2A28 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AB8 DUP2 PUSH2 0x1F24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AD3 JUMPI PUSH2 0x2AD2 PUSH2 0x1EF1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x2AAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF4 DUP3 DUP6 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B00 DUP3 DUP5 PUSH2 0x2960 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B1F PUSH0 DUP4 ADD DUP6 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x2B2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 XOR PUSH9 0x2D9A0E14E373013DAA ISZERO CALLDATALOAD 0x4F PUSH23 0x413986A0FD00EBC1ED6C1134F601838964736F6C634300 ADDMOD OR STOP CALLER ",
							"sourceMap": "326:2015:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2134:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1392:86:17;;;:::i;:::-;;4787:132:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;561:314:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;975:411:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1939:189:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;561:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1484:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:189:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2134:205:17;2269:4;2296:36;2320:11;2296:23;:36::i;:::-;2289:43;;2134:205;;;:::o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1392:86:17:-;1531:13:0;:11;:13::i;:::-;1467:4:17::1;1448:16;;:23;;;;;;;;;;;;;;;;;;1392:86::o:0;4787:132:5:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;561:314:8:-;826:42;842:1;846:7;855:12;:10;:12::i;:::-;826:7;:42::i;:::-;;561:314;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;975:411:17:-;1531:13:0;:11;:13::i;:::-;1050:16:17::1;;;;;;;;;;;1042:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1105:15;1123:12;;:14;;;;;;;;;:::i;:::-;;;;;1105:32;;1147:27;1157:7;:5;:7::i;:::-;1166;1147:9;:27::i;:::-;1184:26;1197:7;1206:3;1184:12;:26::i;:::-;1253:74;;;;;;;;1284:3;1253:74;;;;1311:5;1253:74;;;;::::0;1229:12:::1;:21;1242:7;:5;:7::i;:::-;1229:21;;;;;;;;;;;;;;;:98;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:7;1366:3;1343:36;;;;;;:::i;:::-;;;;;;;;1357:7;:5;:7::i;:::-;1343:36;;;;;;;;;;;;1032:354;975:411:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1939:189:17:-;2062:13;2098:23;2113:7;2098:14;:23::i;:::-;2091:30;;1939:189;;;:::o;561:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1484:186::-;1531:13:0;:11;:13::i;:::-;1587:5:17::1;1558:34;;:12;:16;1571:2;1558:16;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:34;;;1550:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1659:4;1631:12;:16;1644:2;1631:16;;;;;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;1484:186:::0;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1676:189:17:-;1733:13;1748:4;1764:27;1794:12;:16;1807:2;1794:16;;;;;;;;;;;;;;;1764:46;;1828:7;:11;;1841:7;:16;;;;;;;;;;;;1820:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:189;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;937:207:9:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:5:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10633:100:5:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:9:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;1561:300:5:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:13:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;6376:272:5:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;637:698:12:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;12214:916:15:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:117::-;6311:1;6308;6301:12;6325:117;6434:1;6431;6424:12;6448:180;6496:77;6493:1;6486:88;6593:4;6590:1;6583:15;6617:4;6614:1;6607:15;6634:281;6717:27;6739:4;6717:27;:::i;:::-;6709:6;6705:40;6847:6;6835:10;6832:22;6811:18;6799:10;6796:34;6793:62;6790:88;;;6858:18;;:::i;:::-;6790:88;6898:10;6894:2;6887:22;6677:238;6634:281;;:::o;6921:129::-;6955:6;6982:20;;:::i;:::-;6972:30;;7011:33;7039:4;7031:6;7011:33;:::i;:::-;6921:129;;;:::o;7056:308::-;7118:4;7208:18;7200:6;7197:30;7194:56;;;7230:18;;:::i;:::-;7194:56;7268:29;7290:6;7268:29;:::i;:::-;7260:37;;7352:4;7346;7342:15;7334:23;;7056:308;;;:::o;7370:146::-;7467:6;7462:3;7457;7444:30;7508:1;7499:6;7494:3;7490:16;7483:27;7370:146;;;:::o;7522:425::-;7600:5;7625:66;7641:49;7683:6;7641:49;:::i;:::-;7625:66;:::i;:::-;7616:75;;7714:6;7707:5;7700:21;7752:4;7745:5;7741:16;7790:3;7781:6;7776:3;7772:16;7769:25;7766:112;;;7797:79;;:::i;:::-;7766:112;7887:54;7934:6;7929:3;7924;7887:54;:::i;:::-;7606:341;7522:425;;;;;:::o;7967:340::-;8023:5;8072:3;8065:4;8057:6;8053:17;8049:27;8039:122;;8080:79;;:::i;:::-;8039:122;8197:6;8184:20;8222:79;8297:3;8289:6;8282:4;8274:6;8270:17;8222:79;:::i;:::-;8213:88;;8029:278;7967:340;;;;:::o;8313:509::-;8382:6;8431:2;8419:9;8410:7;8406:23;8402:32;8399:119;;;8437:79;;:::i;:::-;8399:119;8585:1;8574:9;8570:17;8557:31;8615:18;8607:6;8604:30;8601:117;;;8637:79;;:::i;:::-;8601:117;8742:63;8797:7;8788:6;8777:9;8773:22;8742:63;:::i;:::-;8732:73;;8528:287;8313:509;;;;:::o;8828:116::-;8898:21;8913:5;8898:21;:::i;:::-;8891:5;8888:32;8878:60;;8934:1;8931;8924:12;8878:60;8828:116;:::o;8950:133::-;8993:5;9031:6;9018:20;9009:29;;9047:30;9071:5;9047:30;:::i;:::-;8950:133;;;;:::o;9089:468::-;9154:6;9162;9211:2;9199:9;9190:7;9186:23;9182:32;9179:119;;;9217:79;;:::i;:::-;9179:119;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:50;9532:7;9523:6;9512:9;9508:22;9490:50;:::i;:::-;9480:60;;9435:115;9089:468;;;;;:::o;9563:307::-;9624:4;9714:18;9706:6;9703:30;9700:56;;;9736:18;;:::i;:::-;9700:56;9774:29;9796:6;9774:29;:::i;:::-;9766:37;;9858:4;9852;9848:15;9840:23;;9563:307;;;:::o;9876:423::-;9953:5;9978:65;9994:48;10035:6;9994:48;:::i;:::-;9978:65;:::i;:::-;9969:74;;10066:6;10059:5;10052:21;10104:4;10097:5;10093:16;10142:3;10133:6;10128:3;10124:16;10121:25;10118:112;;;10149:79;;:::i;:::-;10118:112;10239:54;10286:6;10281:3;10276;10239:54;:::i;:::-;9959:340;9876:423;;;;;:::o;10318:338::-;10373:5;10422:3;10415:4;10407:6;10403:17;10399:27;10389:122;;10430:79;;:::i;:::-;10389:122;10547:6;10534:20;10572:78;10646:3;10638:6;10631:4;10623:6;10619:17;10572:78;:::i;:::-;10563:87;;10379:277;10318:338;;;;:::o;10662:943::-;10757:6;10765;10773;10781;10830:3;10818:9;10809:7;10805:23;10801:33;10798:120;;;10837:79;;:::i;:::-;10798:120;10957:1;10982:53;11027:7;11018:6;11007:9;11003:22;10982:53;:::i;:::-;10972:63;;10928:117;11084:2;11110:53;11155:7;11146:6;11135:9;11131:22;11110:53;:::i;:::-;11100:63;;11055:118;11212:2;11238:53;11283:7;11274:6;11263:9;11259:22;11238:53;:::i;:::-;11228:63;;11183:118;11368:2;11357:9;11353:18;11340:32;11399:18;11391:6;11388:30;11385:117;;;11421:79;;:::i;:::-;11385:117;11526:62;11580:7;11571:6;11560:9;11556:22;11526:62;:::i;:::-;11516:72;;11311:287;10662:943;;;;;;;:::o;11611:411::-;11746:4;11784:2;11773:9;11769:18;11761:26;;11833:9;11827:4;11823:20;11819:1;11808:9;11804:17;11797:47;11861:78;11934:4;11925:6;11861:78;:::i;:::-;11853:86;;11949:66;12011:2;12000:9;11996:18;11987:6;11949:66;:::i;:::-;11611:411;;;;;:::o;12028:474::-;12096:6;12104;12153:2;12141:9;12132:7;12128:23;12124:32;12121:119;;;12159:79;;:::i;:::-;12121:119;12279:1;12304:53;12349:7;12340:6;12329:9;12325:22;12304:53;:::i;:::-;12294:63;;12250:117;12406:2;12432:53;12477:7;12468:6;12457:9;12453:22;12432:53;:::i;:::-;12422:63;;12377:118;12028:474;;;;;:::o;12508:180::-;12556:77;12553:1;12546:88;12653:4;12650:1;12643:15;12677:4;12674:1;12667:15;12694:320;12738:6;12775:1;12769:4;12765:12;12755:22;;12822:1;12816:4;12812:12;12843:18;12833:81;;12899:4;12891:6;12887:17;12877:27;;12833:81;12961:2;12953:6;12950:14;12930:18;12927:38;12924:84;;12980:18;;:::i;:::-;12924:84;12745:269;12694:320;;;:::o;13020:442::-;13169:4;13207:2;13196:9;13192:18;13184:26;;13220:71;13288:1;13277:9;13273:17;13264:6;13220:71;:::i;:::-;13301:72;13369:2;13358:9;13354:18;13345:6;13301:72;:::i;:::-;13383;13451:2;13440:9;13436:18;13427:6;13383:72;:::i;:::-;13020:442;;;;;;:::o;13468:174::-;13608:26;13604:1;13596:6;13592:14;13585:50;13468:174;:::o;13648:366::-;13790:3;13811:67;13875:2;13870:3;13811:67;:::i;:::-;13804:74;;13887:93;13976:3;13887:93;:::i;:::-;14005:2;14000:3;13996:12;13989:19;;13648:366;;;:::o;14020:419::-;14186:4;14224:2;14213:9;14209:18;14201:26;;14273:9;14267:4;14263:20;14259:1;14248:9;14244:17;14237:47;14301:131;14427:4;14301:131;:::i;:::-;14293:139;;14020:419;;;:::o;14445:180::-;14493:77;14490:1;14483:88;14590:4;14587:1;14580:15;14614:4;14611:1;14604:15;14631:233;14670:3;14693:24;14711:5;14693:24;:::i;:::-;14684:33;;14739:66;14732:5;14729:77;14726:103;;14809:18;;:::i;:::-;14726:103;14856:1;14849:5;14845:13;14838:20;;14631:233;;;:::o;14870:141::-;14919:4;14942:3;14934:11;;14965:3;14962:1;14955:14;14999:4;14996:1;14986:18;14978:26;;14870:141;;;:::o;15017:93::-;15054:6;15101:2;15096;15089:5;15085:14;15081:23;15071:33;;15017:93;;;:::o;15116:107::-;15160:8;15210:5;15204:4;15200:16;15179:37;;15116:107;;;;:::o;15229:393::-;15298:6;15348:1;15336:10;15332:18;15371:97;15401:66;15390:9;15371:97;:::i;:::-;15489:39;15519:8;15508:9;15489:39;:::i;:::-;15477:51;;15561:4;15557:9;15550:5;15546:21;15537:30;;15610:4;15600:8;15596:19;15589:5;15586:30;15576:40;;15305:317;;15229:393;;;;;:::o;15628:60::-;15656:3;15677:5;15670:12;;15628:60;;;:::o;15694:142::-;15744:9;15777:53;15795:34;15804:24;15822:5;15804:24;:::i;:::-;15795:34;:::i;:::-;15777:53;:::i;:::-;15764:66;;15694:142;;;:::o;15842:75::-;15885:3;15906:5;15899:12;;15842:75;;;:::o;15923:269::-;16033:39;16064:7;16033:39;:::i;:::-;16094:91;16143:41;16167:16;16143:41;:::i;:::-;16135:6;16128:4;16122:11;16094:91;:::i;:::-;16088:4;16081:105;15999:193;15923:269;;;:::o;16198:73::-;16243:3;16198:73;:::o;16277:189::-;16354:32;;:::i;:::-;16395:65;16453:6;16445;16439:4;16395:65;:::i;:::-;16330:136;16277:189;;:::o;16472:186::-;16532:120;16549:3;16542:5;16539:14;16532:120;;;16603:39;16640:1;16633:5;16603:39;:::i;:::-;16576:1;16569:5;16565:13;16556:22;;16532:120;;;16472:186;;:::o;16664:543::-;16765:2;16760:3;16757:11;16754:446;;;16799:38;16831:5;16799:38;:::i;:::-;16883:29;16901:10;16883:29;:::i;:::-;16873:8;16869:44;17066:2;17054:10;17051:18;17048:49;;;17087:8;17072:23;;17048:49;17110:80;17166:22;17184:3;17166:22;:::i;:::-;17156:8;17152:37;17139:11;17110:80;:::i;:::-;16769:431;;16754:446;16664:543;;;:::o;17213:117::-;17267:8;17317:5;17311:4;17307:16;17286:37;;17213:117;;;;:::o;17336:169::-;17380:6;17413:51;17461:1;17457:6;17449:5;17446:1;17442:13;17413:51;:::i;:::-;17409:56;17494:4;17488;17484:15;17474:25;;17387:118;17336:169;;;;:::o;17510:295::-;17586:4;17732:29;17757:3;17751:4;17732:29;:::i;:::-;17724:37;;17794:3;17791:1;17787:11;17781:4;17778:21;17770:29;;17510:295;;;;:::o;17810:1395::-;17927:37;17960:3;17927:37;:::i;:::-;18029:18;18021:6;18018:30;18015:56;;;18051:18;;:::i;:::-;18015:56;18095:38;18127:4;18121:11;18095:38;:::i;:::-;18180:67;18240:6;18232;18226:4;18180:67;:::i;:::-;18274:1;18298:4;18285:17;;18330:2;18322:6;18319:14;18347:1;18342:618;;;;19004:1;19021:6;19018:77;;;19070:9;19065:3;19061:19;19055:26;19046:35;;19018:77;19121:67;19181:6;19174:5;19121:67;:::i;:::-;19115:4;19108:81;18977:222;18312:887;;18342:618;18394:4;18390:9;18382:6;18378:22;18428:37;18460:4;18428:37;:::i;:::-;18487:1;18501:208;18515:7;18512:1;18509:14;18501:208;;;18594:9;18589:3;18585:19;18579:26;18571:6;18564:42;18645:1;18637:6;18633:14;18623:24;;18692:2;18681:9;18677:18;18664:31;;18538:4;18535:1;18531:12;18526:17;;18501:208;;;18737:6;18728:7;18725:19;18722:179;;;18795:9;18790:3;18786:19;18780:26;18838:48;18880:4;18872:6;18868:17;18857:9;18838:48;:::i;:::-;18830:6;18823:64;18745:156;18722:179;18947:1;18943;18935:6;18931:14;18927:22;18921:4;18914:36;18349:611;;;18312:887;;17902:1303;;;17810:1395;;:::o;19211:148::-;19313:11;19350:3;19335:18;;19211:148;;;;:::o;19365:390::-;19471:3;19499:39;19532:5;19499:39;:::i;:::-;19554:89;19636:6;19631:3;19554:89;:::i;:::-;19547:96;;19652:65;19710:6;19705:3;19698:4;19691:5;19687:16;19652:65;:::i;:::-;19742:6;19737:3;19733:16;19726:23;;19475:280;19365:390;;;;:::o;19761:275::-;19893:3;19915:95;20006:3;19997:6;19915:95;:::i;:::-;19908:102;;20027:3;20020:10;;19761:275;;;;:::o;20042:174::-;20182:26;20178:1;20170:6;20166:14;20159:50;20042:174;:::o;20222:366::-;20364:3;20385:67;20449:2;20444:3;20385:67;:::i;:::-;20378:74;;20461:93;20550:3;20461:93;:::i;:::-;20579:2;20574:3;20570:12;20563:19;;20222:366;;;:::o;20594:419::-;20760:4;20798:2;20787:9;20783:18;20775:26;;20847:9;20841:4;20837:20;20833:1;20822:9;20818:17;20811:47;20875:131;21001:4;20875:131;:::i;:::-;20867:139;;20594:419;;;:::o;21019:98::-;21070:6;21104:5;21098:12;21088:22;;21019:98;;;:::o;21123:168::-;21206:11;21240:6;21235:3;21228:19;21280:4;21275:3;21271:14;21256:29;;21123:168;;;;:::o;21297:373::-;21383:3;21411:38;21443:5;21411:38;:::i;:::-;21465:70;21528:6;21523:3;21465:70;:::i;:::-;21458:77;;21544:65;21602:6;21597:3;21590:4;21583:5;21579:16;21544:65;:::i;:::-;21634:29;21656:6;21634:29;:::i;:::-;21629:3;21625:39;21618:46;;21387:283;21297:373;;;;:::o;21676:640::-;21871:4;21909:3;21898:9;21894:19;21886:27;;21923:71;21991:1;21980:9;21976:17;21967:6;21923:71;:::i;:::-;22004:72;22072:2;22061:9;22057:18;22048:6;22004:72;:::i;:::-;22086;22154:2;22143:9;22139:18;22130:6;22086:72;:::i;:::-;22205:9;22199:4;22195:20;22190:2;22179:9;22175:18;22168:48;22233:76;22304:4;22295:6;22233:76;:::i;:::-;22225:84;;21676:640;;;;;;;:::o;22322:141::-;22378:5;22409:6;22403:13;22394:22;;22425:32;22451:5;22425:32;:::i;:::-;22322:141;;;;:::o;22469:349::-;22538:6;22587:2;22575:9;22566:7;22562:23;22558:32;22555:119;;;22593:79;;:::i;:::-;22555:119;22713:1;22738:63;22793:7;22784:6;22773:9;22769:22;22738:63;:::i;:::-;22728:73;;22684:127;22469:349;;;;:::o;22824:435::-;23004:3;23026:95;23117:3;23108:6;23026:95;:::i;:::-;23019:102;;23138:95;23229:3;23220:6;23138:95;:::i;:::-;23131:102;;23250:3;23243:10;;22824:435;;;;;:::o;23265:332::-;23386:4;23424:2;23413:9;23409:18;23401:26;;23437:71;23505:1;23494:9;23490:17;23481:6;23437:71;:::i;:::-;23518:72;23586:2;23575:9;23571:18;23562:6;23518:72;:::i;:::-;23265:332;;;;;:::o;23603:180::-;23651:77;23648:1;23641:88;23748:4;23745:1;23738:15;23772:4;23769:1;23762:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2231600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"approveMintingAll()": "infinite",
								"approveMintingOne(address)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"getMintRequest(address)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintRequests(address)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"requestMint(string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "CODESIZE",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "tag",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 878,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 819,
									"end": 831,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 787,
									"end": 792,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 794,
									"end": 801,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 866,
									"end": 871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 863,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 847,
									"end": 863,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "FF"
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 847,
									"end": 871,
									"modifierDepth": 2,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 694,
									"end": 878,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "tag",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2202,
									"end": 2203,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "tag",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2223,
									"end": 2224,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2220,
									"end": 2233,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2311,
									"end": 2312,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2302,
									"end": 2313,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2296,
									"end": 2314,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2287,
									"end": 2290,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2283,
									"end": 2294,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2276,
									"end": 2315,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2248,
									"end": 2250,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2245,
									"end": 2246,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2241,
									"end": 2251,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "tag",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2359,
									"end": 2360,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2356,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2345,
									"end": 2348,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2341,
									"end": 2357,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2334,
									"end": 2361,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2183,
									"end": 2367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2121,
									"end": 2367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 2545,
									"end": 2551,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 2503,
									"end": 2552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 2487,
									"end": 2553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2478,
									"end": 2553,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2478,
									"end": 2553,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2576,
									"end": 2582,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2569,
									"end": 2574,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2562,
									"end": 2583,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2614,
									"end": 2618,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2607,
									"end": 2612,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2652,
									"end": 2655,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2638,
									"end": 2641,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2631,
									"end": 2656,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 2659,
									"end": 2738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "tag",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 2794,
									"end": 2800,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2789,
									"end": 2792,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 2749,
									"end": 2801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "tag",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2807,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2373,
									"end": 2807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2894,
									"end": 2899,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2943,
									"end": 2946,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2936,
									"end": 2940,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2928,
									"end": 2934,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2924,
									"end": 2941,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 2951,
									"end": 3030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "tag",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "tag",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3055,
									"end": 3068,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 3172,
									"end": 3175,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3157,
									"end": 3161,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3149,
									"end": 3155,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 3145,
									"end": 3162,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 3086,
									"end": 3176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "tag",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3077,
									"end": 3176,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3077,
									"end": 3176,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2900,
									"end": 3182,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3296,
									"end": 3302,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3312,
									"end": 3318,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3361,
									"end": 3363,
									"name": "PUSH",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 3349,
									"end": 3358,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 3336,
									"end": 3359,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 3332,
									"end": 3364,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 3367,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "tag",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "tag",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3487,
									"end": 3488,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3512,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 3568,
									"end": 3575,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 3559,
									"end": 3565,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3548,
									"end": 3557,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 3544,
									"end": 3566,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3512,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 3512,
									"end": 3576,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3512,
									"end": 3576,
									"name": "tag",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 3512,
									"end": 3576,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3502,
									"end": 3576,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 3502,
									"end": 3576,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3586,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3646,
									"end": 3648,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3635,
									"end": 3644,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3631,
									"end": 3649,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3650,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3669,
									"end": 3675,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3666,
									"end": 3696,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3663,
									"end": 3780,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3663,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 3663,
									"end": 3780,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3699,
									"end": 3778,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "103"
								},
								{
									"begin": 3699,
									"end": 3778,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 3699,
									"end": 3778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3699,
									"end": 3778,
									"name": "tag",
									"source": 18,
									"value": "103"
								},
								{
									"begin": 3699,
									"end": 3778,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3663,
									"end": 3780,
									"name": "tag",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 3663,
									"end": 3780,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3878,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "104"
								},
								{
									"begin": 3870,
									"end": 3877,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 3861,
									"end": 3867,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3850,
									"end": 3859,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 3846,
									"end": 3868,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3878,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 3804,
									"end": 3878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3878,
									"name": "tag",
									"source": 18,
									"value": "104"
								},
								{
									"begin": 3804,
									"end": 3878,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3794,
									"end": 3878,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3794,
									"end": 3878,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3596,
									"end": 3888,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3948,
									"end": 3950,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 3937,
									"end": 3946,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3933,
									"end": 3951,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3927,
									"end": 3952,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 3979,
									"end": 3997,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3971,
									"end": 3977,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3968,
									"end": 3998,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3965,
									"end": 4082,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3965,
									"end": 4082,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 3965,
									"end": 4082,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4001,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "106"
								},
								{
									"begin": 4001,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 4001,
									"end": 4080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4001,
									"end": 4080,
									"name": "tag",
									"source": 18,
									"value": "106"
								},
								{
									"begin": 4001,
									"end": 4080,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3965,
									"end": 4082,
									"name": "tag",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 3965,
									"end": 4082,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4106,
									"end": 4180,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 4172,
									"end": 4179,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4163,
									"end": 4169,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4152,
									"end": 4161,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 4148,
									"end": 4170,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4106,
									"end": 4180,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 4106,
									"end": 4180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4106,
									"end": 4180,
									"name": "tag",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 4106,
									"end": 4180,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4096,
									"end": 4180,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4096,
									"end": 4180,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3898,
									"end": 4190,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3188,
									"end": 4197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4289,
									"end": 4294,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4283,
									"end": 4295,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4273,
									"end": 4295,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4273,
									"end": 4295,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4308,
									"end": 4488,
									"name": "tag",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 4308,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4356,
									"end": 4433,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4353,
									"end": 4354,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4346,
									"end": 4434,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4453,
									"end": 4457,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 4450,
									"end": 4451,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 4443,
									"end": 4458,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4477,
									"end": 4481,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 4474,
									"end": 4475,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4467,
									"end": 4482,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4538,
									"end": 4544,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4575,
									"end": 4576,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4569,
									"end": 4573,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4565,
									"end": 4577,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 4555,
									"end": 4577,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4555,
									"end": 4577,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4622,
									"end": 4623,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4616,
									"end": 4620,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4612,
									"end": 4624,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4643,
									"end": 4661,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "111"
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4699,
									"end": 4703,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 4691,
									"end": 4697,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4704,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4677,
									"end": 4704,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4677,
									"end": 4704,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "tag",
									"source": 18,
									"value": "111"
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4761,
									"end": 4763,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4753,
									"end": 4759,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4750,
									"end": 4764,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4730,
									"end": 4748,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4727,
									"end": 4765,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "112"
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "113"
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 4780,
									"end": 4798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "tag",
									"source": 18,
									"value": "113"
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "tag",
									"source": 18,
									"value": "112"
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4545,
									"end": 4814,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4494,
									"end": 4814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "tag",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4869,
									"end": 4873,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4892,
									"end": 4895,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4884,
									"end": 4895,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4884,
									"end": 4895,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4912,
									"end": 4913,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4905,
									"end": 4919,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4949,
									"end": 4953,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 4947,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 4928,
									"end": 4954,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4928,
									"end": 4954,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4820,
									"end": 4961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "tag",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5004,
									"end": 5010,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5051,
									"end": 5053,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5046,
									"end": 5048,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 5039,
									"end": 5044,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5035,
									"end": 5049,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5031,
									"end": 5054,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 5021,
									"end": 5054,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5021,
									"end": 5054,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4967,
									"end": 5060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "tag",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5110,
									"end": 5118,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5160,
									"end": 5165,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5154,
									"end": 5158,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5150,
									"end": 5166,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 5129,
									"end": 5166,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5129,
									"end": 5166,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5066,
									"end": 5173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "tag",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5248,
									"end": 5254,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5298,
									"end": 5299,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 5286,
									"end": 5296,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5282,
									"end": 5300,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "118"
								},
								{
									"begin": 5351,
									"end": 5417,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5340,
									"end": 5349,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 5321,
									"end": 5418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "tag",
									"source": 18,
									"value": "118"
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "119"
								},
								{
									"begin": 5469,
									"end": 5477,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5458,
									"end": 5467,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 5439,
									"end": 5478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "tag",
									"source": 18,
									"value": "119"
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5427,
									"end": 5478,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 5427,
									"end": 5478,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5511,
									"end": 5515,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5507,
									"end": 5516,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 5500,
									"end": 5505,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5496,
									"end": 5517,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 5487,
									"end": 5517,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 5487,
									"end": 5517,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5560,
									"end": 5564,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5550,
									"end": 5558,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5546,
									"end": 5565,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 5539,
									"end": 5544,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5536,
									"end": 5566,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 5526,
									"end": 5566,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5526,
									"end": 5566,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5255,
									"end": 5572,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5255,
									"end": 5572,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5179,
									"end": 5572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "tag",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5615,
									"end": 5622,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5633,
									"end": 5649,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5633,
									"end": 5649,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5578,
									"end": 5655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "tag",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5689,
									"end": 5692,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5710,
									"end": 5715,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5703,
									"end": 5715,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5703,
									"end": 5715,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5661,
									"end": 5721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "tag",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5777,
									"end": 5786,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "123"
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "124"
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "125"
								},
								{
									"begin": 5855,
									"end": 5860,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 5837,
									"end": 5861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "tag",
									"source": 18,
									"value": "125"
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 5828,
									"end": 5862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "tag",
									"source": 18,
									"value": "124"
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 5810,
									"end": 5863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "tag",
									"source": 18,
									"value": "123"
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5797,
									"end": 5863,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5797,
									"end": 5863,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5727,
									"end": 5869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5918,
									"end": 5921,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5939,
									"end": 5944,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5932,
									"end": 5944,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5932,
									"end": 5944,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5875,
									"end": 5950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "128"
								},
								{
									"begin": 6097,
									"end": 6104,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 6066,
									"end": 6105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "tag",
									"source": 18,
									"value": "128"
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "129"
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "130"
								},
								{
									"begin": 6200,
									"end": 6216,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 6176,
									"end": 6217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "tag",
									"source": 18,
									"value": "130"
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6168,
									"end": 6174,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6161,
									"end": 6165,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6155,
									"end": 6166,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 6127,
									"end": 6218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "tag",
									"source": 18,
									"value": "129"
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6121,
									"end": 6125,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6114,
									"end": 6219,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 6032,
									"end": 6225,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5956,
									"end": 6225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6231,
									"end": 6304,
									"name": "tag",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 6231,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6276,
									"end": 6279,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 6231,
									"end": 6304,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6231,
									"end": 6304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "tag",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "133"
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 6387,
									"end": 6419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "tag",
									"source": 18,
									"value": "133"
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "134"
								},
								{
									"begin": 6486,
									"end": 6492,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6478,
									"end": 6484,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6472,
									"end": 6476,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 6428,
									"end": 6493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "tag",
									"source": 18,
									"value": "134"
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6363,
									"end": 6499,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6310,
									"end": 6499,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "tag",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "tag",
									"source": 18,
									"value": "136"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6582,
									"end": 6585,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6575,
									"end": 6580,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6572,
									"end": 6586,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "138"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "139"
								},
								{
									"begin": 6673,
									"end": 6674,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 6666,
									"end": 6671,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 6636,
									"end": 6675,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "tag",
									"source": 18,
									"value": "139"
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6609,
									"end": 6610,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 6602,
									"end": 6607,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6598,
									"end": 6611,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "136"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "tag",
									"source": 18,
									"value": "138"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6505,
									"end": 6691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6798,
									"end": 6800,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 6793,
									"end": 6796,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6790,
									"end": 6801,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "141"
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "142"
								},
								{
									"begin": 6864,
									"end": 6869,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 6832,
									"end": 6870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "tag",
									"source": 18,
									"value": "142"
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "143"
								},
								{
									"begin": 6934,
									"end": 6944,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 6916,
									"end": 6945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "tag",
									"source": 18,
									"value": "143"
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6906,
									"end": 6914,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 7099,
									"end": 7101,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 7087,
									"end": 7097,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 7084,
									"end": 7102,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "144"
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 7120,
									"end": 7128,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 7105,
									"end": 7128,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7105,
									"end": 7128,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "tag",
									"source": 18,
									"value": "144"
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "145"
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "146"
								},
								{
									"begin": 7217,
									"end": 7220,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 7199,
									"end": 7221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "tag",
									"source": 18,
									"value": "146"
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7189,
									"end": 7197,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7185,
									"end": 7222,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 7172,
									"end": 7183,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 7143,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "tag",
									"source": 18,
									"value": "145"
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6802,
									"end": 7233,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6802,
									"end": 7233,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "tag",
									"source": 18,
									"value": "141"
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6697,
									"end": 7240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7300,
									"end": 7308,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7350,
									"end": 7355,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7344,
									"end": 7348,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7340,
									"end": 7356,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 7319,
									"end": 7356,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7319,
									"end": 7356,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7246,
									"end": 7363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7413,
									"end": 7419,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "149"
								},
								{
									"begin": 7494,
									"end": 7495,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7490,
									"end": 7496,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 7482,
									"end": 7487,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7479,
									"end": 7480,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 7475,
									"end": 7488,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 7446,
									"end": 7497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "tag",
									"source": 18,
									"value": "149"
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7442,
									"end": 7498,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 7527,
									"end": 7531,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 7521,
									"end": 7525,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7517,
									"end": 7532,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 7507,
									"end": 7532,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7507,
									"end": 7532,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7420,
									"end": 7538,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7369,
									"end": 7538,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "tag",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7619,
									"end": 7623,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "151"
								},
								{
									"begin": 7790,
									"end": 7793,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7784,
									"end": 7788,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 7765,
									"end": 7794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "tag",
									"source": 18,
									"value": "151"
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7757,
									"end": 7794,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7757,
									"end": 7794,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7827,
									"end": 7830,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7824,
									"end": 7825,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 7820,
									"end": 7831,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 7814,
									"end": 7818,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7811,
									"end": 7832,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 7803,
									"end": 7832,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7803,
									"end": 7832,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7543,
									"end": 7838,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "tag",
									"source": 18,
									"value": "9"
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "153"
								},
								{
									"begin": 7993,
									"end": 7996,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 7960,
									"end": 7997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "tag",
									"source": 18,
									"value": "153"
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8062,
									"end": 8080,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8054,
									"end": 8060,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8051,
									"end": 8081,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "154"
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "155"
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 8084,
									"end": 8102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "tag",
									"source": 18,
									"value": "155"
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "tag",
									"source": 18,
									"value": "154"
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "156"
								},
								{
									"begin": 8160,
									"end": 8164,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8154,
									"end": 8165,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 8128,
									"end": 8166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "tag",
									"source": 18,
									"value": "156"
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "157"
								},
								{
									"begin": 8273,
									"end": 8279,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8265,
									"end": 8271,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 8213,
									"end": 8280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "tag",
									"source": 18,
									"value": "157"
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8307,
									"end": 8308,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8335,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 8318,
									"end": 8335,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8318,
									"end": 8335,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8363,
									"end": 8365,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 8355,
									"end": 8361,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 8352,
									"end": 8366,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 8380,
									"end": 8381,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "159"
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 9037,
									"end": 9038,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9054,
									"end": 9060,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "160"
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 9103,
									"end": 9112,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9098,
									"end": 9101,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 9094,
									"end": 9113,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9088,
									"end": 9114,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 9079,
									"end": 9114,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 9079,
									"end": 9114,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "tag",
									"source": 18,
									"value": "160"
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "161"
								},
								{
									"begin": 9214,
									"end": 9220,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 9207,
									"end": 9212,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 9154,
									"end": 9221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "tag",
									"source": 18,
									"value": "161"
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9148,
									"end": 9152,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 9141,
									"end": 9222,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 9010,
									"end": 9232,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "158"
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "tag",
									"source": 18,
									"value": "159"
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8427,
									"end": 8431,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 8423,
									"end": 8432,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 8415,
									"end": 8421,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 8411,
									"end": 8433,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "162"
								},
								{
									"begin": 8493,
									"end": 8497,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 8461,
									"end": 8498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "tag",
									"source": 18,
									"value": "162"
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8520,
									"end": 8521,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "tag",
									"source": 18,
									"value": "163"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8548,
									"end": 8555,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8545,
									"end": 8546,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8542,
									"end": 8556,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "165"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 8627,
									"end": 8636,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 8622,
									"end": 8625,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 8618,
									"end": 8637,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8612,
									"end": 8638,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 8604,
									"end": 8610,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8597,
									"end": 8639,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 8678,
									"end": 8679,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 8670,
									"end": 8676,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8666,
									"end": 8680,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8656,
									"end": 8680,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 8656,
									"end": 8680,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8725,
									"end": 8727,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 8714,
									"end": 8723,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 8710,
									"end": 8728,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8697,
									"end": 8728,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 8697,
									"end": 8728,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8571,
									"end": 8575,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 8568,
									"end": 8569,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8564,
									"end": 8576,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8559,
									"end": 8576,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8559,
									"end": 8576,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "163"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "tag",
									"source": 18,
									"value": "165"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8770,
									"end": 8776,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 8761,
									"end": 8768,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 8758,
									"end": 8777,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "166"
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 8828,
									"end": 8837,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 8823,
									"end": 8826,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 8819,
									"end": 8838,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8813,
									"end": 8839,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "167"
								},
								{
									"begin": 8913,
									"end": 8917,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 8905,
									"end": 8911,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 8901,
									"end": 8918,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 8890,
									"end": 8899,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 8871,
									"end": 8919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "tag",
									"source": 18,
									"value": "167"
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8863,
									"end": 8869,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 8856,
									"end": 8920,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 8778,
									"end": 8934,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "tag",
									"source": 18,
									"value": "166"
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8980,
									"end": 8981,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 8976,
									"end": 8977,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 8968,
									"end": 8974,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 8964,
									"end": 8978,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 8960,
									"end": 8982,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8954,
									"end": 8958,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 8947,
									"end": 8983,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 8382,
									"end": 8993,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8382,
									"end": 8993,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8382,
									"end": 8993,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "tag",
									"source": 18,
									"value": "158"
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7935,
									"end": 9238,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7935,
									"end": 9238,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7935,
									"end": 9238,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7843,
									"end": 9238,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9244,
									"end": 9362,
									"name": "tag",
									"source": 18,
									"value": "56"
								},
								{
									"begin": 9244,
									"end": 9362,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9331,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "169"
								},
								{
									"begin": 9349,
									"end": 9354,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 9331,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 9331,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9331,
									"end": 9355,
									"name": "tag",
									"source": 18,
									"value": "169"
								},
								{
									"begin": 9331,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9326,
									"end": 9329,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9319,
									"end": 9356,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 9244,
									"end": 9362,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9244,
									"end": 9362,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9244,
									"end": 9362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9368,
									"end": 9590,
									"name": "tag",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 9368,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9461,
									"end": 9465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9499,
									"end": 9501,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 9488,
									"end": 9497,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9484,
									"end": 9502,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9476,
									"end": 9502,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 9476,
									"end": 9502,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9512,
									"end": 9583,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "171"
								},
								{
									"begin": 9580,
									"end": 9581,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9569,
									"end": 9578,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9565,
									"end": 9582,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9556,
									"end": 9562,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 9512,
									"end": 9583,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "56"
								},
								{
									"begin": 9512,
									"end": 9583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9512,
									"end": 9583,
									"name": "tag",
									"source": 18,
									"value": "171"
								},
								{
									"begin": 9512,
									"end": 9583,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9368,
									"end": 9590,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 9368,
									"end": 9590,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 9368,
									"end": 9590,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9368,
									"end": 9590,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9368,
									"end": 9590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "tag",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 2341,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a18682d9a0e14e373013daa15354f76413986a0fd00ebc1ed6c1134f601838964736f6c63430008170033",
									".code": [
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "8AC5DEA1"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "CA5E0E88"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "E973799A"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "ECEDC680"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "8AC5DEA1"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "2E410E8E"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "2E410E8E"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "42966C68"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 326,
											"end": 2341,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 2134,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 2134,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2134,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1392,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 975,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 975,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 1939,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1939,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 561,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 561,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1484,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1484,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1676,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1676,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 1676,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2269,
											"end": 2273,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 2296,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2332,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 2296,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2289,
											"end": 2332,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2289,
											"end": 2332,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2134,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1392,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1448,
											"end": 1464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1448,
											"end": 1464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1471,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 855,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 855,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 855,
											"end": 867,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 855,
											"end": 867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 826,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 826,
											"end": 868,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 826,
											"end": 868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1050,
											"end": 1066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 1042,
											"end": 1095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 1042,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1105,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 1123,
											"end": 1137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1105,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1105,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1157,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 1157,
											"end": 1162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1157,
											"end": 1164,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 1157,
											"end": 1164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1166,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1147,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1184,
											"end": 1210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 1197,
											"end": 1204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1206,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1184,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 1184,
											"end": 1210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1184,
											"end": 1210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 1184,
											"end": 1210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1311,
											"end": 1316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1327,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 1242,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1242,
											"end": 1249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1242,
											"end": 1249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 1242,
											"end": 1249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1250,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 1229,
											"end": 1327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1229,
											"end": 1327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1371,
											"end": 1378,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1366,
											"end": 1369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 1343,
											"end": 1379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1357,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1357,
											"end": 1362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1357,
											"end": 1364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1357,
											"end": 1364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1357,
											"end": 1364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5D524E0183E95410FF30DF610EEEF1541403D23325FF607098B786DB901F87D2"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1379,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 975,
											"end": 1386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 2098,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2091,
											"end": 2121,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2091,
											"end": 2121,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1939,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 561,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 561,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 561,
											"end": 612,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 561,
											"end": 612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1574,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1558,
											"end": 1583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1592,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1558,
											"end": 1592,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 1550,
											"end": 1621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 1550,
											"end": 1621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1659,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1647,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1733,
											"end": 1746,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1748,
											"end": 1752,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1791,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1806,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1809,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1810,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1764,
											"end": 1810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1764,
											"end": 1810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1828,
											"end": 1835,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1828,
											"end": 1839,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1839,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 1820,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 1820,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "tag",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "tag",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 12,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "514"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 18,
											"value": "514"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6319,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 6202,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6301,
											"end": 6313,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6325,
											"end": 6442,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 6325,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6448,
											"end": 6628,
											"name": "tag",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 6448,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6496,
											"end": 6573,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6574,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6593,
											"end": 6597,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6583,
											"end": 6598,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6617,
											"end": 6621,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6614,
											"end": 6615,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 6739,
											"end": 6743,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 6717,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6705,
											"end": 6745,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6847,
											"end": 6853,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6835,
											"end": 6845,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6832,
											"end": 6854,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6799,
											"end": 6809,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6796,
											"end": 6830,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6793,
											"end": 6855,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 6858,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6909,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6677,
											"end": 6915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6634,
											"end": 6915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 6982,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 7011,
											"end": 7044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "tag",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6921,
											"end": 7050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "tag",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7118,
											"end": 7122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7200,
											"end": 7206,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7197,
											"end": 7227,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 7230,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 7290,
											"end": 7296,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 7268,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7260,
											"end": 7297,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7260,
											"end": 7297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 7350,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7334,
											"end": 7357,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7334,
											"end": 7357,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "tag",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7467,
											"end": 7473,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7462,
											"end": 7465,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 7508,
											"end": 7509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7499,
											"end": 7505,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7494,
											"end": 7497,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7490,
											"end": 7506,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7483,
											"end": 7510,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7370,
											"end": 7516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7600,
											"end": 7605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 7641,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 7625,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7616,
											"end": 7691,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7616,
											"end": 7691,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7707,
											"end": 7712,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7700,
											"end": 7721,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7752,
											"end": 7756,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7741,
											"end": 7757,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7790,
											"end": 7793,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7772,
											"end": 7788,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7769,
											"end": 7794,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 7797,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7924,
											"end": 7927,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 7887,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7606,
											"end": 7947,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7522,
											"end": 7947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "tag",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8023,
											"end": 8028,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8075,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8065,
											"end": 8069,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8053,
											"end": 8070,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8049,
											"end": 8076,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 8080,
											"end": 8159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8184,
											"end": 8204,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 8297,
											"end": 8300,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8286,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 8222,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8213,
											"end": 8301,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8213,
											"end": 8301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8029,
											"end": 8307,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8313,
											"end": 8822,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 8313,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8406,
											"end": 8429,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8402,
											"end": 8434,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 8437,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8583,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8570,
											"end": 8587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8557,
											"end": 8588,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8601,
											"end": 8718,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8601,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 8601,
											"end": 8718,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8637,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 8637,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 8637,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8637,
											"end": 8716,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 8637,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8601,
											"end": 8718,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 8601,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8742,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 8797,
											"end": 8804,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8773,
											"end": 8795,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8742,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 8742,
											"end": 8805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8742,
											"end": 8805,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 8742,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8732,
											"end": 8805,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8732,
											"end": 8805,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8528,
											"end": 8815,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8313,
											"end": 8822,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8313,
											"end": 8822,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8313,
											"end": 8822,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8313,
											"end": 8822,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8313,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "tag",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 8898,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8891,
											"end": 8896,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8888,
											"end": 8920,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8924,
											"end": 8936,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8828,
											"end": 8944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "tag",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8993,
											"end": 8998,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9037,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 9047,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 9083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9154,
											"end": 9160,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9190,
											"end": 9197,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9186,
											"end": 9209,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9182,
											"end": 9214,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 9532,
											"end": 9539,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9523,
											"end": 9529,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9512,
											"end": 9521,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 9508,
											"end": 9530,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 9490,
											"end": 9540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9480,
											"end": 9540,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9480,
											"end": 9540,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9435,
											"end": 9550,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9089,
											"end": 9557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "tag",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9732,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9706,
											"end": 9712,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9703,
											"end": 9733,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 9736,
											"end": 9754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 9796,
											"end": 9802,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 9774,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9848,
											"end": 9863,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "tag",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9953,
											"end": 9958,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 10035,
											"end": 10041,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 9994,
											"end": 10042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 9978,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10059,
											"end": 10064,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10052,
											"end": 10073,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10104,
											"end": 10108,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10093,
											"end": 10109,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10142,
											"end": 10145,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10128,
											"end": 10131,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10124,
											"end": 10140,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10121,
											"end": 10146,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 10149,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 10286,
											"end": 10292,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 10239,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9876,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10403,
											"end": 10420,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 10430,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 10646,
											"end": 10649,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10638,
											"end": 10644,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10631,
											"end": 10635,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10619,
											"end": 10636,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 10572,
											"end": 10650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10563,
											"end": 10650,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10563,
											"end": 10650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10379,
											"end": 10656,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10318,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10771,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10787,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10830,
											"end": 10833,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 10818,
											"end": 10827,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10809,
											"end": 10816,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 10828,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10801,
											"end": 10834,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 10837,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 11027,
											"end": 11034,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11018,
											"end": 11024,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11007,
											"end": 11016,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11003,
											"end": 11025,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 10982,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10928,
											"end": 11045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11084,
											"end": 11086,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 11155,
											"end": 11162,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11131,
											"end": 11153,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 11110,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11055,
											"end": 11173,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 11283,
											"end": 11290,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11263,
											"end": 11272,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11259,
											"end": 11281,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 11238,
											"end": 11291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11183,
											"end": 11301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11368,
											"end": 11370,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11353,
											"end": 11371,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11340,
											"end": 11372,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11388,
											"end": 11418,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 11421,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 11526,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11516,
											"end": 11588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11516,
											"end": 11588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11311,
											"end": 11598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11746,
											"end": 11750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11784,
											"end": 11786,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 11773,
											"end": 11782,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11769,
											"end": 11787,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11787,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11833,
											"end": 11842,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11823,
											"end": 11843,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11819,
											"end": 11820,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11817,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11804,
											"end": 11821,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11861,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 11934,
											"end": 11938,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11925,
											"end": 11931,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11861,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 11861,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11861,
											"end": 11939,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 11861,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11853,
											"end": 11939,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11853,
											"end": 11939,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11949,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 12011,
											"end": 12013,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12000,
											"end": 12009,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11987,
											"end": 11993,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11949,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 11949,
											"end": 12015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11949,
											"end": 12015,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 11949,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12096,
											"end": 12102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12104,
											"end": 12110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12153,
											"end": 12155,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12141,
											"end": 12150,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12132,
											"end": 12139,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12128,
											"end": 12151,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12124,
											"end": 12156,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12121,
											"end": 12240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12121,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 12121,
											"end": 12240,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 12159,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 12159,
											"end": 12238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12238,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 12159,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12121,
											"end": 12240,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 12121,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12279,
											"end": 12280,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 12349,
											"end": 12356,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12340,
											"end": 12346,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12329,
											"end": 12338,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12304,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 12304,
											"end": 12357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12304,
											"end": 12357,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 12304,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12294,
											"end": 12357,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12294,
											"end": 12357,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12250,
											"end": 12367,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12406,
											"end": 12408,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12432,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 12477,
											"end": 12484,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12474,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12457,
											"end": 12466,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12453,
											"end": 12475,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12432,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 12432,
											"end": 12485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12432,
											"end": 12485,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 12432,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12485,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12485,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12377,
											"end": 12495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12508,
											"end": 12688,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 12508,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12556,
											"end": 12633,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12553,
											"end": 12554,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12546,
											"end": 12634,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12653,
											"end": 12657,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 12650,
											"end": 12651,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 12643,
											"end": 12658,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12677,
											"end": 12681,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 13014,
											"name": "tag",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 12694,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12738,
											"end": 12744,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12775,
											"end": 12776,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 12769,
											"end": 12773,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12765,
											"end": 12777,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 12755,
											"end": 12777,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12755,
											"end": 12777,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12822,
											"end": 12823,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12816,
											"end": 12820,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12812,
											"end": 12824,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12843,
											"end": 12861,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12833,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 12833,
											"end": 12914,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12899,
											"end": 12903,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 12891,
											"end": 12897,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12887,
											"end": 12904,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12877,
											"end": 12904,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12877,
											"end": 12904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12833,
											"end": 12914,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 12833,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12961,
											"end": 12963,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12959,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 12964,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12927,
											"end": 12965,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12924,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 12924,
											"end": 13008,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 12980,
											"end": 12998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12924,
											"end": 13008,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 12924,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12745,
											"end": 13014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 13014,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 13014,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 13014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 13014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13169,
											"end": 13173,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13207,
											"end": 13209,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 13196,
											"end": 13205,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13184,
											"end": 13210,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13184,
											"end": 13210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13220,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 13288,
											"end": 13289,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13277,
											"end": 13286,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13273,
											"end": 13290,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13264,
											"end": 13270,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13220,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 13220,
											"end": 13291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13220,
											"end": 13291,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 13220,
											"end": 13291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13301,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 13369,
											"end": 13371,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13358,
											"end": 13367,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13354,
											"end": 13372,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13345,
											"end": 13351,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13301,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 13301,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13301,
											"end": 13373,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 13301,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13383,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 13451,
											"end": 13453,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13440,
											"end": 13449,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13427,
											"end": 13433,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13383,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 13383,
											"end": 13455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13383,
											"end": 13455,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 13383,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13020,
											"end": 13462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13468,
											"end": 13642,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 13468,
											"end": 13642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13608,
											"end": 13634,
											"name": "PUSH",
											"source": 18,
											"value": "4D696E74696E67206E6F7420617070726F766564207965740000000000000000"
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13602,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13592,
											"end": 13606,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13585,
											"end": 13635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13468,
											"end": 13642,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13468,
											"end": 13642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13648,
											"end": 14014,
											"name": "tag",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 13648,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13790,
											"end": 13793,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13811,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 13875,
											"end": 13877,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 13870,
											"end": 13873,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13811,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 13811,
											"end": 13878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13811,
											"end": 13878,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 13811,
											"end": 13878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13804,
											"end": 13878,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13804,
											"end": 13878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13887,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 13976,
											"end": 13979,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13887,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 13887,
											"end": 13980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13887,
											"end": 13980,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 13887,
											"end": 13980,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14005,
											"end": 14007,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14000,
											"end": 14003,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13996,
											"end": 14008,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13989,
											"end": 14008,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13989,
											"end": 14008,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13648,
											"end": 14014,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13648,
											"end": 14014,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13648,
											"end": 14014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13648,
											"end": 14014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14439,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 14020,
											"end": 14439,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14186,
											"end": 14190,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14224,
											"end": 14226,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14222,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14201,
											"end": 14227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14201,
											"end": 14227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14273,
											"end": 14282,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14263,
											"end": 14283,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14259,
											"end": 14260,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14248,
											"end": 14257,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14244,
											"end": 14261,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14237,
											"end": 14284,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14301,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 14427,
											"end": 14431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14301,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 14301,
											"end": 14432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14301,
											"end": 14432,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 14301,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14293,
											"end": 14432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14293,
											"end": 14432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14439,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14439,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14439,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14445,
											"end": 14625,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 14445,
											"end": 14625,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14493,
											"end": 14570,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14490,
											"end": 14491,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14483,
											"end": 14571,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 14587,
											"end": 14588,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 14580,
											"end": 14595,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14611,
											"end": 14612,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14604,
											"end": 14619,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 14631,
											"end": 14864,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 14631,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14670,
											"end": 14673,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14693,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 14711,
											"end": 14716,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14693,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 14693,
											"end": 14717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14693,
											"end": 14717,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 14693,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14684,
											"end": 14717,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14684,
											"end": 14717,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14739,
											"end": 14805,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14732,
											"end": 14737,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14729,
											"end": 14806,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 14726,
											"end": 14829,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 14809,
											"end": 14827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14726,
											"end": 14829,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 14726,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14856,
											"end": 14857,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14849,
											"end": 14854,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14845,
											"end": 14858,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14631,
											"end": 14864,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14631,
											"end": 14864,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14631,
											"end": 14864,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14631,
											"end": 14864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14870,
											"end": 15011,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 14870,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14919,
											"end": 14923,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14942,
											"end": 14945,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14934,
											"end": 14945,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14934,
											"end": 14945,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14965,
											"end": 14968,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14962,
											"end": 14963,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14955,
											"end": 14969,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14999,
											"end": 15003,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14996,
											"end": 14997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14986,
											"end": 15004,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 14978,
											"end": 15004,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14978,
											"end": 15004,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14870,
											"end": 15011,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14870,
											"end": 15011,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14870,
											"end": 15011,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14870,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15017,
											"end": 15110,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 15017,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15054,
											"end": 15060,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15101,
											"end": 15103,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15098,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 15089,
											"end": 15094,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15085,
											"end": 15099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15081,
											"end": 15104,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 15071,
											"end": 15104,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15071,
											"end": 15104,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15017,
											"end": 15110,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15017,
											"end": 15110,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15017,
											"end": 15110,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15017,
											"end": 15110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15223,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 15116,
											"end": 15223,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15160,
											"end": 15168,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15210,
											"end": 15215,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15204,
											"end": 15208,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15200,
											"end": 15216,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 15179,
											"end": 15216,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15179,
											"end": 15216,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15223,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15223,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15223,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15223,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15116,
											"end": 15223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15298,
											"end": 15304,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15349,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 15336,
											"end": 15346,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15332,
											"end": 15350,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 15371,
											"end": 15468,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 15401,
											"end": 15467,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15390,
											"end": 15399,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15371,
											"end": 15468,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 15371,
											"end": 15468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15371,
											"end": 15468,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 15371,
											"end": 15468,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15489,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 15519,
											"end": 15527,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15517,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15489,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 15489,
											"end": 15528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15489,
											"end": 15528,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 15489,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15477,
											"end": 15528,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 15477,
											"end": 15528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15561,
											"end": 15565,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15557,
											"end": 15566,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 15550,
											"end": 15555,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15546,
											"end": 15567,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15537,
											"end": 15567,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 15537,
											"end": 15567,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15610,
											"end": 15614,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15600,
											"end": 15608,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15596,
											"end": 15615,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15589,
											"end": 15594,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15586,
											"end": 15616,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 15576,
											"end": 15616,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15576,
											"end": 15616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15305,
											"end": 15622,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15305,
											"end": 15622,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15229,
											"end": 15622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15628,
											"end": 15688,
											"name": "tag",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 15628,
											"end": 15688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15656,
											"end": 15659,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15677,
											"end": 15682,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15670,
											"end": 15682,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15670,
											"end": 15682,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15628,
											"end": 15688,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15628,
											"end": 15688,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15628,
											"end": 15688,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15628,
											"end": 15688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15694,
											"end": 15836,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 15694,
											"end": 15836,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15744,
											"end": 15753,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15777,
											"end": 15830,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 15795,
											"end": 15829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 15822,
											"end": 15827,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 15804,
											"end": 15828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15795,
											"end": 15829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 15795,
											"end": 15829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15795,
											"end": 15829,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 15795,
											"end": 15829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15777,
											"end": 15830,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 15777,
											"end": 15830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15777,
											"end": 15830,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 15777,
											"end": 15830,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15764,
											"end": 15830,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15764,
											"end": 15830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15694,
											"end": 15836,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15694,
											"end": 15836,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15694,
											"end": 15836,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15694,
											"end": 15836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15917,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 15842,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 15888,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15906,
											"end": 15911,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15899,
											"end": 15911,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15899,
											"end": 15911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15917,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15917,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 16192,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 15923,
											"end": 16192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16033,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 16064,
											"end": 16071,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16033,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 16033,
											"end": 16072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16033,
											"end": 16072,
											"name": "tag",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 16033,
											"end": 16072,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 16143,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 16167,
											"end": 16183,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16143,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 16143,
											"end": 16184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16143,
											"end": 16184,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 16143,
											"end": 16184,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16135,
											"end": 16141,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16128,
											"end": 16132,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16122,
											"end": 16133,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 16094,
											"end": 16185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16185,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 16094,
											"end": 16185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16088,
											"end": 16092,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16081,
											"end": 16186,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 15999,
											"end": 16192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 16192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 16192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 16192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 16192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16198,
											"end": 16271,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 16198,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16243,
											"end": 16246,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16198,
											"end": 16271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16198,
											"end": 16271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16277,
											"end": 16466,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 16277,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 16354,
											"end": 16386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 16354,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16395,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 16453,
											"end": 16459,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16445,
											"end": 16451,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16439,
											"end": 16443,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16395,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 16395,
											"end": 16460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16395,
											"end": 16460,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 16395,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16330,
											"end": 16466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16277,
											"end": 16466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16277,
											"end": 16466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16277,
											"end": 16466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16658,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 16472,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "tag",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16549,
											"end": 16552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16542,
											"end": 16547,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16539,
											"end": 16553,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16603,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 16640,
											"end": 16641,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16633,
											"end": 16638,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16603,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 16603,
											"end": 16642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16603,
											"end": 16642,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 16603,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16576,
											"end": 16577,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 16569,
											"end": 16574,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16565,
											"end": 16578,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16556,
											"end": 16578,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16556,
											"end": 16578,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 16532,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16658,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16658,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16472,
											"end": 16658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16664,
											"end": 17207,
											"name": "tag",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 16664,
											"end": 17207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16765,
											"end": 16767,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 16760,
											"end": 16763,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16757,
											"end": 16768,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 16754,
											"end": 17200,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 16754,
											"end": 17200,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 16754,
											"end": 17200,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16799,
											"end": 16837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 16831,
											"end": 16836,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16799,
											"end": 16837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 16799,
											"end": 16837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16799,
											"end": 16837,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 16799,
											"end": 16837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16883,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 16901,
											"end": 16911,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16883,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 16883,
											"end": 16912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16883,
											"end": 16912,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 16883,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16873,
											"end": 16881,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16869,
											"end": 16913,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17066,
											"end": 17068,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17054,
											"end": 17064,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17051,
											"end": 17069,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 17048,
											"end": 17097,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17048,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 17048,
											"end": 17097,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17087,
											"end": 17095,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17072,
											"end": 17095,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17072,
											"end": 17095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17048,
											"end": 17097,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 17048,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 17166,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 17184,
											"end": 17187,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17166,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 17166,
											"end": 17188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17166,
											"end": 17188,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 17166,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17156,
											"end": 17164,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17152,
											"end": 17189,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17139,
											"end": 17150,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 17110,
											"end": 17190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17190,
											"name": "tag",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 17110,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16769,
											"end": 17200,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16769,
											"end": 17200,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16754,
											"end": 17200,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 16754,
											"end": 17200,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16664,
											"end": 17207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16664,
											"end": 17207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16664,
											"end": 17207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16664,
											"end": 17207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17213,
											"end": 17330,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 17213,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17267,
											"end": 17275,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17317,
											"end": 17322,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17311,
											"end": 17315,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17307,
											"end": 17323,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 17286,
											"end": 17323,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17286,
											"end": 17323,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17213,
											"end": 17330,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17213,
											"end": 17330,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17213,
											"end": 17330,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17213,
											"end": 17330,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17213,
											"end": 17330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17505,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 17336,
											"end": 17505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17380,
											"end": 17386,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17413,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 17461,
											"end": 17462,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17457,
											"end": 17463,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 17449,
											"end": 17454,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17446,
											"end": 17447,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 17442,
											"end": 17455,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 17413,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 17413,
											"end": 17464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17413,
											"end": 17464,
											"name": "tag",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 17413,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17409,
											"end": 17465,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 17494,
											"end": 17498,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 17488,
											"end": 17492,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17484,
											"end": 17499,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 17474,
											"end": 17499,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17474,
											"end": 17499,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17387,
											"end": 17505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17505,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17505,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17336,
											"end": 17505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17510,
											"end": 17805,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 17510,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17586,
											"end": 17590,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17732,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 17757,
											"end": 17760,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17751,
											"end": 17755,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17732,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 17732,
											"end": 17761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17732,
											"end": 17761,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 17732,
											"end": 17761,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17724,
											"end": 17761,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17724,
											"end": 17761,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17794,
											"end": 17797,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17791,
											"end": 17792,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 17781,
											"end": 17785,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17778,
											"end": 17799,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 17770,
											"end": 17799,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17770,
											"end": 17799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17510,
											"end": 17805,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17510,
											"end": 17805,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17510,
											"end": 17805,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17510,
											"end": 17805,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17510,
											"end": 17805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17810,
											"end": 19205,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 17810,
											"end": 19205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17927,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 17960,
											"end": 17963,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17927,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 17927,
											"end": 17964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17927,
											"end": 17964,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 17927,
											"end": 17964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18021,
											"end": 18027,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18018,
											"end": 18048,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 18015,
											"end": 18071,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18015,
											"end": 18071,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 18015,
											"end": 18071,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18051,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 18051,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 18051,
											"end": 18069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18051,
											"end": 18069,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 18051,
											"end": 18069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18015,
											"end": 18071,
											"name": "tag",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 18015,
											"end": 18071,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18095,
											"end": 18133,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 18127,
											"end": 18131,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18121,
											"end": 18132,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 18095,
											"end": 18133,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 18095,
											"end": 18133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18095,
											"end": 18133,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 18095,
											"end": 18133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 18240,
											"end": 18246,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18232,
											"end": 18238,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18226,
											"end": 18230,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 18180,
											"end": 18247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 18180,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18274,
											"end": 18275,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18298,
											"end": 18302,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18285,
											"end": 18302,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18285,
											"end": 18302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18330,
											"end": 18332,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 18322,
											"end": 18328,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18319,
											"end": 18333,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 18347,
											"end": 18348,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 18342,
											"end": 18960,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18342,
											"end": 18960,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 18342,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 18342,
											"end": 18960,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19004,
											"end": 19005,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19021,
											"end": 19027,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19018,
											"end": 19095,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19018,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 19018,
											"end": 19095,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19070,
											"end": 19079,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19065,
											"end": 19068,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 19061,
											"end": 19080,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19055,
											"end": 19081,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19046,
											"end": 19081,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19046,
											"end": 19081,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19018,
											"end": 19095,
											"name": "tag",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 19018,
											"end": 19095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19121,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 19181,
											"end": 19187,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19174,
											"end": 19179,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19121,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 19121,
											"end": 19188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19121,
											"end": 19188,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 19121,
											"end": 19188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19115,
											"end": 19119,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19108,
											"end": 19189,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 18977,
											"end": 19199,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18312,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 18312,
											"end": 19199,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18342,
											"end": 18960,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 18342,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18394,
											"end": 18398,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 18390,
											"end": 18399,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 18382,
											"end": 18388,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18378,
											"end": 18400,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 18428,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 18460,
											"end": 18464,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18428,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 18428,
											"end": 18465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18428,
											"end": 18465,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 18428,
											"end": 18465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18487,
											"end": 18488,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18515,
											"end": 18522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18512,
											"end": 18513,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18509,
											"end": 18523,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18589,
											"end": 18592,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 18585,
											"end": 18604,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18579,
											"end": 18605,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 18571,
											"end": 18577,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18564,
											"end": 18606,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 18645,
											"end": 18646,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 18637,
											"end": 18643,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18633,
											"end": 18647,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18623,
											"end": 18647,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18623,
											"end": 18647,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18692,
											"end": 18694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18681,
											"end": 18690,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18677,
											"end": 18695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18664,
											"end": 18695,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 18664,
											"end": 18695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18538,
											"end": 18542,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18535,
											"end": 18536,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18531,
											"end": 18543,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18526,
											"end": 18543,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18526,
											"end": 18543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 18501,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18737,
											"end": 18743,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18728,
											"end": 18735,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18725,
											"end": 18744,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 18722,
											"end": 18901,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18722,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 18722,
											"end": 18901,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18795,
											"end": 18804,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18790,
											"end": 18793,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 18786,
											"end": 18805,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18780,
											"end": 18806,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 18880,
											"end": 18884,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 18872,
											"end": 18878,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 18868,
											"end": 18885,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 18857,
											"end": 18866,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 18838,
											"end": 18886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 18886,
											"name": "tag",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 18838,
											"end": 18886,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18830,
											"end": 18836,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18823,
											"end": 18887,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 18745,
											"end": 18901,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18722,
											"end": 18901,
											"name": "tag",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 18722,
											"end": 18901,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18947,
											"end": 18948,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 18943,
											"end": 18944,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 18935,
											"end": 18941,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 18931,
											"end": 18945,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 18927,
											"end": 18949,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18921,
											"end": 18925,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 18914,
											"end": 18950,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 18349,
											"end": 18960,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18349,
											"end": 18960,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18349,
											"end": 18960,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18312,
											"end": 19199,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 18312,
											"end": 19199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18312,
											"end": 19199,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17902,
											"end": 19205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17902,
											"end": 19205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17902,
											"end": 19205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17810,
											"end": 19205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17810,
											"end": 19205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17810,
											"end": 19205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19211,
											"end": 19359,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 19211,
											"end": 19359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19313,
											"end": 19324,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19350,
											"end": 19353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19211,
											"end": 19359,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19211,
											"end": 19359,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19211,
											"end": 19359,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19211,
											"end": 19359,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19211,
											"end": 19359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19365,
											"end": 19755,
											"name": "tag",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 19365,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19471,
											"end": 19474,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19499,
											"end": 19538,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 19532,
											"end": 19537,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19499,
											"end": 19538,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 19499,
											"end": 19538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19499,
											"end": 19538,
											"name": "tag",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 19499,
											"end": 19538,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19554,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 19636,
											"end": 19642,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19631,
											"end": 19634,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19554,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 19554,
											"end": 19643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19554,
											"end": 19643,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 19554,
											"end": 19643,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19547,
											"end": 19643,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 19547,
											"end": 19643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19652,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 19710,
											"end": 19716,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19705,
											"end": 19708,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19698,
											"end": 19702,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19691,
											"end": 19696,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19687,
											"end": 19703,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19652,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 19652,
											"end": 19717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19652,
											"end": 19717,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 19652,
											"end": 19717,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19742,
											"end": 19748,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 19737,
											"end": 19740,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19733,
											"end": 19749,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19726,
											"end": 19749,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19726,
											"end": 19749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19475,
											"end": 19755,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19365,
											"end": 19755,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19365,
											"end": 19755,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19365,
											"end": 19755,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19365,
											"end": 19755,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19365,
											"end": 19755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20036,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 19761,
											"end": 20036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19893,
											"end": 19896,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19915,
											"end": 20010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 20006,
											"end": 20009,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19997,
											"end": 20003,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19915,
											"end": 20010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 19915,
											"end": 20010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19915,
											"end": 20010,
											"name": "tag",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 19915,
											"end": 20010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19908,
											"end": 20010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19908,
											"end": 20010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20027,
											"end": 20030,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20020,
											"end": 20030,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20020,
											"end": 20030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20036,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20036,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20042,
											"end": 20216,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 20042,
											"end": 20216,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20182,
											"end": 20208,
											"name": "PUSH",
											"source": 18,
											"value": "5265717565737420616C726561647920617070726F7665640000000000000000"
										},
										{
											"begin": 20178,
											"end": 20179,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20176,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20166,
											"end": 20180,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20159,
											"end": 20209,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20042,
											"end": 20216,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20042,
											"end": 20216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20222,
											"end": 20588,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 20222,
											"end": 20588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20364,
											"end": 20367,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20385,
											"end": 20452,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 20449,
											"end": 20451,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 20444,
											"end": 20447,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20385,
											"end": 20452,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 20385,
											"end": 20452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20385,
											"end": 20452,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 20385,
											"end": 20452,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20378,
											"end": 20452,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20378,
											"end": 20452,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20461,
											"end": 20554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 20550,
											"end": 20553,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20461,
											"end": 20554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 20461,
											"end": 20554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20461,
											"end": 20554,
											"name": "tag",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 20461,
											"end": 20554,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20579,
											"end": 20581,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20574,
											"end": 20577,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20570,
											"end": 20582,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20563,
											"end": 20582,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20563,
											"end": 20582,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20222,
											"end": 20588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20222,
											"end": 20588,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20222,
											"end": 20588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20222,
											"end": 20588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20594,
											"end": 21013,
											"name": "tag",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 20594,
											"end": 21013,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20760,
											"end": 20764,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20798,
											"end": 20800,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20787,
											"end": 20796,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20783,
											"end": 20801,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20775,
											"end": 20801,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20775,
											"end": 20801,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20847,
											"end": 20856,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20841,
											"end": 20845,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20837,
											"end": 20857,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20833,
											"end": 20834,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20822,
											"end": 20831,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20818,
											"end": 20835,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20811,
											"end": 20858,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20875,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 21001,
											"end": 21005,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20875,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 20875,
											"end": 21006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20875,
											"end": 21006,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 20875,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20867,
											"end": 21006,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20867,
											"end": 21006,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20594,
											"end": 21013,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20594,
											"end": 21013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20594,
											"end": 21013,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20594,
											"end": 21013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21019,
											"end": 21117,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 21019,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21070,
											"end": 21076,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21104,
											"end": 21109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21098,
											"end": 21110,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 21088,
											"end": 21110,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21088,
											"end": 21110,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21019,
											"end": 21117,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21019,
											"end": 21117,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21019,
											"end": 21117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21019,
											"end": 21117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21123,
											"end": 21291,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 21123,
											"end": 21291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21206,
											"end": 21217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21240,
											"end": 21246,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21235,
											"end": 21238,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21228,
											"end": 21247,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21280,
											"end": 21284,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21275,
											"end": 21278,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21271,
											"end": 21285,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21256,
											"end": 21285,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21256,
											"end": 21285,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21123,
											"end": 21291,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21123,
											"end": 21291,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21123,
											"end": 21291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21123,
											"end": 21291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21123,
											"end": 21291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21297,
											"end": 21670,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 21297,
											"end": 21670,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21383,
											"end": 21386,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21411,
											"end": 21449,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 21443,
											"end": 21448,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21411,
											"end": 21449,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 21411,
											"end": 21449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21411,
											"end": 21449,
											"name": "tag",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 21411,
											"end": 21449,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21465,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 21528,
											"end": 21534,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21523,
											"end": 21526,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21465,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 21465,
											"end": 21535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21465,
											"end": 21535,
											"name": "tag",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 21465,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21458,
											"end": 21535,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 21458,
											"end": 21535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21544,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 21602,
											"end": 21608,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21597,
											"end": 21600,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21590,
											"end": 21594,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21583,
											"end": 21588,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21579,
											"end": 21595,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21544,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 21544,
											"end": 21609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21544,
											"end": 21609,
											"name": "tag",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 21544,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21634,
											"end": 21663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 21656,
											"end": 21662,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21634,
											"end": 21663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 21634,
											"end": 21663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21634,
											"end": 21663,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 21634,
											"end": 21663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21629,
											"end": 21632,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21625,
											"end": 21664,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21618,
											"end": 21664,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21618,
											"end": 21664,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21387,
											"end": 21670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21297,
											"end": 21670,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21297,
											"end": 21670,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21297,
											"end": 21670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21297,
											"end": 21670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21297,
											"end": 21670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "tag",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21871,
											"end": 21875,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21909,
											"end": 21912,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 21898,
											"end": 21907,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21894,
											"end": 21913,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21886,
											"end": 21913,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21886,
											"end": 21913,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21923,
											"end": 21994,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 21991,
											"end": 21992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21980,
											"end": 21989,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21976,
											"end": 21993,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 21973,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 21923,
											"end": 21994,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 21923,
											"end": 21994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21923,
											"end": 21994,
											"name": "tag",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 21923,
											"end": 21994,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22004,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 22072,
											"end": 22074,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22061,
											"end": 22070,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22057,
											"end": 22075,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22048,
											"end": 22054,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 22004,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 22004,
											"end": 22076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22004,
											"end": 22076,
											"name": "tag",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 22004,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22086,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 22154,
											"end": 22156,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 22143,
											"end": 22152,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22139,
											"end": 22157,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22130,
											"end": 22136,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 22086,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 22086,
											"end": 22158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22086,
											"end": 22158,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 22086,
											"end": 22158,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22205,
											"end": 22214,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22199,
											"end": 22203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22195,
											"end": 22215,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22190,
											"end": 22192,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 22179,
											"end": 22188,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22168,
											"end": 22216,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22233,
											"end": 22309,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 22304,
											"end": 22308,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22295,
											"end": 22301,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22233,
											"end": 22309,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 22233,
											"end": 22309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22233,
											"end": 22309,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 22233,
											"end": 22309,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22225,
											"end": 22309,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22225,
											"end": 22309,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 22316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22322,
											"end": 22463,
											"name": "tag",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 22322,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22378,
											"end": 22383,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22409,
											"end": 22415,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22403,
											"end": 22416,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 22394,
											"end": 22416,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22394,
											"end": 22416,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22425,
											"end": 22457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 22451,
											"end": 22456,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22425,
											"end": 22457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 22425,
											"end": 22457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22425,
											"end": 22457,
											"name": "tag",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 22425,
											"end": 22457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22322,
											"end": 22463,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22322,
											"end": 22463,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22322,
											"end": 22463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22322,
											"end": 22463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22322,
											"end": 22463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22469,
											"end": 22818,
											"name": "tag",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 22469,
											"end": 22818,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22538,
											"end": 22544,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22587,
											"end": 22589,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22575,
											"end": 22584,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22566,
											"end": 22573,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22562,
											"end": 22585,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22558,
											"end": 22590,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 22555,
											"end": 22674,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22555,
											"end": 22674,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 22555,
											"end": 22674,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22593,
											"end": 22672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 22593,
											"end": 22672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 22593,
											"end": 22672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22593,
											"end": 22672,
											"name": "tag",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 22593,
											"end": 22672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22555,
											"end": 22674,
											"name": "tag",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 22555,
											"end": 22674,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22713,
											"end": 22714,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22738,
											"end": 22801,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 22793,
											"end": 22800,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22784,
											"end": 22790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22773,
											"end": 22782,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 22769,
											"end": 22791,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22738,
											"end": 22801,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 22738,
											"end": 22801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22738,
											"end": 22801,
											"name": "tag",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 22738,
											"end": 22801,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22728,
											"end": 22801,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22728,
											"end": 22801,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22684,
											"end": 22811,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22469,
											"end": 22818,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22469,
											"end": 22818,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22469,
											"end": 22818,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22469,
											"end": 22818,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22469,
											"end": 22818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "tag",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23004,
											"end": 23007,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23026,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 23117,
											"end": 23120,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23108,
											"end": 23114,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 23026,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 23026,
											"end": 23121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23026,
											"end": 23121,
											"name": "tag",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 23026,
											"end": 23121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23019,
											"end": 23121,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23019,
											"end": 23121,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23138,
											"end": 23233,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 23229,
											"end": 23232,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23220,
											"end": 23226,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23138,
											"end": 23233,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 23138,
											"end": 23233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23138,
											"end": 23233,
											"name": "tag",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 23138,
											"end": 23233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23131,
											"end": 23233,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23131,
											"end": 23233,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23250,
											"end": 23253,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23243,
											"end": 23253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23243,
											"end": 23253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22824,
											"end": 23259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "tag",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23386,
											"end": 23390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23424,
											"end": 23426,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 23413,
											"end": 23422,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23409,
											"end": 23427,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23401,
											"end": 23427,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23401,
											"end": 23427,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23437,
											"end": 23508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 23505,
											"end": 23506,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23494,
											"end": 23503,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23490,
											"end": 23507,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 23437,
											"end": 23508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 23437,
											"end": 23508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23437,
											"end": 23508,
											"name": "tag",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 23437,
											"end": 23508,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23518,
											"end": 23590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 23586,
											"end": 23588,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23575,
											"end": 23584,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23571,
											"end": 23589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23562,
											"end": 23568,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23518,
											"end": 23590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 23518,
											"end": 23590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23518,
											"end": 23590,
											"name": "tag",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 23518,
											"end": 23590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23265,
											"end": 23597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23603,
											"end": 23783,
											"name": "tag",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 23603,
											"end": 23783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23651,
											"end": 23728,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23648,
											"end": 23649,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23641,
											"end": 23729,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23748,
											"end": 23752,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 23745,
											"end": 23746,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 23738,
											"end": 23753,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23772,
											"end": 23776,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 23769,
											"end": 23770,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23762,
											"end": 23777,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTEventMusic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"approveMintingAll()": "2e410e8e",
							"approveMintingOne(address)": "e973799a",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getMintRequest(address)": "ecedc680",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintRequests(address)": "ca5e0e88",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"requestMint(string)": "8ac5dea1",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MintRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMintingAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"approveMintingOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"getMintRequest\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintRequests\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"requestMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTEventMusic.sol\":\"NFTEventConcert\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTEventMusic.sol\":{\"keccak256\":\"0x3481f4050fa32dfe36c6adb4f84278dcab21a9a2d1baac9bce5923ccb8a948f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c6fdf6149435cfe4afaca441e5c4c354a031bc48b3a6b7b162d5f8943a757ba\",\"dweb:/ipfs/QmZsFP3GWVQkrmTkuWBLmjpFNbax5Gedo5oT84CQCSAwnY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1517,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3131,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 3133,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_mintingApproved",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 3135,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "_maxMintPerAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 3140,
								"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
								"label": "mintRequests",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(MintRequest)3145_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(MintRequest)3145_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTEventConcert.MintRequest)",
								"numberOfBytes": "32",
								"value": "t_struct(MintRequest)3145_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(MintRequest)3145_storage": {
								"encoding": "inplace",
								"label": "struct NFTEventConcert.MintRequest",
								"members": [
									{
										"astId": 3142,
										"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
										"label": "uri",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 3144,
										"contract": "contracts/NFTEventMusic.sol:NFTEventConcert",
										"label": "approved",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1666,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1665
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1956
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 1957,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1956,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1956
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1956,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1956,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								1956
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"ERC165": [
							1944
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							1956
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1643
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1920
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1644,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1643,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1666,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1921,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1920,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1945,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1956,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1944,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1944,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1643,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1643,
								1442,
								1944,
								1956,
								1665
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1920,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1943,
										1955
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1643_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1643_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1643",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1943,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1944,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1956,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1634
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1642
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1956
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 1957,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1956,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1956,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								1956
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"ERC721": [
							1325
						],
						"ERC721Burnable": [
							1489
						]
					},
					"id": 1490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1326,
							"src": "152:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "160:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1666,
							"src": "190:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1665,
										"src": "198:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1468,
										"name": "Context",
										"nameLocations": [
											"372:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "372:7:8"
									},
									"id": 1469,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:8"
								},
								{
									"baseName": {
										"id": 1470,
										"name": "ERC721",
										"nameLocations": [
											"381:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "381:6:8"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "381:6:8"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1467,
								"nodeType": "StructuredDocumentation",
								"src": "243:92:8",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1489,
							"linearizedBaseContracts": [
								1489,
								1325,
								269,
								1643,
								1442,
								1944,
								1956,
								1665
							],
							"name": "ERC721Burnable",
							"nameLocation": "354:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "607:268:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "834:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "834:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "834:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "855:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1477,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "826:42:8"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "394:162:8",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "570:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "583:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "575:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:17:8"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:8"
									},
									"scope": 1489,
									"src": "561:314:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1490,
							"src": "336:541:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "126:752:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1615
						],
						"IERC165": [
							1956
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1920
						]
					},
					"id": 1616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 1326,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1492,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 1921,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1494,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1920,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 176,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1496,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 152,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1498,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1956,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1501,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:9"
									},
									"id": 1502,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:9"
								},
								{
									"baseName": {
										"id": 1503,
										"name": "ERC721",
										"nameLocations": [
											"479:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:9"
									},
									"id": 1504,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1500,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1615,
							"linearizedBaseContracts": [
								1615,
								1325,
								269,
								1643,
								175,
								1442,
								1944,
								1956,
								1665
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1507,
									"libraryName": {
										"id": 1505,
										"name": "Strings",
										"nameLocations": [
											"498:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1920,
										"src": "498:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:9",
									"typeName": {
										"id": 1506,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1513,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "706:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1508,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1511,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1509,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1517,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "817:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1516,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:9",
										"keyType": {
											"id": 1514,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1515,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										1955
									],
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "1045:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1528,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "1062:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1529,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1077:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1533,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "1125:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1531,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1615_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1536,
												"nodeType": "Return",
												"src": "1055:82:9"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1522,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:9"
											},
											{
												"id": 1523,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1956,
												"src": "1021:7:9"
											}
										],
										"src": "1004:25:9"
									},
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:9"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1039:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:9"
									},
									"scope": 1615,
									"src": "937:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "1298:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1548,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "1322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1547,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:9"
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "1341:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1551,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1556,
												"initialValue": {
													"baseExpression": {
														"id": 1553,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "1367:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1555,
													"indexExpression": {
														"id": 1554,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "1378:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:9"
											},
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "1396:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1557,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1559,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1564,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "1506:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1562,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "1496:70:9",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "1525:41:9",
													"statements": [
														{
															"expression": {
																"id": 1569,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1546:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1570,
															"nodeType": "Return",
															"src": "1539:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1575,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "1671:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"nodeType": "IfStatement",
												"src": "1661:95:9",
												"trueBody": {
													"id": 1587,
													"nodeType": "Block",
													"src": "1694:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "1729:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1584,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "1735:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1580,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1586,
															"nodeType": "Return",
															"src": "1708:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1591,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "1788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1589,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1615_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1593,
												"nodeType": "Return",
												"src": "1766:30:9"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1543,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:9"
									},
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1228:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:9"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1615,
									"src": "1210:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "2003:86:9",
										"statements": [
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1603,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1605,
														"indexExpression": {
															"id": 1604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1606,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "2035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "EmitStatement",
												"src": "2054:28:9"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1961:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1599,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:9"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:9"
									},
									"scope": 1615,
									"src": "1922:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "431:1660:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1643
						]
					},
					"id": 1644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1644,
							"sourceUnit": 1443,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1618,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1621,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:10"
									},
									"id": 1622,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1620,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1643,
							"linearizedBaseContracts": [
								1643,
								1442,
								1956
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1643,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1631,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1643,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1643,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1644,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1665
						]
					},
					"id": 1666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1646,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1665,
							"linearizedBaseContracts": [
								1665
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1651,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1653,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1665,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1660,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1662,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1665,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1666,
							"src": "624:235:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3010
						],
						"SignedMath": [
							3115
						],
						"Strings": [
							1920
						]
					},
					"id": 1921,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1921,
							"sourceUnit": 3011,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1668,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3010,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1921,
							"sourceUnit": 3116,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1670,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3115,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1920,
							"linearizedBaseContracts": [
								1920
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1675,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1920,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1673,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1678,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1920,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1676,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1677,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1685,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1731,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1694
														],
														"declarations": [
															{
																"constant": false,
																"id": 1694,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1731,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1693,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1701,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1697,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1695,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3010,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3010_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2830,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1703
														],
														"declarations": [
															{
																"constant": false,
																"id": 1703,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1731,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1702,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1708,
														"initialValue": {
															"arguments": [
																{
																	"id": 1706,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1704,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1710
														],
														"declarations": [
															{
																"constant": false,
																"id": 1710,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1731,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1709,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1711,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1694,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1710,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1712,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1727,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1714,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1710,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1716,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1675,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1710,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1688,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1717,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1721,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1722,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1726,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1725,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1728,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1729,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1692,
														"id": 1730,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1920,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1744,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1753,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1736,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1751,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3115,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3115_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3114,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1750,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1741,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1757,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1735,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1920,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1777,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1771,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1769,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3010,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3010_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2952,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1767,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1779,
																	1862,
																	1882
																],
																"referencedDeclaration": 1862,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1766,
														"id": 1776,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1920,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"id": 1791,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1782,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1793,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1798,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1795,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1804,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1806,
														"indexExpression": {
															"hexValue": "30",
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1810,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1812,
														"indexExpression": {
															"hexValue": "31",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1844,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1830,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1832,
																	"indexExpression": {
																		"id": 1831,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1833,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1837,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1834,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1839,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1840,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1843,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1824,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"initializationExpression": {
													"assignments": [
														1817
													],
													"declarations": [
														{
															"constant": false,
															"id": 1817,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1845,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1816,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1823,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1819,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1827,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1829,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1846,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1855,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1854,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1850,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1851,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1849,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1853,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1858,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1856,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1860,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1920,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1875,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1873,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1871,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1878,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1870,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1779,
															1862,
															1882
														],
														"referencedDeclaration": 1862,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1880,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1920,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1894,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1892,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1899,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1897,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1906,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1885,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1904,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1903,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1912,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1887,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1910,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1909,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1917,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1886,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1920,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1921,
							"src": "251:2847:12",
							"usedErrors": [
								1685
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1944
						],
						"IERC165": [
							1956
						]
					},
					"id": 1945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1922,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 1957,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1923,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1956,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1926,
										"name": "IERC165",
										"nameLocations": [
											"687:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1956,
										"src": "687:7:13"
									},
									"id": 1927,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1925,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1944,
							"linearizedBaseContracts": [
								1944,
								1956
							],
							"name": "ERC165",
							"nameLocation": "677:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1955
									],
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "844:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1935,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "861:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1937,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1956,
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1956_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1956_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1936,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1956",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1941,
												"nodeType": "Return",
												"src": "854:47:13"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "789:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1929,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:13"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "838:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:13"
									},
									"scope": 1944,
									"src": "762:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1945,
							"src": "659:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1956
						]
					},
					"id": 1957,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1946,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1947,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1956,
							"linearizedBaseContracts": [
								1956
							],
							"name": "IERC165",
							"nameLocation": "431:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "817:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1949,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:14"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "860:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:14"
									},
									"scope": 1956,
									"src": "790:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1957,
							"src": "421:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3010
						]
					},
					"id": 3011,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1958,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1959,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3010,
							"linearizedBaseContracts": [
								3010
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1962,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1967,
									"members": [
										{
											"id": 1963,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 1964,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 1965,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 1966,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 1997,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															1980
														],
														"declarations": [
															{
																"constant": false,
																"id": 1980,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 1997,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1979,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1984,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1981,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1982,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1985,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1986,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1992,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1990,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1978,
															"id": 1991,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1994,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1980,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1995,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1978,
														"id": 1996,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 3010,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 2025,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2011,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2004,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2012,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2018,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2010,
															"id": 2017,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2020,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2004,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2023,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2010,
														"id": 2024,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 3010,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 2067,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2039,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2046,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2044,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2038,
															"id": 2045,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															2048
														],
														"declarations": [
															{
																"constant": false,
																"id": 2048,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2067,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2052,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2050,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2053,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2054,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2062,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2060,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2038,
															"id": 2061,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2064,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2065,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2038,
														"id": 2066,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 3010,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2095,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2081,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2088,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2086,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2080,
															"id": 2087,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2090,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2091,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2080,
														"id": 2094,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2076,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 3010,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2123,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2109,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2116,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2114,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2115,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2118,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2119,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2121,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2108,
														"id": 2122,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 3010,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2135,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2136,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2134,
												"id": 2141,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 3010,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2153,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2154,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2157,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2156,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2159,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 3010,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2171,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2172,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2175,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2176,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2170,
												"id": 2182,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 3010,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2194,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2202,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2201,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2197,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2198,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2189,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2193,
															"id": 2200,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2203,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2207,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2187,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2211,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2216,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 3010,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2342,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2231
														],
														"declarations": [
															{
																"constant": false,
																"id": 2231,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2342,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2230,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2235,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2232,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2233,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2237
														],
														"declarations": [
															{
																"constant": false,
																"id": 2237,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2342,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2238,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:15",
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nativeSrc": "4410:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nativeSrc": "4433:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nativeSrc": "4420:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nativeSrc": "4470:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nativeSrc": "4486:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nativeSrc": "4466:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2221,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2223,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2239,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2248,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2247,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2243,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2244,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2229,
																	"id": 2246,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2249,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2250,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2256,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2255,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2252,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2254,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2258
														],
														"declarations": [
															{
																"constant": false,
																"id": 2258,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2342,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2259,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:15",
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nativeSrc": "5513:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nativeSrc": "5526:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:15",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nativeSrc": "5653:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nativeSrc": "5642:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:15",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nativeSrc": "5700:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2225,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2258,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2258,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2258,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2221,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2223,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2260,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2262
														],
														"declarations": [
															{
																"constant": false,
																"id": 2262,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2342,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2269,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2265,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:15",
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nativeSrc": "6073:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nativeSrc": "6088:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nativeSrc": "6186:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nativeSrc": "6333:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nativeSrc": "6329:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nativeSrc": "6325:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2225,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2225,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2262,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2262,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2262,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2262,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2262,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2270,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2271,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2273,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2276,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2278
														],
														"declarations": [
															{
																"constant": false,
																"id": 2278,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2342,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2285,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2280,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2282,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2286,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2288,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2289,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2293,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2294,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2296,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2297,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2301,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2302,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2304,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2305,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2309,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2310,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2312,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2313,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2317,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2318,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2320,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2321,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2325,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2326,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2328,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2329,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2333,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2334,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2335,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2231,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2336,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2339,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2340,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2229,
														"id": 2341,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 3010,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2360
												],
												"declarations": [
													{
														"constant": false,
														"id": 2360,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2386,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"arguments": [
														{
															"id": 2362,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2363,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2364,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2361,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2344,
															2387
														],
														"referencedDeclaration": 2344,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2368,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1967",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1967",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2367,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3009,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1967_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2371,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2347,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2372,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2349,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2373,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2370,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2383,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2382,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2378,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2381,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2384,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2360,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2385,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1967",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2352,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 1967,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1967",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 3010,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2401,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2400,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2394,
															"id": 2399,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2403
												],
												"declarations": [
													{
														"constant": false,
														"id": 2403,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2498,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2412,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2406,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2405,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2666,
																			2701
																		],
																		"referencedDeclaration": 2666,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2410,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2497,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2423,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2434,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2445,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2456,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2457,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2458,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2459,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2460,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2467,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2469,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2470,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2471,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2474,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2478,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2480,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2481,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2482,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2403,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2485,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2489,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2491,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2492,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2493,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2403,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2490,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2394,
														"id": 2496,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 3010,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2532,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2511
														],
														"declarations": [
															{
																"constant": false,
																"id": 2511,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2532,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2510,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2515,
														"initialValue": {
															"arguments": [
																{
																	"id": 2513,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2512,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2499,
																	2534
																],
																"referencedDeclaration": 2499,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2516,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2518,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2505,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2517,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3009,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1967_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2522,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2520,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2511,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2521,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2511,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2523,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2502,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2529,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2509,
														"id": 2531,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1967",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2503,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 1967,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1967",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 3010,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2543
												],
												"declarations": [
													{
														"constant": false,
														"id": 2543,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2665,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2545,
												"initialValue": {
													"hexValue": "30",
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 2662,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2560,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2559,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2551,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2561,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2575,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2574,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2569,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2576,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2590,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2589,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2581,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2584,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2585,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2605,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2604,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2606,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2614,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2650,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2649,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2648,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2661,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 2660,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2656,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2663,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2543,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2541,
												"id": 2664,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 3010,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2700,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 2699,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															2678
														],
														"declarations": [
															{
																"constant": false,
																"id": 2678,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2699,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2677,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2682,
														"initialValue": {
															"arguments": [
																{
																	"id": 2680,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2679,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2666,
																	2701
																],
																"referencedDeclaration": 2666,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2683,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2678,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2685,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2672,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2684,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3009,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1967_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2687,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2688,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2678,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2690,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2696,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2676,
														"id": 2698,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1967",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 1967,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1967",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 3010,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													2710
												],
												"declarations": [
													{
														"constant": false,
														"id": 2710,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2829,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2712,
												"initialValue": {
													"hexValue": "30",
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 2826,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2713,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2729,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 2728,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2730,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2746,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 2745,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2735,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2741,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2744,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2747,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2763,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 2762,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2757,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2758,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2761,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2764,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2780,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 2779,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2769,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2774,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2778,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2797,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 2796,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2795,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2798,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2814,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 2813,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 2811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2812,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2815,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2704,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2827,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2710,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2708,
												"id": 2828,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 2702,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 3010,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2864,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 2863,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															2842
														],
														"declarations": [
															{
																"constant": false,
																"id": 2842,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2863,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2846,
														"initialValue": {
															"arguments": [
																{
																	"id": 2844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2843,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2830,
																	2865
																],
																"referencedDeclaration": 2830,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2847,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2849,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2836,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2848,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3009,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1967_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2853,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2852,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2842,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2833,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2860,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2840,
														"id": 2862,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1967",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2834,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 1967,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1967",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 3010,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2951,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													2874
												],
												"declarations": [
													{
														"constant": false,
														"id": 2874,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2951,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2876,
												"initialValue": {
													"hexValue": "30",
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 2948,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2877,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2891,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 2890,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 2884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2882,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2868,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2885,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 2888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2886,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2889,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2892,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2906,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 2905,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2897,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2868,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2900,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2901,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2904,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2921,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 2920,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2912,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2868,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2915,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 2918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2916,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2919,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2936,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 2935,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2927,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2868,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2930,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2931,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2934,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2947,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 2946,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2942,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2945,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2949,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2874,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2872,
												"id": 2950,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 2866,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2952,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2952,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 3010,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 2988,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															2964
														],
														"declarations": [
															{
																"constant": false,
																"id": 2964,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2988,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2963,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2968,
														"initialValue": {
															"arguments": [
																{
																	"id": 2966,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2955,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2965,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2952,
																	2990
																],
																"referencedDeclaration": 2952,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2969,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2964,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2971,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2958,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1967",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2970,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3009,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1967_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2978,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2973,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2976,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2974,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2964,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2975,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2977,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2979,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2955,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2962,
														"id": 2987,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2953,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1967",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2957,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2956,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 1967,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1967",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 3010,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3001,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2994,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1967",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1967",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2999,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2998,
												"id": 3007,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 2991,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1967",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2992,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1967,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 1967,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1967",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 3010,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3011,
							"src": "203:14914:15",
							"usedErrors": [
								1962
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3115
						]
					},
					"id": 3116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3012,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3013,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3115,
							"linearizedBaseContracts": [
								3115
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3023,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3016,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3024,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3027,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3026,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3016,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3022,
												"id": 3029,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3015,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3017,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3115,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3048,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3041,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3034,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3042,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3045,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3044,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3040,
												"id": 3047,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3032,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3033,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3035,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3038,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3115,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3092,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3060
												],
												"declarations": [
													{
														"constant": false,
														"id": 3060,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3092,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3059,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3073,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3061,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3062,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3054,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3064,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3065,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3052,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3066,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3054,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3068,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3074,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3060,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3079,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3060,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3077,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3075,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3084,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3052,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3085,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3054,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3087,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3089,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3058,
												"id": 3091,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3050,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3051,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3053,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3056,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3115,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3113,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3112,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3103,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3107,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3096,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3106,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3096,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3101,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3100,
														"id": 3111,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3094,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3095,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3115,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3116,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"contracts/NFTEventMusic.sol": {
				"ast": {
					"absolutePath": "contracts/NFTEventMusic.sol",
					"exportedSymbols": {
						"Context": [
							1665
						],
						"ERC165": [
							1944
						],
						"ERC721": [
							1325
						],
						"ERC721Burnable": [
							1489
						],
						"ERC721URIStorage": [
							1615
						],
						"IERC165": [
							1956
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1643
						],
						"IERC721Receiver": [
							1460
						],
						"NFTEventConcert": [
							3311
						],
						"Ownable": [
							147
						],
						"Strings": [
							1920
						]
					},
					"id": 3312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3312,
							"sourceUnit": 1326,
							"src": "58:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3312,
							"sourceUnit": 1616,
							"src": "116:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 3120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3312,
							"sourceUnit": 1490,
							"src": "195:76:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3312,
							"sourceUnit": 148,
							"src": "272:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3122,
										"name": "ERC721",
										"nameLocations": [
											"354:6:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "354:6:17"
									},
									"id": 3123,
									"nodeType": "InheritanceSpecifier",
									"src": "354:6:17"
								},
								{
									"baseName": {
										"id": 3124,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"362:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1615,
										"src": "362:16:17"
									},
									"id": 3125,
									"nodeType": "InheritanceSpecifier",
									"src": "362:16:17"
								},
								{
									"baseName": {
										"id": 3126,
										"name": "ERC721Burnable",
										"nameLocations": [
											"380:14:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1489,
										"src": "380:14:17"
									},
									"id": 3127,
									"nodeType": "InheritanceSpecifier",
									"src": "380:14:17"
								},
								{
									"baseName": {
										"id": 3128,
										"name": "Ownable",
										"nameLocations": [
											"396:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "396:7:17"
									},
									"id": 3129,
									"nodeType": "InheritanceSpecifier",
									"src": "396:7:17"
								}
							],
							"canonicalName": "NFTEventConcert",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3311,
							"linearizedBaseContracts": [
								3311,
								147,
								1489,
								1615,
								1325,
								269,
								1643,
								175,
								1442,
								1944,
								1956,
								1665
							],
							"name": "NFTEventConcert",
							"nameLocation": "335:15:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3131,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "426:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3311,
									"src": "410:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3133,
									"mutability": "mutable",
									"name": "_mintingApproved",
									"nameLocation": "457:16:17",
									"nodeType": "VariableDeclaration",
									"scope": 3311,
									"src": "444:29:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "444:4:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3135,
									"mutability": "mutable",
									"name": "_maxMintPerAddress",
									"nameLocation": "495:18:17",
									"nodeType": "VariableDeclaration",
									"scope": 3311,
									"src": "479:34:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "479:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ca5e0e88",
									"id": 3140,
									"mutability": "mutable",
									"name": "mintRequests",
									"nameLocation": "600:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3311,
									"src": "561:51:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_MintRequest_$3145_storage_$",
										"typeString": "mapping(address => struct NFTEventConcert.MintRequest)"
									},
									"typeName": {
										"id": 3139,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3136,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "569:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "561:31:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_MintRequest_$3145_storage_$",
											"typeString": "mapping(address => struct NFTEventConcert.MintRequest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3138,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3137,
												"name": "MintRequest",
												"nameLocations": [
													"580:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3145,
												"src": "580:11:17"
											},
											"referencedDeclaration": 3145,
											"src": "580:11:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MintRequest_$3145_storage_ptr",
												"typeString": "struct NFTEventConcert.MintRequest"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTEventConcert.MintRequest",
									"id": 3145,
									"members": [
										{
											"constant": false,
											"id": 3142,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "655:3:17",
											"nodeType": "VariableDeclaration",
											"scope": 3145,
											"src": "648:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3141,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "648:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3144,
											"mutability": "mutable",
											"name": "approved",
											"nameLocation": "673:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 3145,
											"src": "668:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3143,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "668:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintRequest",
									"nameLocation": "626:11:17",
									"nodeType": "StructDefinition",
									"scope": 3311,
									"src": "619:69:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3165,
										"nodeType": "Block",
										"src": "837:41:17",
										"statements": [
											{
												"expression": {
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3161,
														"name": "_mintingApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "847:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "866:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "847:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3164,
												"nodeType": "ExpressionStatement",
												"src": "847:24:17"
											}
										]
									},
									"id": 3166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3154,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3149,
													"src": "787:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3155,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3151,
													"src": "794:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3156,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3153,
												"name": "ERC721",
												"nameLocations": [
													"780:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "780:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "780:22:17"
										},
										{
											"arguments": [
												{
													"id": 3158,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3147,
													"src": "819:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3159,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3157,
												"name": "Ownable",
												"nameLocations": [
													"811:7:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "811:7:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "811:21:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "714:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "706:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "742:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "728:19:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "728:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "763:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "749:21:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "749:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:66:17"
									},
									"returnParameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:17"
									},
									"scope": 3311,
									"src": "694:184:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5d524e0183e95410ff30df610eeef1541403d23325ff607098b786db901f87d2",
									"id": 3174,
									"name": "MintRequested",
									"nameLocation": "890:13:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "920:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "904:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3170,
												"indexed": true,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "939:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "924:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "924:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3172,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "960:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "944:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:65:17"
									},
									"src": "884:85:17"
								},
								{
									"body": {
										"id": 3219,
										"nodeType": "Block",
										"src": "1032:354:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3182,
															"name": "_mintingApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3133,
															"src": "1050:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e67206e6f7420617070726f76656420796574",
															"id": 3183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1068:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4",
																"typeString": "literal_string \"Minting not approved yet\""
															},
															"value": "Minting not approved yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f043932b4b64d3b12f48a43307d128dfb680671abdd3ef6527fc919fbda0aed4",
																"typeString": "literal_string \"Minting not approved yet\""
															}
														],
														"id": 3181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1042:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:53:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3185,
												"nodeType": "ExpressionStatement",
												"src": "1042:53:17"
											},
											{
												"assignments": [
													3187
												],
												"declarations": [
													{
														"constant": false,
														"id": 3187,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1113:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3219,
														"src": "1105:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1105:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3190,
												"initialValue": {
													"id": 3189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1123:14:17",
													"subExpression": {
														"id": 3188,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "1123:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1105:32:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3192,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1157:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1157:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3194,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "1166:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3191,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "1147:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3196,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "1197:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3199,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3176,
															"src": "1206:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3197,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "1184:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3201,
												"nodeType": "ExpressionStatement",
												"src": "1184:26:17"
											},
											{
												"expression": {
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3202,
															"name": "mintRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "1229:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_MintRequest_$3145_storage_$",
																"typeString": "mapping(address => struct NFTEventConcert.MintRequest storage ref)"
															}
														},
														"id": 3205,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3203,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1242:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1242:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1229:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintRequest_$3145_storage",
															"typeString": "struct NFTEventConcert.MintRequest storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3207,
																"name": "uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "1284:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1311:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3206,
															"name": "MintRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "1253:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MintRequest_$3145_storage_ptr_$",
																"typeString": "type(struct NFTEventConcert.MintRequest storage pointer)"
															}
														},
														"id": 3209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1279:3:17",
															"1301:8:17"
														],
														"names": [
															"uri",
															"approved"
														],
														"nodeType": "FunctionCall",
														"src": "1253:74:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintRequest_$3145_memory_ptr",
															"typeString": "struct NFTEventConcert.MintRequest memory"
														}
													},
													"src": "1229:98:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintRequest_$3145_storage",
														"typeString": "struct NFTEventConcert.MintRequest storage ref"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "1229:98:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3213,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1357:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1357:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3215,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3176,
															"src": "1366:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3216,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "1371:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3212,
														"name": "MintRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3174,
														"src": "1343:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256)"
														}
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:36:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3218,
												"nodeType": "EmitStatement",
												"src": "1338:41:17"
											}
										]
									},
									"functionSelector": "8ac5dea1",
									"id": 3220,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3178,
												"name": "onlyOwner",
												"nameLocations": [
													"1022:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1022:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1022:9:17"
										}
									],
									"name": "requestMint",
									"nameLocation": "984:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1010:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3220,
												"src": "996:17:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "996:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:19:17"
									},
									"returnParameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:17"
									},
									"scope": 3311,
									"src": "975:411:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "1438:40:17",
										"statements": [
											{
												"expression": {
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3225,
														"name": "_mintingApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "1448:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1467:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1448:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3228,
												"nodeType": "ExpressionStatement",
												"src": "1448:23:17"
											}
										]
									},
									"functionSelector": "2e410e8e",
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3222,
												"name": "onlyOwner",
												"nameLocations": [
													"1428:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1428:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1428:9:17"
										}
									],
									"name": "approveMintingAll",
									"nameLocation": "1401:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:17"
									},
									"returnParameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:17"
									},
									"scope": 3311,
									"src": "1392:86:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3254,
										"nodeType": "Block",
										"src": "1540:130:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3238,
																		"name": "mintRequests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3140,
																		"src": "1558:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_MintRequest_$3145_storage_$",
																			"typeString": "mapping(address => struct NFTEventConcert.MintRequest storage ref)"
																		}
																	},
																	"id": 3240,
																	"indexExpression": {
																		"id": 3239,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3232,
																		"src": "1571:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1558:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MintRequest_$3145_storage",
																		"typeString": "struct NFTEventConcert.MintRequest storage ref"
																	}
																},
																"id": 3241,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1575:8:17",
																"memberName": "approved",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3144,
																"src": "1558:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 3242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1587:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1558:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420616c726561647920617070726f766564",
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1594:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6",
																"typeString": "literal_string \"Request already approved\""
															},
															"value": "Request already approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fdbf480bfbc6b45920463f56e00df2d2dd2669d5b46e89457ffc422d2db98ae6",
																"typeString": "literal_string \"Request already approved\""
															}
														],
														"id": 3237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1550:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1550:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3246,
												"nodeType": "ExpressionStatement",
												"src": "1550:71:17"
											},
											{
												"expression": {
													"id": 3252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3247,
																"name": "mintRequests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3140,
																"src": "1631:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_MintRequest_$3145_storage_$",
																	"typeString": "mapping(address => struct NFTEventConcert.MintRequest storage ref)"
																}
															},
															"id": 3249,
															"indexExpression": {
																"id": 3248,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3232,
																"src": "1644:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1631:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintRequest_$3145_storage",
																"typeString": "struct NFTEventConcert.MintRequest storage ref"
															}
														},
														"id": 3250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1648:8:17",
														"memberName": "approved",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3144,
														"src": "1631:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1659:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1631:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3253,
												"nodeType": "ExpressionStatement",
												"src": "1631:32:17"
											}
										]
									},
									"functionSelector": "e973799a",
									"id": 3255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3234,
												"name": "onlyOwner",
												"nameLocations": [
													"1530:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1530:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1530:9:17"
										}
									],
									"name": "approveMintingOne",
									"nameLocation": "1493:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1519:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3255,
												"src": "1511:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:12:17"
									},
									"returnParameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1540:0:17"
									},
									"scope": 3311,
									"src": "1484:186:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3277,
										"nodeType": "Block",
										"src": "1754:111:17",
										"statements": [
											{
												"assignments": [
													3266
												],
												"declarations": [
													{
														"constant": false,
														"id": 3266,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "1784:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3277,
														"src": "1764:27:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintRequest_$3145_storage_ptr",
															"typeString": "struct NFTEventConcert.MintRequest"
														},
														"typeName": {
															"id": 3265,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3264,
																"name": "MintRequest",
																"nameLocations": [
																	"1764:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3145,
																"src": "1764:11:17"
															},
															"referencedDeclaration": 3145,
															"src": "1764:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintRequest_$3145_storage_ptr",
																"typeString": "struct NFTEventConcert.MintRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3270,
												"initialValue": {
													"baseExpression": {
														"id": 3267,
														"name": "mintRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "1794:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_MintRequest_$3145_storage_$",
															"typeString": "mapping(address => struct NFTEventConcert.MintRequest storage ref)"
														}
													},
													"id": 3269,
													"indexExpression": {
														"id": 3268,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "1807:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1794:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintRequest_$3145_storage",
														"typeString": "struct NFTEventConcert.MintRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:46:17"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 3271,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3266,
																"src": "1828:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintRequest_$3145_storage_ptr",
																	"typeString": "struct NFTEventConcert.MintRequest storage pointer"
																}
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1836:3:17",
															"memberName": "uri",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3142,
															"src": "1828:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 3273,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3266,
																"src": "1841:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintRequest_$3145_storage_ptr",
																	"typeString": "struct NFTEventConcert.MintRequest storage pointer"
																}
															},
															"id": 3274,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1849:8:17",
															"memberName": "approved",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3144,
															"src": "1841:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3275,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:31:17",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_bool_$",
														"typeString": "tuple(string storage ref,bool)"
													}
												},
												"functionReturnParameters": 3263,
												"id": 3276,
												"nodeType": "Return",
												"src": "1820:38:17"
											}
										]
									},
									"functionSelector": "ecedc680",
									"id": 3278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMintRequest",
									"nameLocation": "1685:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1708:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "1700:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:12:17"
									},
									"returnParameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "1733:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1733:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "1748:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1748:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:21:17"
									},
									"scope": 3311,
									"src": "1676:189:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512,
										1595
									],
									"body": {
										"id": 3293,
										"nodeType": "Block",
										"src": "2081:47:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3290,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "2113:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3288,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2098:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NFTEventConcert_$3311_$",
																"typeString": "type(contract super NFTEventConcert)"
															}
														},
														"id": 3289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2104:8:17",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1595,
														"src": "2098:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2098:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3287,
												"id": 3292,
												"nodeType": "Return",
												"src": "2091:30:17"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1948:8:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3284,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3282,
												"name": "ERC721",
												"nameLocations": [
													"2019:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "2019:6:17"
											},
											{
												"id": 3283,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"2027:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1615,
												"src": "2027:16:17"
											}
										],
										"src": "2010:34:17"
									},
									"parameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1965:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "1957:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:17:17"
									},
									"returnParameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "2062:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2062:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2061:15:17"
									},
									"scope": 3311,
									"src": "1939:189:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										417,
										1538
									],
									"body": {
										"id": 3309,
										"nodeType": "Block",
										"src": "2279:60:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3306,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "2320:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3304,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2296:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NFTEventConcert_$3311_$",
																"typeString": "type(contract super NFTEventConcert)"
															}
														},
														"id": 3305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2302:17:17",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "2296:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:36:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3303,
												"id": 3308,
												"nodeType": "Return",
												"src": "2289:43:17"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2143:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3300,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3298,
												"name": "ERC721",
												"nameLocations": [
													"2226:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "2226:6:17"
											},
											{
												"id": 3299,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"2234:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1615,
												"src": "2234:16:17"
											}
										],
										"src": "2217:34:17"
									},
									"parameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2168:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "2161:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3295,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2161:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:20:17"
									},
									"returnParameters": {
										"id": 3303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "2269:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2269:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:6:17"
									},
									"scope": 3311,
									"src": "2134:205:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3312,
							"src": "326:2015:17",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359,
								3174
							]
						}
					],
					"src": "32:2310:17"
				},
				"id": 17
			}
		}
	}
}